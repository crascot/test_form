{"version":3,"sources":["form/login.js","form/register.js","form/form.js","index.js"],"names":["useStyles","makeStyles","body","margin","paddingTop","borderTop","register","textDecoration","color","hide","display","Login","classes","useState","nickname","setNickname","password","setPassword","Clear","localStorage","clear","useEffect","getItem","Card","className","Grid","container","direction","justify","Typography","variant","Button","onClick","to","Input","value","onChange","event","target","setItem","type","placeholder","width","alignItems","id","size","Promise","resolve","reject","setTimeout","alert","length","document","getElementById","style","pointerEvents","classList","remove","loginData","then","data","add","render","Container","maxWidth","CircularProgress","Register","email","setEmail","confirmPassword","setConfirmPassword","reg","test","formData","Form","basename","exact","path","component","ReactDOM"],"mappings":"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","file":"static/js/main.96e38640.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { render } from '@testing-library/react';\r\nimport {\r\n  Input,\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  Typography,\r\n  Card,\r\n  CircularProgress,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  body: {\r\n    margin: '20px 0',\r\n    paddingTop: 20,\r\n    borderTop: '3px solid #0dcaf0',\r\n  },\r\n  register: {\r\n    '& *': {\r\n      textDecoration: 'none',\r\n      color: 'inherit',\r\n    }\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n    margin: 30,\r\n  }\r\n})\r\n\r\nconst Login = () => {\r\n\r\n  const classes = useStyles()\r\n\r\n  const [nickname, setNickname] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  function targetName(event) {\r\n    setNickname(event.target.value)\r\n    localStorage.setItem('nickname', event.target.value)\r\n  }\r\n  function targetPassword(event) {\r\n    setPassword(event.target.value)\r\n    localStorage.setItem('password', event.target.value)\r\n  }\r\n\r\n  function Click() {\r\n    let promise = new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (!nickname) {\r\n          reject(alert('Пожалуйста введите ваше имя'))\r\n        } else if (+nickname) {\r\n          reject(alert('Имя не может состоять из цифр'))\r\n        } else if (!password) {\r\n          reject(alert('Введите пароль'))\r\n        } else if (password.length < 8) {\r\n          reject(alert('Этот пароль слишкой короткий'))\r\n        } else {\r\n          document.getElementById('login').style.pointerEvents = 'none';\r\n          document.getElementById('loader').classList.remove(classes.hide)\r\n        }\r\n        setTimeout(() => {\r\n          const loginData = [\r\n            localStorage.getItem('nickname'),\r\n            localStorage.getItem('password')\r\n          ]\r\n          resolve(loginData)\r\n        }, 3000);\r\n      }, 0)\r\n    })\r\n    promise\r\n      .then(data => {\r\n        document.getElementById('loader').classList.add(classes.hide)\r\n        render(\r\n          <Container maxWidth='sm'>\r\n            <Card className='form-register data'>\r\n              <Typography variant=\"subtitle1\">Ваше имя: {data[0]}</Typography >\r\n              <Typography variant=\"subtitle1\">Ваш пароль: {data[1]}</Typography >\r\n            </Card>\r\n          </Container>\r\n        )\r\n      })\r\n  }\r\n\r\n  function Clear() {\r\n    localStorage.clear()\r\n\r\n    setNickname('');\r\n    setPassword('')\r\n  }\r\n\r\n  useEffect(() => {\r\n    setNickname(localStorage.getItem('nickname'))\r\n    setPassword(localStorage.getItem('password'))\r\n  }, [])\r\n\r\n  return (\r\n    <Card className='form'>\r\n      <Grid className='form-register head' container direction=\"row\" justify=\"space-between\">\r\n        <Typography variant='h5'>Войти в систему</Typography>\r\n        <Typography variant='h5'>или</Typography>\r\n        <Button onClick={Clear} className={classes.register} variant=\"outlined\" color=\"primary\"><Link to='/register'>Зарегистриговаться</Link></Button>\r\n      </Grid>\r\n      <Grid className={`form-register ${classes.body}`}>\r\n        <Input value={nickname} onChange={targetName} type='text' placeholder='Введите имя' /> <hr width='0' />\r\n        <Input value={password} onChange={targetPassword} type='password' placeholder='Введите пароль' /> <hr width='0' />\r\n      </Grid>\r\n      <Grid className='form-register footer' container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\r\n        <Button id='login' size=\"small\" variant=\"contained\" onClick={Click} type='submit' >Войти</Button >\r\n        <CircularProgress id='loader' className={`${classes.hide} visible`} />\r\n        <Button onClick={Clear} >Очистить</Button>\r\n      </Grid>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Login;","import React, { useState, useEffect } from 'react';\r\nimport { render } from '@testing-library/react';\r\nimport {\r\n    Input,\r\n    Button,\r\n    Card,\r\n    Grid,\r\n    Container,\r\n    Typography,\r\n    CircularProgress,\r\n    makeStyles\r\n} from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    body: {\r\n        margin: '20px 0',\r\n        paddingTop: 20,\r\n        borderTop: '3px solid #0dcaf0',\r\n    },\r\n    register: {\r\n        '& *': {\r\n            textDecoration: 'none',\r\n            color: 'inherit',\r\n        }\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n        margin: 30,\r\n    }\r\n})\r\n\r\nconst Register = () => {\r\n\r\n    const classes = useStyles()\r\n\r\n    const [nickname, setNickname] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n\r\n    function targetName(event) {\r\n        setNickname(event.target.value)\r\n        localStorage.setItem('nickname', event.target.value)\r\n    }\r\n    function targetEmail(event) {\r\n        setEmail(event.target.value)\r\n        localStorage.setItem('email', event.target.value)\r\n    }\r\n    function targetPassword(event) {\r\n        setPassword(event.target.value)\r\n        localStorage.setItem('password', event.target.value)\r\n    }\r\n    function targetConfirmPassword(event) {\r\n        setConfirmPassword(event.target.value)\r\n        localStorage.setItem('confirmPassword', event.target.value)\r\n    }\r\n\r\n    function Click() {\r\n        const reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n\r\n        let promise = new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                if (!nickname) {\r\n                    reject(alert('Пожалуйста введите ваше имя'))\r\n                } else if (+nickname) {\r\n                    reject(alert('Имя не может состоять из цифр'))\r\n                } else if (!email) {\r\n                    reject(alert('Введите почту'))\r\n                } else if (!reg.test(email)) {\r\n                    reject(alert('Почта некорректна'))\r\n                } else if (!password) {\r\n                    reject(alert('Введите пароль'))\r\n                } else if (password.length < 8) {\r\n                    reject(alert('Этот пароль слишкой короткий'))\r\n                } else if (password !== confirmPassword) {\r\n                    reject(alert('Пароли не совпадают'))\r\n                } else {\r\n                    document.getElementById('register').style.pointerEvents = 'none';\r\n                    document.getElementById('loader').classList.remove(classes.hide)\r\n                }\r\n                setTimeout(() => {\r\n                    const formData = [\r\n                        localStorage.getItem('nickname'),\r\n                        localStorage.getItem('email'),\r\n                        localStorage.getItem('password'),\r\n                        localStorage.getItem('confirmPassword')\r\n                    ]\r\n                    resolve(formData)\r\n                }, 3000)\r\n            }, 0)\r\n        })\r\n        promise\r\n            .then(data => {\r\n                document.getElementById('loader').classList.add(classes.hide)\r\n                render(\r\n                    <Container maxWidth='sm'>\r\n                        <Card className='form-register data'>\r\n                            <Typography variant=\"subtitle1\">Ваше имя: {data[0]}</Typography>\r\n                            <Typography variant=\"subtitle1\">Ваша почта: {data[1]}</Typography>\r\n                            <Typography variant=\"subtitle1\">Ваш пароль: {data[2]}</Typography>\r\n                        </Card>\r\n                    </Container>\r\n                )\r\n            })\r\n    }\r\n\r\n    function Clear() {\r\n        localStorage.clear()\r\n\r\n        setNickname('');\r\n        setEmail('');\r\n        setPassword('');\r\n        setConfirmPassword('');\r\n    }\r\n\r\n    useEffect(() => {\r\n        setNickname(localStorage.getItem('nickname'))\r\n        setEmail(localStorage.getItem('email'))\r\n        setPassword(localStorage.getItem('password'))\r\n        setConfirmPassword(localStorage.getItem('confirmPassword'))\r\n    }, [])\r\n\r\n    return (\r\n        <Card className='form'>\r\n            <Grid className='form-register head' container direction=\"row\" justify=\"space-between\">\r\n                <Typography variant='h5'>Зарегистриговаться</Typography>\r\n                <Typography variant='h5'>или</Typography>\r\n                <Button onClick={Clear} className={classes.register} variant=\"outlined\" color=\"primary\"><Link to='/'>Войти</Link></Button>\r\n            </Grid>\r\n            <Grid className={`form-register ${classes.body}`}>\r\n                <Input value={nickname} onChange={targetName} type='text' placeholder='Введите имя' /> <hr width='0' />\r\n                <Input value={email} onChange={targetEmail} type='email' placeholder='Введите email' /> <hr width='0' />\r\n                <Input value={password} onChange={targetPassword} type='password' placeholder='Придумайте пароль' /> <hr width='0' />\r\n                <Input value={confirmPassword} onChange={targetConfirmPassword} type='password' placeholder='Подтвердите пароль' /> <hr width='0' />\r\n            </Grid>\r\n            <Grid className='form-register footer' container direction=\"row\" justify=\"space-between\">\r\n                <Button id='register' size=\"small\" variant=\"contained\" onClick={Click} type='submit' >Зарегистриговаться</Button >\r\n                <CircularProgress id='loader' className={`${classes.hide} + visible`} />\r\n                <Button onClick={Clear} >Очистить</Button>\r\n            </Grid>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport { Container } from '@material-ui/core';\r\nimport Login from './login';\r\nimport Register from './register';\r\nimport './form.scss';\r\nimport { HashRouter as Router, Route } from 'react-router-dom';\r\n\r\n\r\nconst Form = () => {\r\n  return (\r\n    <Router basename='/test_form'>\r\n      <Container maxWidth='sm'>\r\n        <Route exact path='/' component={Login} />\r\n        <Route exact path='/register' component={Register} />\r\n      </Container>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Form from './form/form';\r\n\r\nReactDOM.render(<Form />, document.getElementById('root'));"],"sourceRoot":""}