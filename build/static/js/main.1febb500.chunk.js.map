{"version":3,"sources":["login.js","register.js","index.js"],"names":["Login","useState","nickname","setNickname","password","setPassword","useEffect","localStorage","getItem","Card","maxWidth","style","padding","Input","value","onChange","event","target","setItem","type","placeholder","width","Button","size","variant","onClick","Promise","resolve","reject","setTimeout","alert","length","loginData","then","data","render","clear","Register","email","setEmail","confirmPassword","setConfirmPassword","reg","test","formData","renderLogin","document","getElementById","renderRegister","Form","Container","display","justifyContent","id","ReactDOM"],"mappings":"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","file":"static/js/main.1febb500.chunk.js","sourcesContent":["import { render } from '@testing-library/react';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Input, Button, Card } from '@material-ui/core';\r\n\r\n\r\nconst Login = () => {\r\n\r\n  const [nickname, setNickname] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  function targetName(event) {\r\n    setNickname(event.target.value)\r\n    localStorage.setItem('nickname', event.target.value)\r\n  }\r\n  function targetPassword(event) {\r\n    setPassword(event.target.value)\r\n    localStorage.setItem('password', event.target.value)\r\n  }\r\n\r\n  function Click() {\r\n    let promise = new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (!nickname) {\r\n          reject(alert('Пожалуйста введите ваше имя'))\r\n        } else if (+nickname) {\r\n          reject(alert('Имя не может состоять из цифр'))\r\n        } else if (!password) {\r\n          reject(alert('Введите пароль'))\r\n        } else if (password.length < 8) {\r\n          reject(alert('Этот пароль слишкой короткий'))\r\n        }\r\n        setTimeout(() => {\r\n          const loginData = [\r\n            localStorage.getItem('nickname'),\r\n            localStorage.getItem('password')\r\n          ]\r\n          resolve(loginData)\r\n        }, 1000)\r\n      }, 0)\r\n    })\r\n    promise\r\n      .then(data => render(\r\n        <Card>\r\n          <p>Ваше имя: {data[0]}</p>\r\n          <p>Ваш пароль: {data[1]}</p>\r\n        </Card>\r\n      ))\r\n  }\r\n\r\n  useEffect(() => {\r\n    setNickname(localStorage.getItem('nickname'))\r\n    setPassword(localStorage.getItem('password'))\r\n  }, [])\r\n\r\n  return (\r\n    <Card maxWidth=\"sm\" style={{padding: '10px'}}>\r\n      <Input value={nickname} onChange={targetName} type='text' placeholder='Введите имя' /> <hr width='0' />\r\n      <Input value={password} onChange={targetPassword} type='password' placeholder='Введите пароль' /> <hr width='0' />\r\n      <Button size=\"small\" variant=\"contained\" onClick={Click} type='submit' >Войти</Button >\r\n      <Button onClick={() => localStorage.clear()} >Очистить</Button>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Login;","import { render } from '@testing-library/react';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Input, Button, Card } from '@material-ui/core';\r\n\r\n\r\nconst Register = () => {\r\n\r\n  const [nickname, setNickname] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n\r\n  function targetName(event) {\r\n    setNickname(event.target.value)\r\n    localStorage.setItem('nickname', event.target.value)\r\n  }\r\n  function targetEmail(event) {\r\n    setEmail(event.target.value)\r\n    localStorage.setItem('email', event.target.value)\r\n  }\r\n  function targetPassword(event) {\r\n    setPassword(event.target.value)\r\n    localStorage.setItem('password', event.target.value)\r\n  }\r\n  function targetConfirmPassword(event) {\r\n    setConfirmPassword(event.target.value)\r\n    localStorage.setItem('confirmPassword', event.target.value)\r\n  }\r\n\r\n  function Click() {\r\n    const reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n\r\n    let promise = new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (!nickname) {\r\n          reject(alert('Пожалуйста введите ваше имя'))\r\n        } else if (+nickname) {\r\n          reject(alert('Имя не может состоять из цифр'))\r\n        } else if (!email) {\r\n          reject(alert('Введите почту'))\r\n        } else if (!reg.test(email)) {\r\n          reject(alert('Почта некорректна'))\r\n        } else if (!password) {\r\n          reject(alert('Введите пароль'))\r\n        } else if (password.length < 8) {\r\n          reject(alert('Этот пароль слишкой короткий'))\r\n        } else if (password !== confirmPassword) {\r\n          reject(alert('Пароли не совпадают'))\r\n        }\r\n        setTimeout(() => {\r\n          const formData = [\r\n            localStorage.getItem('nickname'),\r\n            localStorage.getItem('email'),\r\n            localStorage.getItem('password'),\r\n            localStorage.getItem('confirmPassword')\r\n          ]\r\n          resolve(formData)\r\n        }, 1000)\r\n      }, 0)\r\n    })\r\n    promise\r\n      .then(data => render(\r\n        <Card>\r\n          <p>Ваше имя: {data[0]}</p>\r\n          <p>Ваша почта: {data[1]}</p>\r\n          <p>Ваш пароль: {data[2]}</p>\r\n        </Card>\r\n      ))\r\n  }\r\n\r\n  useEffect(() => {\r\n    setNickname(localStorage.getItem('nickname'))\r\n    setEmail(localStorage.getItem('email'))\r\n    setPassword(localStorage.getItem('password'))\r\n    setConfirmPassword(localStorage.getItem('confirmPassword'))\r\n  }, [])\r\n\r\n  return (\r\n    <Card maxWidth=\"sm\" style={{padding: '10px'}}>\r\n      <Input value={nickname} onChange={targetName} type='text' placeholder='Введите имя' /> <hr width='0' />\r\n      <Input value={email} onChange={targetEmail} type='email' placeholder='Введите email' /> <hr width='0' />\r\n      <Input value={password} onChange={targetPassword} type='password' placeholder='Придумайте пароль' /> <hr width='0' />\r\n      <Input value={confirmPassword} onChange={targetConfirmPassword} type='password' placeholder='Подтвердите пароль' /> <hr width='0' />\r\n      <Button size=\"small\" variant=\"contained\" onClick={Click} type='submit' >Зарегистриговаться</Button >\r\n      <Button onClick={() => localStorage.clear()} >Очистить</Button>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport ReactDOM, { render } from 'react-dom';\r\nimport { Container, Button, Card } from '@material-ui/core';\r\nimport Login from './login';\r\nimport Register from './register';\r\n\r\nfunction renderLogin() {\r\n  render(\r\n    <Login />, document.getElementById('block')\r\n  )\r\n}\r\n\r\nfunction renderRegister() {\r\n  render(\r\n    <Register />, document.getElementById('block')\r\n  )\r\n}\r\n\r\nconst Form = () => {\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n      <Card style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n        <Button onClick={renderLogin}>Войти</Button>\r\n        <Button onClick={renderRegister}>Зарегистриговаться</Button>\r\n      </Card>\r\n\r\n      <Card id='block' />\r\n    </Container>\r\n  )\r\n}\r\n\r\nReactDOM.render(\r\n  <Form />,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}