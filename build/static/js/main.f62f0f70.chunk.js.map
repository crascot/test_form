{"version":3,"sources":["form/styles/styles.js","form/login.js","database/database.js","form/register.js","main/main.jsx","form/form.js","App.js","index.js"],"names":["useStyles","makeStyles","body","margin","paddingBottom","borderTop","width","marginTop","register","textDecoration","color","hide","display","success","Login","classes","useState","nickname","setNickname","password","setPassword","disabled","setDisabled","setHide","redirect","setRedirect","Clear","Card","className","Grid","container","direction","justify","Typography","variant","Button","to","TextField","id","label","value","onChange","event","target","type","alignItems","size","onClick","Promise","resolve","reject","alert","length","then","setTimeout","JSON","parse","localStorage","getItem","users","forEach","user","name","finally","CircularProgress","dataBase","Register","email","setEmail","confirmPassword","setConfirmPassword","reg","test","find","data","registerUsers","push","setItem","stringify","Main","Container","fixed","Form","maxWidth","basename","exact","path","component","App","useEffect","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f62f0f70.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core';\r\n\r\n\r\nexport const useStyles = makeStyles({\r\n    body: {\r\n      margin: '20px 0',\r\n      paddingBottom: 5,\r\n      borderTop: '3px solid #0dcaf0',\r\n  \r\n      '& *': {\r\n        width: '100%',\r\n        marginTop: 7,\r\n      },\r\n    },\r\n    register: {\r\n      '& *': {\r\n        textDecoration: 'none',\r\n        color: 'inherit',\r\n      }\r\n    },\r\n    hide: {\r\n      display: 'none',\r\n      margin: 30,\r\n    },\r\n    success: {\r\n      color: '#4caf50'\r\n    }\r\n  })","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n  Card,\r\n  CircularProgress,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { useStyles } from './styles/styles';\r\n\r\n\r\nconst Login = () => {\r\n\r\n  const classes = useStyles()\r\n\r\n  const [nickname, setNickname] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const [disabled, setDisabled] = useState(false)\r\n  const [hide, setHide] = useState(classes.hide)\r\n\r\n  const [redirect, setRedirect] = useState('')\r\n\r\n  function targetName(event) {\r\n    setNickname(event.target.value)\r\n  }\r\n  function targetPassword(event) {\r\n    setPassword(event.target.value)\r\n  }\r\n\r\n  function Click() {\r\n    let promise = new Promise((resolve, reject) => {\r\n      if (!nickname) {\r\n        reject(alert('Пожалуйста введите ваше имя'))\r\n      } else if (+nickname) {\r\n        reject(alert('Имя не может состоять из цифр'))\r\n      } else if (!password) {\r\n        reject(alert('Введите пароль'))\r\n      } else if (password.length < 8) {\r\n        reject(alert('Этот пароль слишкой короткий'))\r\n      } else {\r\n        setDisabled(true)\r\n        setHide()\r\n      }\r\n      resolve()\r\n    })\r\n    promise\r\n      .then(() => {\r\n        return new Promise((resolve, reject) => {\r\n          setTimeout(() => {\r\n            let DB = JSON.parse(localStorage.getItem('database'))\r\n            DB.users.forEach(user => {\r\n              if (user.name === nickname && user.password === password) {\r\n                resolve(alert('Добро пожаловать'))\r\n              } else {\r\n                reject(alert('Данного пользователя не существует или вы неправильно ввели свой пароль'))\r\n              }\r\n            });\r\n          }, 3000);\r\n        })\r\n      })\r\n      .then(() => {\r\n        setRedirect('/main')\r\n        Clear()\r\n      })\r\n      .finally(() => {\r\n        setDisabled(false)\r\n        setHide(classes.hide)\r\n      })\r\n  }\r\n\r\n  function Clear() {\r\n    setNickname('');\r\n    setPassword('');\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   setNickname(localStorage.getItem('nickname'))\r\n  //   setPassword(localStorage.getItem('password'))\r\n  // }, [])\r\n\r\n  return (\r\n    <Card className='form'>\r\n      <Grid className='form-register head' container direction=\"row\" justify=\"space-between\">\r\n        <Typography variant='h5'>Войти в систему</Typography>\r\n        <Typography variant='h5'>или</Typography>\r\n        <Button className={classes.register} disabled={disabled} variant=\"outlined\" color=\"primary\"><Link to='/register'>Зарегистриговаться</Link></Button>\r\n      </Grid>\r\n      <Grid className={`form-register ${classes.body}`} container>\r\n        <TextField id=\"standard-basic\" label=\"Введите имя\" value={nickname} onChange={targetName} disabled={disabled} type='text' />\r\n        <TextField id=\"standard-basic\" label=\"Введите пароль\" value={password} onChange={targetPassword} disabled={disabled} type='password' />\r\n      </Grid>\r\n      <Grid className='form-register footer' container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\r\n        <Button id='login' size=\"small\" disabled={disabled} variant=\"contained\" onClick={Click} type='submit'><Redirect to={redirect} />Войти</Button>\r\n        <CircularProgress id='loader' className={hide} />\r\n        <Button onClick={Clear} type='submit' disabled={disabled}>Очистить</Button>\r\n      </Grid>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Login;","export const dataBase = {\r\n    users: []\r\n}","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Button,\r\n    Card,\r\n    Grid,\r\n    Typography,\r\n    CircularProgress,\r\n    TextField\r\n} from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport { dataBase } from '../database/database';\r\nimport { useStyles } from './styles/styles';\r\n\r\n\r\nconst Register = () => {\r\n\r\n    const classes = useStyles()\r\n\r\n    const [nickname, setNickname] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n\r\n    const [disabled, setDisabled] = useState(false)\r\n    const [hide, setHide] = useState(classes.hide)\r\n\r\n    function targetName(event) {\r\n        setNickname(event.target.value)\r\n    }\r\n    function targetEmail(event) {\r\n        setEmail(event.target.value)\r\n    }\r\n    function targetPassword(event) {\r\n        setPassword(event.target.value)\r\n    }\r\n    function targetConfirmPassword(event) {\r\n        setConfirmPassword(event.target.value)\r\n    }\r\n\r\n    function Click() {\r\n        const reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n\r\n        let promise = new Promise((resolve, reject) => {\r\n            if (!nickname) {\r\n                reject(alert('Пожалуйста введите ваше имя'))\r\n            } else if (+nickname) {\r\n                reject(alert('Имя не может состоять из цифр'))\r\n            } else if (!email) {\r\n                reject(alert('Введите почту'))\r\n            } else if (!reg.test(email)) {\r\n                reject(alert('Почта некорректна'))\r\n            } else if (!password) {\r\n                reject(alert('Введите пароль'))\r\n            } else if (password.length < 8) {\r\n                reject(alert('Этот пароль слишкой короткий'))\r\n            } else if (password !== confirmPassword) {\r\n                reject(alert('Пароли не совпадают'))\r\n            } else {\r\n            setDisabled(true)\r\n            setHide()\r\n            }\r\n            resolve()\r\n        })\r\n        promise\r\n            .then(() => {\r\n                return new Promise((resolve, reject) => {\r\n                    setTimeout(() => {\r\n                        let DB = JSON.parse(localStorage.getItem('database'))\r\n                        let duplicate = DB.users.find(user => user.email === email)\r\n\r\n                        if (duplicate) reject(alert('Данная почта занята'))\r\n                        else resolve({\r\n                            name: nickname,\r\n                            email: email,\r\n                            password: password\r\n                        })\r\n                    }, 3000);\r\n                })\r\n            })\r\n            .then((data) => {\r\n                return new Promise(resolve => {\r\n                    let registerUsers = dataBase.users\r\n                    registerUsers.push(data)\r\n                    resolve(registerUsers)\r\n                })\r\n            })\r\n            .then((data) => {\r\n                localStorage.setItem('database', JSON.stringify({ users: data }))\r\n                Clear()\r\n            })\r\n            .finally(() => {\r\n                setDisabled(false)\r\n                setHide(classes.hide)\r\n            })\r\n    }\r\n\r\n    function Clear() {\r\n        setNickname('');\r\n        setEmail('');\r\n        setPassword('');\r\n        setConfirmPassword('');\r\n    }\r\n\r\n    // useEffect(() => {\r\n        \r\n    // }, [])\r\n\r\n    return (\r\n        <Card className='form'>\r\n            <Grid className='form-register head' container direction=\"row\" justify=\"space-between\">\r\n                <Typography variant='h5'>Зарегистриговаться</Typography>\r\n                <Typography variant='h5'>или</Typography>\r\n                <Button className={classes.register} disabled={disabled} variant=\"outlined\" color=\"primary\"><Link to='/'>Войти</Link></Button>\r\n            </Grid>\r\n            <Grid className={`form-register ${classes.body}`} container>\r\n                <TextField id=\"standard-basic\" label=\"Введите имя\" value={nickname} onChange={targetName} disabled={disabled} type='text' />\r\n                <TextField id=\"standard-basic\" label=\"Введите вашу почту\" value={email} onChange={targetEmail} disabled={disabled} type='email' />\r\n                <TextField id=\"standard-basic\" label=\"Придумайте пароль\" value={password} onChange={targetPassword} disabled={disabled} type='password' />\r\n                <TextField id=\"standard-basic\" label=\"Подтвердите пароль\" value={confirmPassword} onChange={targetConfirmPassword} disabled={disabled} type='password' />\r\n            </Grid>\r\n            <Grid className='form-register footer' container direction=\"row\" justify=\"space-between\">\r\n                <Button id='register' size=\"small\" disabled={disabled} variant=\"contained\" onClick={Click} type='submit' >Зарегистриговаться</Button >\r\n                <CircularProgress id='loader' className={hide} />\r\n                <Button onClick={Clear} disabled={disabled} >Очистить</Button>\r\n            </Grid>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport { Container, Grid, Typography } from '@material-ui/core';\r\nimport './main.scss';\r\n\r\n\r\nconst Main = () => {\r\n    return (\r\n        <Container fixed>\r\n            {/* <Grid className='head'>head</Grid>\r\n            <Grid className='body'>body</Grid>\r\n            <Grid className='footer'>footer</Grid> */}\r\n            <Typography variant='h5'>Данная страница еще в разработке</Typography>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\nimport { Container } from '@material-ui/core';\r\nimport Login from './login';\r\nimport Register from './register';\r\nimport Main from '../main/main';\r\nimport './form.scss';\r\nimport { HashRouter as Router, Route } from 'react-router-dom';\r\n\r\n\r\nconst Form = () => {\r\n  return (\r\n    <Container maxWidth='sm'>\r\n      <Router basename='/test_form'>\r\n        <Route exact path='/' component={Login} />\r\n        <Route exact path='/register' component={Register} />\r\n        <Route exact path='/main' component={Main} />\r\n      </Router>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Form;","import React, { useEffect } from 'react';\r\nimport Form from './form/form'\r\nimport { dataBase } from './database/database';\r\n\r\nconst App = () => {\r\n    useEffect(() => {\r\n        const DB = localStorage.getItem('database')\r\n\r\n        if (!DB) {\r\n            localStorage.setItem('database', JSON.stringify(dataBase))\r\n        }\r\n    }, [])\r\n\r\n    return <Form />\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}