{"version":3,"sources":["form/login.js","form/register.js","main/main.jsx","form/form.js","index.js"],"names":["useStyles","makeStyles","body","margin","paddingBottom","borderTop","width","marginTop","register","textDecoration","color","hide","display","success","user","Login","classes","useState","nickname","setNickname","password","setPassword","disabled","setDisabled","Clear","localStorage","clear","useEffect","getItem","Card","className","Grid","container","direction","justify","Typography","variant","Button","onClick","to","Input","value","onChange","event","target","type","placeholder","alignItems","id","size","Promise","resolve","reject","setTimeout","alert","length","document","getElementById","classList","remove","then","render","Container","maxWidth","setItem","add","CircularProgress","Register","email","setEmail","confirmPassword","setConfirmPassword","reg","test","loginData","data","Main","fixed","Form","basename","exact","path","component","ReactDOM"],"mappings":"+RAeMA,EAAYC,YAAW,CAC3BC,KAAM,CACJC,OAAQ,SACRC,cAAe,EACfC,UAAW,oBAEX,MAAO,CACLC,MAAO,OACPC,UAAW,KAGfC,SAAU,CACR,MAAO,CACLC,eAAgB,OAChBC,MAAO,YAGXC,KAAM,CACJC,QAAS,OACTT,OAAQ,IAEVU,QAAS,CACPH,MAAO,aAILI,EACM,OADNA,EAEM,WAmGGC,EAhGD,WAEZ,IAAMC,EAAUhB,IAEhB,EAAgCiB,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEA,EAAgCJ,oBAAS,GAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KAyDA,SAASC,IACPC,aAAaC,QAEbP,EAAY,IACZE,EAAY,IAQd,OALAM,qBAAU,WACRR,EAAYM,aAAaG,QAAQ,aACjCP,EAAYI,aAAaG,QAAQ,eAChC,IAGD,eAACC,EAAA,EAAD,CAAMC,UAAU,OAAhB,UACE,eAACC,EAAA,EAAD,CAAMD,UAAU,qBAAqBE,WAAS,EAACC,UAAU,MAAMC,QAAQ,gBAAvE,UACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,8FACA,cAACD,EAAA,EAAD,CAAYC,QAAQ,KAApB,gCACA,cAACC,EAAA,EAAD,CAAQC,QAASd,EAAOM,UAAWd,EAAQR,SAAU4B,QAAQ,WAAW1B,MAAM,UAA9E,SAAwF,cAAC,IAAD,CAAM6B,GAAG,YAAT,+HAE1F,eAACR,EAAA,EAAD,CAAMD,UAAS,wBAAmBd,EAAQd,MAAQ8B,WAAS,EAA3D,UACE,cAACQ,EAAA,EAAD,CAAOC,MAAOvB,EAAUwB,SA3E9B,SAAoBC,GAClBxB,EAAYwB,EAAMC,OAAOH,QA0EyBI,KAAK,OAAOC,YAAY,kEACtE,cAACN,EAAA,EAAD,CAAOC,MAAOrB,EAAUsB,SAzE9B,SAAwBC,GACtBtB,EAAYsB,EAAMC,OAAOH,QAwE6BI,KAAK,WAAWC,YAAY,uFAEhF,eAACf,EAAA,EAAD,CAAMD,UAAU,uBAAuBE,WAAS,EAACC,UAAU,MAAMC,QAAQ,gBAAgBa,WAAW,SAApG,UACE,cAACV,EAAA,EAAD,CAAQW,GAAG,QAAQC,KAAK,QAAQ3B,SAAUA,EAAUc,QAAQ,YAAYE,QAxE9E,WACgB,IAAIY,SAAQ,SAACC,EAASC,GAClCC,YAAW,WACJnC,GAEOA,EACVkC,EAAOE,MAAM,0JACHlC,EAEDA,EAASmC,OAAS,EAC3BH,EAAOE,MAAM,+JAEb/B,GAAY,GACZiC,SAASC,eAAe,UAAUC,UAAUC,OAAO3C,EAAQL,OAL3DyC,EAAOE,MAAM,oFAJbF,EAAOE,MAAM,wJAWfH,MACC,MAGFS,MAAK,WACJ,OAAO,IAAIV,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLnC,IAAaJ,GAAiBM,IAAaN,EAC7C+C,YACE,cAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,SACE,cAAClC,EAAA,EAAD,CAAMC,UAAU,qBAAhB,SACE,cAACK,EAAA,EAAD,CAAYC,QAAQ,YAAY1B,MAAM,YAAtC,uPAKNmD,YACE,eAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,UACE,cAAC,IAAD,UAAQ,cAAC,IAAD,CAAUxB,GAAI,YACtB,cAACV,EAAA,EAAD,CAAMC,UAAU,qBAAhB,SACE,cAACK,EAAA,EAAD,CAAYC,QAAQ,YAAYN,UAAWd,EAAQH,QAAnD,4KAINsC,EAAQ1B,aAAauC,QAAQ,aAAc,gBAE7CzC,GAAY,GACZiC,SAASC,eAAe,UAAUC,UAAUO,IAAIjD,EAAQL,QACvD,YA6BmFkC,KAAK,SAA7F,4CACA,cAACqB,EAAA,EAAD,CAAkBlB,GAAG,SAASlB,UAAS,UAAKd,EAAQL,KAAb,cACvC,cAAC0B,EAAA,EAAD,CAAQC,QAASd,EAAjB,qECzHFxB,EAAYC,YAAW,CACzBC,KAAM,CACFC,OAAQ,SACRC,cAAe,EACfC,UAAW,oBAEX,MAAO,CACHC,MAAO,OACPC,UAAW,KAGnBC,SAAU,CACN,MAAO,CACHC,eAAgB,OAChBC,MAAO,YAGfC,KAAM,CACFC,QAAS,OACTT,OAAQ,MA+HDgE,EA3HE,WAEb,IAAMnD,EAAUhB,IAEhB,EAAgCiB,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOmD,EAAP,KAAcC,EAAd,KACA,EAAgCpD,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA8CJ,mBAAS,IAAvD,mBAAOqD,EAAP,KAAwBC,EAAxB,KAEA,EAAgCtD,oBAAS,GAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KA4EA,SAASC,IACLC,aAAaC,QAEbP,EAAY,IACZkD,EAAS,IACThD,EAAY,IACZkD,EAAmB,IAUvB,OAPA5C,qBAAU,WACNR,EAAYM,aAAaG,QAAQ,aACjCyC,EAAS5C,aAAaG,QAAQ,UAC9BP,EAAYI,aAAaG,QAAQ,aACjC2C,EAAmB9C,aAAaG,QAAQ,sBACzC,IAGC,eAACC,EAAA,EAAD,CAAMC,UAAU,OAAhB,UACI,eAACC,EAAA,EAAD,CAAMD,UAAU,qBAAqBE,WAAS,EAACC,UAAU,MAAMC,QAAQ,gBAAvE,UACI,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,0HACA,cAACD,EAAA,EAAD,CAAYC,QAAQ,KAApB,gCACA,cAACC,EAAA,EAAD,CAAQC,QAASd,EAAOM,UAAWd,EAAQR,SAAU4B,QAAQ,WAAW1B,MAAM,UAA9E,SAAwF,cAAC,IAAD,CAAM6B,GAAG,IAAT,iDAE5F,eAACR,EAAA,EAAD,CAAMD,UAAS,wBAAmBd,EAAQd,MAAQ8B,WAAS,EAA3D,UACI,cAACQ,EAAA,EAAD,CAAOC,MAAOvB,EAAUwB,SAlGpC,SAAoBC,GAChBxB,EAAYwB,EAAMC,OAAOH,OACzBhB,aAAauC,QAAQ,WAAYrB,EAAMC,OAAOH,QAgGQI,KAAK,OAAOC,YAAY,kEACtE,cAACN,EAAA,EAAD,CAAOC,MAAO2B,EAAO1B,SA/FjC,SAAqBC,GACjB0B,EAAS1B,EAAMC,OAAOH,OACtBhB,aAAauC,QAAQ,QAASrB,EAAMC,OAAOH,QA6FSI,KAAK,QAAQC,YAAY,qDACrE,cAACN,EAAA,EAAD,CAAOC,MAAOrB,EAAUsB,SA5FpC,SAAwBC,GACpBtB,EAAYsB,EAAMC,OAAOH,OACzBhB,aAAauC,QAAQ,WAAYrB,EAAMC,OAAOH,QA0FYI,KAAK,WAAWC,YAAY,sGAC9E,cAACN,EAAA,EAAD,CAAOC,MAAO6B,EAAiB5B,SAzF3C,SAA+BC,GAC3B4B,EAAmB5B,EAAMC,OAAOH,OAChChB,aAAauC,QAAQ,kBAAmBrB,EAAMC,OAAOH,QAuFmBI,KAAK,WAAWC,YAAY,+GAEhG,eAACf,EAAA,EAAD,CAAMD,UAAU,uBAAuBE,WAAS,EAACC,UAAU,MAAMC,QAAQ,gBAAzE,UACI,cAACG,EAAA,EAAD,CAAQW,GAAG,WAAWC,KAAK,QAAQ3B,SAAUA,EAAUc,QAAQ,YAAYE,QAvFvF,WACI,IAAMkC,EAAM,gDAEE,IAAItB,SAAQ,SAACC,EAASC,GAChCC,YAAW,WACFnC,GAEOA,EACRkC,EAAOE,MAAM,0JACLc,EAEAI,EAAIC,KAAKL,GAEThD,EAEDA,EAASmC,OAAS,EACzBH,EAAOE,MAAM,8JACNlC,IAAakD,EACpBlB,EAAOE,MAAM,8GAEb/B,GAAY,GACZiC,SAASC,eAAe,UAAUC,UAAUC,OAAO3C,EAAQL,OAP3DyC,EAAOE,MAAM,oFAFbF,EAAOE,MAAM,sGAFbF,EAAOE,MAAM,8EAJbF,EAAOE,MAAM,wJAiBjBH,MACD,MAGFS,MAAK,WACF,OAAO,IAAIV,SAAQ,SAACC,EAASC,GACzBC,YAAW,WACP,IAAMqB,EAAY,CACdjD,aAAaG,QAAQ,YACrBH,aAAaG,QAAQ,SACrBH,aAAaG,QAAQ,YACrBH,aAAaG,QAAQ,oBAEzBuB,EAAQuB,GAERnD,GAAY,GACZiC,SAASC,eAAe,UAAUC,UAAUO,IAAIjD,EAAQL,QACzD,WAGViD,MAAK,SAAAe,GACFnB,SAASC,eAAe,UAAUC,UAAUO,IAAIjD,EAAQL,MACxDkD,YACI,cAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,SACI,eAAClC,EAAA,EAAD,CAAMC,UAAU,qBAAhB,UACI,eAACK,EAAA,EAAD,CAAYC,QAAQ,YAApB,0DAA2CuC,EAAK,MAChD,eAACxC,EAAA,EAAD,CAAYC,QAAQ,YAApB,sEAA6CuC,EAAK,MAClD,eAACxC,EAAA,EAAD,CAAYC,QAAQ,YAApB,sEAA6CuC,EAAK,gBAqC6B9B,KAAK,SAAhG,0HACA,cAACqB,EAAA,EAAD,CAAkBlB,GAAG,SAASlB,UAAS,UAAKd,EAAQL,KAAb,gBACvC,cAAC0B,EAAA,EAAD,CAAQC,QAASd,EAAjB,qEC5IDoD,G,OAVF,WACT,OACI,eAACd,EAAA,EAAD,CAAWe,OAAK,EAAhB,UACI,cAAC9C,EAAA,EAAD,CAAMD,UAAU,OAAhB,kBACA,cAACC,EAAA,EAAD,CAAMD,UAAU,OAAhB,kBACA,cAACC,EAAA,EAAD,CAAMD,UAAU,SAAhB,yBCWGgD,G,OAZF,WACX,OACE,cAAC,IAAD,CAAQC,SAAS,aAAjB,SACE,eAACjB,EAAA,EAAD,CAAWC,SAAS,KAApB,UACE,cAAC,IAAD,CAAOiB,OAAK,EAACC,KAAK,IAAIC,UAAWnE,IACjC,cAAC,IAAD,CAAOiE,OAAK,EAACC,KAAK,YAAYC,UAAWf,IACzC,cAAC,IAAD,CAAOa,OAAK,EAACC,KAAK,QAAQC,UAAWN,WCX7CO,IAAStB,OAAO,cAAC,EAAD,IAAUL,SAASC,eAAe,W","file":"static/js/main.9e9df4c3.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { render } from '@testing-library/react';\r\nimport {\r\n  Input,\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  Typography,\r\n  Card,\r\n  CircularProgress,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport { HashRouter as Router, Link, Redirect } from 'react-router-dom';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  body: {\r\n    margin: '20px 0',\r\n    paddingBottom: 5,\r\n    borderTop: '3px solid #0dcaf0',\r\n\r\n    '& *': {\r\n      width: '100%',\r\n      marginTop: 10,\r\n    },\r\n  },\r\n  register: {\r\n    '& *': {\r\n      textDecoration: 'none',\r\n      color: 'inherit',\r\n    }\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n    margin: 30,\r\n  },\r\n  success: {\r\n    color: '#4caf50'\r\n  }\r\n})\r\n\r\nconst user = {\r\n  nickname: 'test',\r\n  password: 'password'\r\n}\r\n\r\nconst Login = () => {\r\n\r\n  const classes = useStyles()\r\n\r\n  const [nickname, setNickname] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  \r\n  const [disabled, setDisabled] = useState(false)\r\n\r\n  function targetName(event) {\r\n    setNickname(event.target.value)\r\n  }\r\n  function targetPassword(event) {\r\n    setPassword(event.target.value)\r\n  }\r\n\r\n  function Click() {\r\n    let promise = new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (!nickname) {\r\n          reject(alert('Пожалуйста введите ваше имя'))\r\n        } else if (+nickname) {\r\n          reject(alert('Имя не может состоять из цифр'))\r\n        } else if (!password) {\r\n          reject(alert('Введите пароль'))\r\n        } else if (password.length < 8) {\r\n          reject(alert('Этот пароль слишкой короткий'))\r\n        } else {\r\n          setDisabled(true)\r\n          document.getElementById('loader').classList.remove(classes.hide)\r\n        }\r\n        resolve()\r\n      }, 0)\r\n    })\r\n    promise\r\n      .then(() => {\r\n        return new Promise((resolve, reject) => {\r\n          setTimeout(() => {\r\n            if (nickname !== user.nickname || password !== user.password) {\r\n              render(\r\n                <Container maxWidth='sm'>\r\n                  <Card className='form-register data'>\r\n                    <Typography variant=\"subtitle1\" color=\"secondary\">Ошибка, данного пользователя не существует</Typography>\r\n                  </Card>\r\n                </Container>\r\n              )\r\n            } else {\r\n              render(\r\n                <Container maxWidth='sm'>\r\n                  <Router><Redirect to={'/main'} /></Router>\r\n                  <Card className='form-register data'>\r\n                    <Typography variant=\"subtitle1\" className={classes.success}>Вы успешно авторизировались</Typography >\r\n                  </Card>\r\n                </Container>\r\n              )\r\n              resolve(localStorage.setItem('AUTH_TOKEN', 'TOKEN_BODY'));\r\n            }\r\n            setDisabled(false)\r\n            document.getElementById('loader').classList.add(classes.hide);\r\n          }, 3000);\r\n        })\r\n      })\r\n  }\r\n\r\n  function Clear() {\r\n    localStorage.clear()\r\n\r\n    setNickname('');\r\n    setPassword('');\r\n  }\r\n\r\n  useEffect(() => {\r\n    setNickname(localStorage.getItem('nickname'))\r\n    setPassword(localStorage.getItem('password'))\r\n  }, [])\r\n\r\n  return (\r\n    <Card className='form'>\r\n      <Grid className='form-register head' container direction=\"row\" justify=\"space-between\">\r\n        <Typography variant='h5'>Войти в систему</Typography>\r\n        <Typography variant='h5'>или</Typography>\r\n        <Button onClick={Clear} className={classes.register} variant=\"outlined\" color=\"primary\"><Link to='/register'>Зарегистриговаться</Link></Button>\r\n      </Grid>\r\n      <Grid className={`form-register ${classes.body}`} container>\r\n        <Input value={nickname} onChange={targetName} type='text' placeholder='Введите имя' />\r\n        <Input value={password} onChange={targetPassword} type='password' placeholder='Введите пароль' />\r\n      </Grid>\r\n      <Grid className='form-register footer' container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\r\n        <Button id='login' size=\"small\" disabled={disabled} variant=\"contained\" onClick={Click} type='submit'>Войти</Button>\r\n        <CircularProgress id='loader' className={`${classes.hide} visible`} />\r\n        <Button onClick={Clear} >Очистить</Button>\r\n      </Grid>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Login;","import React, { useState, useEffect } from 'react';\r\nimport { render } from '@testing-library/react';\r\nimport {\r\n    Input,\r\n    Button,\r\n    Card,\r\n    Grid,\r\n    Container,\r\n    Typography,\r\n    CircularProgress,\r\n    makeStyles\r\n} from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    body: {\r\n        margin: '20px 0',\r\n        paddingBottom: 5,\r\n        borderTop: '3px solid #0dcaf0',\r\n\r\n        '& *': {\r\n            width: '100%',\r\n            marginTop: 10,\r\n        },\r\n    },\r\n    register: {\r\n        '& *': {\r\n            textDecoration: 'none',\r\n            color: 'inherit',\r\n        }\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n        margin: 30,\r\n    }\r\n})\r\n\r\nconst Register = () => {\r\n\r\n    const classes = useStyles()\r\n\r\n    const [nickname, setNickname] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n\r\n    const [disabled, setDisabled] = useState(false)\r\n\r\n    function targetName(event) {\r\n        setNickname(event.target.value)\r\n        localStorage.setItem('nickname', event.target.value)\r\n    }\r\n    function targetEmail(event) {\r\n        setEmail(event.target.value)\r\n        localStorage.setItem('email', event.target.value)\r\n    }\r\n    function targetPassword(event) {\r\n        setPassword(event.target.value)\r\n        localStorage.setItem('password', event.target.value)\r\n    }\r\n    function targetConfirmPassword(event) {\r\n        setConfirmPassword(event.target.value)\r\n        localStorage.setItem('confirmPassword', event.target.value)\r\n    }\r\n\r\n    function Click() {\r\n        const reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n\r\n        let promise = new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                if (!nickname) {\r\n                    reject(alert('Пожалуйста введите ваше имя'))\r\n                } else if (+nickname) {\r\n                    reject(alert('Имя не может состоять из цифр'))\r\n                } else if (!email) {\r\n                    reject(alert('Введите почту'))\r\n                } else if (!reg.test(email)) {\r\n                    reject(alert('Почта некорректна'))\r\n                } else if (!password) {\r\n                    reject(alert('Введите пароль'))\r\n                } else if (password.length < 8) {\r\n                    reject(alert('Этот пароль слишкой короткий'))\r\n                } else if (password !== confirmPassword) {\r\n                    reject(alert('Пароли не совпадают'))\r\n                } else {\r\n                    setDisabled(true)\r\n                    document.getElementById('loader').classList.remove(classes.hide)\r\n                }\r\n                resolve()\r\n            }, 0)\r\n        })\r\n        promise\r\n            .then(() => {\r\n                return new Promise((resolve, reject) => {\r\n                    setTimeout(() => {\r\n                        const loginData = [\r\n                            localStorage.getItem('nickname'),\r\n                            localStorage.getItem('email'),\r\n                            localStorage.getItem('password'),\r\n                            localStorage.getItem('confirmPassword')\r\n                        ]\r\n                        resolve(loginData)\r\n\r\n                        setDisabled(false)\r\n                        document.getElementById('loader').classList.add(classes.hide)\r\n                    }, 3000);\r\n                })\r\n            })\r\n            .then(data => {\r\n                document.getElementById('loader').classList.add(classes.hide)\r\n                render(\r\n                    <Container maxWidth='sm'>\r\n                        <Card className='form-register data'>\r\n                            <Typography variant=\"subtitle1\">Ваше имя: {data[0]}</Typography>\r\n                            <Typography variant=\"subtitle1\">Ваша почта: {data[1]}</Typography>\r\n                            <Typography variant=\"subtitle1\">Ваш пароль: {data[2]}</Typography>\r\n                        </Card>\r\n                    </Container>\r\n                )\r\n            })\r\n    }\r\n\r\n    function Clear() {\r\n        localStorage.clear()\r\n\r\n        setNickname('');\r\n        setEmail('');\r\n        setPassword('');\r\n        setConfirmPassword('');\r\n    }\r\n\r\n    useEffect(() => {\r\n        setNickname(localStorage.getItem('nickname'))\r\n        setEmail(localStorage.getItem('email'))\r\n        setPassword(localStorage.getItem('password'))\r\n        setConfirmPassword(localStorage.getItem('confirmPassword'))\r\n    }, [])\r\n\r\n    return (\r\n        <Card className='form'>\r\n            <Grid className='form-register head' container direction=\"row\" justify=\"space-between\">\r\n                <Typography variant='h5'>Зарегистриговаться</Typography>\r\n                <Typography variant='h5'>или</Typography>\r\n                <Button onClick={Clear} className={classes.register} variant=\"outlined\" color=\"primary\"><Link to='/'>Войти</Link></Button>\r\n            </Grid>\r\n            <Grid className={`form-register ${classes.body}`} container>\r\n                <Input value={nickname} onChange={targetName} type='text' placeholder='Введите имя' />\r\n                <Input value={email} onChange={targetEmail} type='email' placeholder='Введите email' />\r\n                <Input value={password} onChange={targetPassword} type='password' placeholder='Придумайте пароль' />\r\n                <Input value={confirmPassword} onChange={targetConfirmPassword} type='password' placeholder='Подтвердите пароль' />\r\n            </Grid>\r\n            <Grid className='form-register footer' container direction=\"row\" justify=\"space-between\">\r\n                <Button id='register' size=\"small\" disabled={disabled} variant=\"contained\" onClick={Click} type='submit' >Зарегистриговаться</Button >\r\n                <CircularProgress id='loader' className={`${classes.hide} + visible`} />\r\n                <Button onClick={Clear} >Очистить</Button>\r\n            </Grid>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport { Container, Grid } from '@material-ui/core';\r\nimport './main.scss';\r\n\r\n\r\nconst Main = () => {\r\n    return (\r\n        <Container fixed>\r\n            <Grid className='head'>head</Grid>\r\n            <Grid className='body'>body</Grid>\r\n            <Grid className='footer'>footer</Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\nimport { Container } from '@material-ui/core';\r\nimport Login from './login';\r\nimport Register from './register';\r\nimport Main from '../main/main';\r\nimport './form.scss';\r\nimport { HashRouter as Router, Route } from 'react-router-dom';\r\n\r\n\r\nconst Form = () => {\r\n  return (\r\n    <Router basename='/test_form'>\r\n      <Container maxWidth='sm'>\r\n        <Route exact path='/' component={Login} />\r\n        <Route exact path='/register' component={Register} />\r\n        <Route exact path='/main' component={Main} />\r\n      </Container>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Form from './form/form';\r\n\r\nReactDOM.render(<Form />, document.getElementById('root'));"],"sourceRoot":""}