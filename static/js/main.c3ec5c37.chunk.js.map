{"version":3,"sources":["form/styles/styles.js","form/login.js","services/services.js","form/register.js","feed/feed-card/pagination/pagination.jsx","feed/feed-card/feed-card.jsx","feed/feed-header/feed-header.jsx","feed/feed.jsx","form/form.js","database/database.js","App.js","index.js"],"names":["useStyles","makeStyles","body","margin","paddingBottom","borderTop","width","marginTop","register","textDecoration","color","hide","display","Login","classes","useState","nickname","setNickname","password","setPassword","disabled","setDisabled","setHide","redirect","setRedirect","errorName","setErrorName","errorPassword","setErrorPassword","helperTextName","setHelperTextName","helperTextPassword","setHelperTextPassword","click","setClick","useEffect","length","Container","maxWidth","Card","className","Grid","container","direction","justify","Typography","variant","Button","to","TextField","label","value","onChange","event","target","type","error","helperText","alignItems","id","size","onClick","userName","userPassword","DB","JSON","parse","localStorage","getItem","Promise","resolve","reject","setTimeout","users","find","user","name","alert","SignIn","then","setItem","catch","props","finally","CircularProgress","Register","email","setEmail","confirmPassword","setConfirmPassword","errorEmail","setErrorEmail","errorConfirmPassword","setErrorConfirmPassword","helperTextEmail","setHelperTextEmail","helperConfirmPassword","setHelperTextConfirmPassword","test","userEmail","stringify","push","CheckIn","pagination","flexWrap","justifyContent","num","boxShadow","Pagination","cardsLength","totalCards","paginate","pageNumbers","i","Math","ceil","map","number","block","card","minWidth","icon","marginLeft","cursor","paddingTop","save","FeedCard","cards","setCards","edit","setEdit","valueTitle","setValueTitle","valueBody","setValueBody","currentPage","setCurrentPage","lastCardIndex","firstCardsIndex","Box","filter","el","CardContent","e","fullWidth","multiline","gutterBottom","component","title","newCard","item","saveCard","slice","pageNumber","backgroundColor","padding","center","textAlign","FeedHeader","Avatar","alt","src","header","marginRight","footer","Feed","fetch","response","json","data","Redirect","Form","style","basename","path","exact","dataBase","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c3ec5c37.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core';\r\n\r\n\r\nexport const useStyles = makeStyles({\r\n    body: {\r\n      margin: '20px 0',\r\n      paddingBottom: 5,\r\n      borderTop: '3px solid #0dcaf0',\r\n  \r\n      '& *': {\r\n        width: '100%',\r\n        marginTop: 7,\r\n      },\r\n    },\r\n    register: {\r\n      '& *': {\r\n        textDecoration: 'none',\r\n        color: 'inherit',\r\n      }\r\n    },\r\n    hide: {\r\n      display: 'none',\r\n      margin: 30,\r\n    },\r\n  })","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n  Card,\r\n  CircularProgress,\r\n  TextField,\r\n  Container\r\n} from '@material-ui/core';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { useStyles } from './styles/styles';\r\nimport { SignIn } from '../services/services';\r\n\r\n\r\nconst Login = () => {\r\n\r\n  const classes = useStyles()\r\n\r\n  const [nickname, setNickname] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const [disabled, setDisabled] = useState(false)\r\n  const [hide, setHide] = useState(classes.hide)\r\n\r\n  const [redirect, setRedirect] = useState('')\r\n\r\n  const [errorName, setErrorName] = useState(false)\r\n  const [errorPassword, setErrorPassword] = useState(false)\r\n  const [helperTextName, setHelperTextName] = useState('')\r\n  const [helperTextPassword, setHelperTextPassword] = useState('')\r\n\r\n  const [click, setClick] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (click === true) {\r\n      if (!nickname) {\r\n        setErrorName(true)\r\n        setHelperTextName('Пожалуйста введите ваше имя')\r\n      } else if (+nickname) {\r\n        setErrorName(true)\r\n        setHelperTextName('Имя не может состоять из цифр')\r\n      } else {\r\n        setErrorName(false)\r\n        setHelperTextName('')\r\n      }\r\n      if (password.length < 8) {\r\n        setErrorPassword(true)\r\n        setHelperTextPassword('Пароль слишкой короткий')\r\n      } else {\r\n        setErrorPassword(false)\r\n        setHelperTextPassword('')\r\n      }\r\n    }\r\n  }, [nickname, password, click])\r\n\r\n  const handleSubmit = () => {\r\n    setClick(true);\r\n    setDisabled(true);\r\n    setHide(null);\r\n    SignIn(nickname, password)\r\n      .then(() => {\r\n        localStorage.setItem('auth_token', true)\r\n        setRedirect('/feed')\r\n      }).catch((props) => {\r\n        if (props === nickname) {\r\n          if (props === 0) setHelperTextName('Пожалуйста введите ваше имя')\r\n          else setHelperTextName('Имя не может состоять из цифр')\r\n        }\r\n        if (props === password) {\r\n          setHelperTextPassword('Пароль слишкой короткий')\r\n        }\r\n      })\r\n      .finally(() => {\r\n        setDisabled(false);\r\n        setHide(classes.hide);\r\n      })\r\n  }\r\n\r\n  function targetName(event) {\r\n    setNickname(event.target.value)\r\n  }\r\n  function targetPassword(event) {\r\n    setPassword(event.target.value)\r\n  }\r\n\r\n  function Clear() {\r\n    setNickname('');\r\n    setPassword('');\r\n  }\r\n\r\n  return (\r\n    <Container maxWidth='sm'>\r\n      <Card className='form'>\r\n        <Grid className='form-register head' container direction=\"row\" justify=\"space-between\">\r\n          <Typography variant='h5'>Войти в систему</Typography>\r\n          <Typography variant='h5'>или</Typography>\r\n          <Button className={classes.register} disabled={disabled} variant=\"outlined\" color=\"primary\"><Link to='/register'>Зарегистриговаться</Link></Button>\r\n        </Grid>\r\n        <Grid className={`form-register ${classes.body}`} container>\r\n          <TextField label=\"Введите имя\" value={nickname} onChange={targetName} disabled={disabled} type='text' error={errorName} helperText={helperTextName} />\r\n          <TextField label=\"Введите пароль\" value={password} onChange={targetPassword} disabled={disabled} type='password' error={errorPassword} helperText={helperTextPassword} />\r\n        </Grid>\r\n        <Grid className='form-register footer' container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\r\n          <Button id='login' size=\"small\" disabled={disabled} variant=\"contained\" onClick={handleSubmit} type='submit'><Redirect to={redirect} />Войти</Button>\r\n          <CircularProgress id='loader' className={`${hide} + visible`} />\r\n          <Button onClick={Clear} type='submit' disabled={disabled}>Очистить</Button>\r\n        </Grid>\r\n      </Card>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Login;","export function SignIn(userName, userPassword) {\r\n\r\n    let DB = JSON.parse(localStorage.getItem('database'))\r\n\r\n    return new Promise((resolve, reject) => {\r\n        if (!userName || +userName) {\r\n            reject(userName)\r\n        } else if (!userPassword || userPassword.length < 8) {\r\n            reject(userPassword)\r\n        } else {\r\n            setTimeout(() => {\r\n                let findUser = DB.users.find(user => user.name === userName && user.password === userPassword)\r\n\r\n                if (findUser) {\r\n                    resolve()\r\n                }\r\n                else {\r\n                    reject(alert('Данного пользователя не существует или вы неправильно ввели свой пароль'))\r\n                }\r\n            }, 3000);\r\n        }\r\n    })\r\n}\r\n\r\nexport function CheckIn(userName, userEmail, userPassword, confirmPassword) {\r\n    return new Promise((resolve, reject) => {\r\n        const reg = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/iu;\r\n        let user = {\r\n            name: userName,\r\n            email: userEmail,\r\n            password: userPassword\r\n        }\r\n\r\n        if (!userName || +userName) {\r\n            reject(userName)\r\n        } else if (!userEmail || !reg.test(userEmail)) {\r\n            reject(userEmail)\r\n        } else if (!userPassword || userPassword.length < 8) {\r\n            reject(userPassword)\r\n        } else if (userPassword !== confirmPassword) {\r\n            reject(confirmPassword)\r\n        } else {\r\n            setTimeout(() => {\r\n                resolve(user)\r\n            }, 3000);\r\n        }\r\n    }).then((user) => {\r\n        return new Promise((resolve, reject) => {\r\n            let DB = JSON.parse(localStorage.getItem('database'))\r\n            let duplicate = DB.users.find(user => user.email === userEmail)\r\n\r\n            if (duplicate) {\r\n                reject(alert('Данная почта занята'))\r\n            }\r\n            else {\r\n                localStorage.setItem('database', JSON.stringify(user))\r\n                DB.users.push(user)\r\n                localStorage.setItem('database', JSON.stringify(DB))\r\n                resolve()\r\n            }\r\n        })\r\n    })\r\n}\r\n\r\nexport function FeedPush() {\r\n    return new Promise((resolve) => {\r\n        fetch('https://jsonplaceholder.typicode.com/posts')\r\n            .then(response => response.json())\r\n            .then(json => resolve(JSON.stringify(json)))\r\n    })\r\n}","import React, { useEffect, useState } from 'react';\r\nimport {\r\n    Button,\r\n    Card,\r\n    Grid,\r\n    Typography,\r\n    CircularProgress,\r\n    TextField,\r\n    Container\r\n} from '@material-ui/core';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { useStyles } from './styles/styles';\r\nimport { CheckIn } from '../services/services';\r\n\r\n\r\nconst Register = () => {\r\n\r\n    const classes = useStyles()\r\n\r\n    const [nickname, setNickname] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n\r\n    const [disabled, setDisabled] = useState(false)\r\n    const [hide, setHide] = useState(classes.hide)\r\n\r\n    const [redirect, setRedirect] = useState('/register')\r\n\r\n    const [errorName, setErrorName] = useState(false)\r\n    const [errorEmail, setErrorEmail] = useState(false)\r\n    const [errorPassword, setErrorPassword] = useState(false)\r\n    const [errorConfirmPassword, setErrorConfirmPassword] = useState(false)\r\n    const [helperTextName, setHelperTextName] = useState('')\r\n    const [helperTextEmail, setHelperTextEmail] = useState('')\r\n    const [helperTextPassword, setHelperTextPassword] = useState('')\r\n    const [helperConfirmPassword, setHelperTextConfirmPassword] = useState('')\r\n\r\n    const [click, setClick] = useState(false)\r\n\r\n    useEffect(() => {\r\n        const reg = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/iu;\r\n\r\n        if (click === true) {\r\n            if (!nickname || +nickname) {\r\n                setErrorName(true)\r\n                setHelperTextName('Некорректное имя')\r\n            } else {\r\n                setErrorName(false)\r\n                setHelperTextName('')\r\n            }\r\n            if (!email || !reg.test(email)) {\r\n                setErrorEmail(true)\r\n                setHelperTextEmail('Почта некорректна')\r\n            } else {\r\n                setErrorEmail(false)\r\n                setHelperTextEmail('')\r\n            }\r\n            if (password.length < 8) {\r\n                setErrorPassword(true)\r\n                setHelperTextPassword('Пароль слишкой короткий')\r\n            } else {\r\n                setErrorPassword(false)\r\n                setHelperTextPassword('')\r\n            }\r\n            if(password !== confirmPassword) {\r\n                setErrorConfirmPassword(true)\r\n                setHelperTextConfirmPassword('Пароли не совпадают')\r\n            } else {\r\n                setErrorConfirmPassword(false)\r\n                setHelperTextConfirmPassword('')\r\n            }\r\n        }\r\n    }, [nickname, email, password, confirmPassword, click])\r\n\r\n    const handleSubmit = () => {\r\n        setClick(true);\r\n        setDisabled(true);\r\n        setHide(null);\r\n        CheckIn(nickname, email, password, confirmPassword)\r\n            .then(() => {\r\n                localStorage.setItem('auth_token', true)\r\n                setRedirect('/feed')\r\n            }).catch((props) => {\r\n                if (props === nickname) {\r\n                    setHelperTextName('Некорректное имя')\r\n                }\r\n                if (props === email) {\r\n                    setHelperTextEmail('Почта некорректна')\r\n                }\r\n                if (props === password && props !== confirmPassword) {\r\n                    setHelperTextPassword('Пароль слишкой короткий')\r\n                    setHelperTextConfirmPassword('Пароли не совпадают')\r\n                }\r\n            })\r\n            .finally(() => {\r\n                setDisabled(false);\r\n                setHide(classes.hide);\r\n            })\r\n    }\r\n\r\n    function targetName(event) {\r\n        setNickname(event.target.value)\r\n    }\r\n    function targetEmail(event) {\r\n        setEmail(event.target.value)\r\n    }\r\n    function targetPassword(event) {\r\n        setPassword(event.target.value)\r\n    }\r\n    function targetConfirmPassword(event) {\r\n        setConfirmPassword(event.target.value)\r\n    }\r\n\r\n    function Clear() {\r\n        setNickname('');\r\n        setEmail('');\r\n        setPassword('');\r\n        setConfirmPassword('');\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth='sm'>\r\n            <Card className='form'>\r\n                <Grid className='form-register head' container direction=\"row\" justify=\"space-between\">\r\n                    <Typography variant='h5'>Зарегистриговаться</Typography>\r\n                    <Typography variant='h5'>или</Typography>\r\n                    <Button className={classes.register} disabled={disabled} variant=\"outlined\" color=\"primary\"><Link to='/'>Войти</Link></Button>\r\n                </Grid>\r\n                <Grid className={`form-register ${classes.body}`} container>\r\n                    <TextField label=\"Введите имя\" value={nickname} onChange={targetName} disabled={disabled} type='text' error={errorName} helperText={helperTextName} />\r\n                    <TextField label=\"Введите вашу почту\" value={email} onChange={targetEmail} disabled={disabled} type='email' error={errorEmail} helperText={helperTextEmail} />\r\n                    <TextField label=\"Придумайте пароль\" value={password} onChange={targetPassword} disabled={disabled} type='password' error={errorPassword} helperText={helperTextPassword} />\r\n                    <TextField label=\"Подтвердите пароль\" value={confirmPassword} onChange={targetConfirmPassword} disabled={disabled} type='password' error={errorConfirmPassword} helperText={helperConfirmPassword} />\r\n                </Grid>\r\n                <Grid className='form-register footer' container direction=\"row\" justify=\"space-between\">\r\n                    <Button id='register' size=\"small\" disabled={disabled} variant=\"contained\" onClick={handleSubmit} type='submit' ><Redirect to={redirect} />Зарегистриговаться</Button >\r\n                    <CircularProgress id='loader' className={hide} />\r\n                    <Button onClick={Clear} disabled={disabled} >Очистить</Button>\r\n                </Grid>\r\n            </Card>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    pagination: {\r\n        width: '100%',\r\n        marginTop: '2rem',\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'center',\r\n    },\r\n    num: {\r\n        width: 30,\r\n        margin: '10px 3px',\r\n        boxShadow: \"0px 2px 1px -1px rgb(0 0 0 / 20%), 0px 1px 1px 0px rgb(0 0 0 / 14%), 0px 1px 3px 0px rgb(0 0 0 / 12%)\"\r\n    }\r\n});\r\n\r\nconst Pagination = ({ cardsLength, totalCards, paginate }) => {\r\n    const classes = useStyles();\r\n\r\n    const pageNumbers = []\r\n    for (let i = 1; i <= Math.ceil(totalCards / cardsLength); i++) {\r\n        pageNumbers.push(i)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.pagination}>\r\n            {\r\n                pageNumbers.map(number => (\r\n                    <Button onClick={() => paginate(number)}\r\n                        className={classes.num}\r\n                        size=\"small\"\r\n                        key={number}\r\n                    >\r\n                        {number}\r\n                    </Button>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pagination;","import React, { useState } from 'react';\r\nimport {\r\n    Card,\r\n    CardContent,\r\n    Typography,\r\n    TextField,\r\n    Box,\r\n    Button,\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport HighlightOff from '@material-ui/icons/HighlightOff';\r\nimport Pagination from '../feed-card/pagination/pagination';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    block: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'center',\r\n    },\r\n    card: {\r\n        minWidth: 280,\r\n        maxWidth: 280,\r\n        marginTop: '2rem',\r\n        margin: '0 14px',\r\n    },\r\n    icon: {\r\n        marginTop: '9px',\r\n        marginLeft: '88%',\r\n        cursor: 'pointer',\r\n    },\r\n    body: {\r\n        borderTop: '3px solid #0dcaf0',\r\n        paddingTop: 4\r\n    },\r\n    save: {\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n        alignItems: 'flex-end',\r\n        marginTop: 5,\r\n    },\r\n    pagination: {\r\n        marginTop: '2rem',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n    }\r\n});\r\n\r\nconst FeedCard = ({ cards, setCards }) => {\r\n    const classes = useStyles();\r\n\r\n    const [edit, setEdit] = useState(null)\r\n    const [valueTitle, setValueTitle] = useState('')\r\n    const [valueBody, setValueBody] = useState('')\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n\r\n    let cardsLength = 8\r\n    const lastCardIndex = currentPage * cardsLength\r\n    const firstCardsIndex = lastCardIndex - cardsLength\r\n\r\n    const deleteCard = (id) => {\r\n        setCards(cards.filter((el) => el.id !== id))\r\n    }\r\n    const editCard = (id, title, body) => {\r\n        setEdit(id)\r\n        setValueTitle(title)\r\n        setValueBody(body)\r\n    }\r\n    const saveCard = (id) => {\r\n        let newCard = cards.map(item => {\r\n            if (item.id === id) {\r\n                item.title = valueTitle\r\n                item.body = valueBody\r\n            }\r\n            return item\r\n        })\r\n        setCards(newCard)\r\n        setEdit(null)\r\n    }\r\n\r\n    const paginate = pageNumber => setCurrentPage(pageNumber)\r\n\r\n    return (\r\n        <Box className={classes.block}>\r\n            {\r\n                cards.map((props) => (\r\n                    <Card className={classes.card} id={props.id} key={props.id}>\r\n                        <HighlightOff className={classes.icon} onClick={() => deleteCard(props.id)} />\r\n                        <CardContent>\r\n                            <div>\r\n                                {\r\n                                    edit === props.id ? <div>\r\n                                        <TextField value={valueTitle} onChange={(e) => setValueTitle(e.target.value)} fullWidth multiline />\r\n                                    </div>\r\n                                        :\r\n                                        <Typography\r\n                                            gutterBottom variant=\"h5\"\r\n                                            component=\"h2\"\r\n                                        >\r\n                                            {props.title}\r\n                                        </Typography>\r\n                                }\r\n                            </div>\r\n                            <div className={classes.body}>\r\n                                {\r\n                                    edit === props.id ? <div>\r\n                                        <TextField value={valueBody} onChange={(e) => setValueBody(e.target.value)} fullWidth multiline />\r\n                                    </div>\r\n                                        :\r\n                                        <Typography variant=\"body2\"\r\n                                            color=\"textSecondary\"\r\n                                            component=\"p\"\r\n                                        >\r\n                                            {props.body}\r\n                                        </Typography>\r\n                                }\r\n                            </div>\r\n                            <Typography className={classes.save} variant=\"button\">\r\n                                {\r\n                                    edit === props.id ?\r\n                                        <Button onClick={() => saveCard(props.id)} size='small'>Сохранить</Button>\r\n                                        :\r\n                                        <Button onClick={() => editCard(props.id, props.title, props.body)}>Редактировать</Button>\r\n                                }\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </Card>\r\n                )).slice(firstCardsIndex, lastCardIndex)\r\n            }\r\n            <Pagination\r\n                cardsLength={cardsLength}\r\n                totalCards={cards.length}\r\n                paginate={paginate}\r\n            />\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default FeedCard;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    Box,\r\n    Typography,\r\n    Avatar,\r\n} from '@material-ui/core';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles({\r\n    block: {\r\n        width: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        backgroundColor: '#0dcaf0',\r\n        margin: '0 -15xp',\r\n        padding: '15px'\r\n    },\r\n    center: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'space-between',\r\n        width: '30%',\r\n        textAlign: 'center'\r\n    }\r\n});\r\n\r\nconst FeedHeader = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Box className={classes.block}>\r\n            <Typography>Test-Form</Typography>\r\n            <div className={classes.center}>\r\n                <Link to={'/'}><Typography>Посты</Typography></Link>\r\n                <Link to={'/register'}><Typography>Страны</Typography></Link>\r\n                <Link to={'/'}><Typography>Напитки</Typography></Link>\r\n            </div>\r\n            <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default FeedHeader;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Typography,\r\n    Box,\r\n    Container,\r\n} from '@material-ui/core';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FeedCard from './feed-card/feed-card';\r\nimport FeedHeader from './feed-header/feed-header';\r\nimport { FeedPush } from '../services/services';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    header: {\r\n        marginLeft: '0',\r\n        marginRight: '0',\r\n    },\r\n    footer: {\r\n        maxWidth: '100%',\r\n        width: '100%',\r\n        marginTop: '2rem',\r\n    },\r\n});\r\n\r\nconst Feed = () => {\r\n    const classes = useStyles();\r\n\r\n    const [cards, setCards] = useState([])\r\n    useEffect(() => {\r\n        FeedPush()\r\n            .then((data) => {\r\n                setCards(JSON.parse(data))\r\n            })\r\n    }, [])\r\n\r\n    if (localStorage.getItem('auth_token')) {\r\n        return (\r\n            <Box display=\"flex\" flexWrap=\"wrap\" justifyContent=\"flex-start\">\r\n                <FeedHeader />\r\n                <Container>\r\n                    <FeedCard cards={cards} setCards={setCards} />\r\n                    <Box className={classes.footer}><Typography>footer</Typography></Box>\r\n                </Container>\r\n            </Box>\r\n        )\r\n    } else {\r\n        return Redirect('/')\r\n    }\r\n}\r\n\r\nexport default Feed;","import React from 'react';\r\nimport Login from './login';\r\nimport Register from './register';\r\nimport Feed from '../feed/feed';\r\nimport './form.scss';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\n\r\n\r\nconst Form = () => {\r\n  return (\r\n    <div style={{ margin: -8 }}>\r\n      <BrowserRouter basename='/test_form'>\r\n        <Switch>\r\n          <Route path='/' exact component={Login} />\r\n          <Route path='/register' component={Register} />\r\n          <Route path='/feed' component={Feed} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Form;","export const dataBase = {\r\n    users: []\r\n}","import React, { useEffect } from 'react';\r\nimport Form from './form/form'\r\nimport { dataBase } from './database/database';\r\n\r\nconst App = () => {\r\n    useEffect(() => {\r\n        const DB = localStorage.getItem('database')\r\n\r\n        if (!DB) {\r\n            localStorage.setItem('database', JSON.stringify(dataBase))\r\n        }\r\n    }, [])\r\n\r\n    return <Form />\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}