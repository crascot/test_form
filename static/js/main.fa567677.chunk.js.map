{"version":3,"sources":["login.js","register.js","index.js"],"names":["Login","useState","nickname","setNickname","password","setPassword","useEffect","localStorage","getItem","Input","value","onChange","event","target","setItem","type","placeholder","width","Grid","container","direction","justify","Button","id","size","variant","onClick","Promise","resolve","reject","setTimeout","alert","length","document","getElementById","classList","remove","style","pointerEvents","loginData","then","data","add","render","Container","maxWidth","Card","Typography","clear","Register","email","setEmail","confirmPassword","setConfirmPassword","padding","reg","test","formData","renderRegister","Form","className","CircularProgress","ReactDOM"],"mappings":"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","file":"static/js/main.fa567677.chunk.js","sourcesContent":["import { render } from '@testing-library/react';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Input, Button, Container, Grid, Typography, Card } from '@material-ui/core';\r\n\r\n\r\nconst Login = () => {\r\n\r\n  const [nickname, setNickname] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  function targetName(event) {\r\n    setNickname(event.target.value)\r\n    localStorage.setItem('nickname', event.target.value)\r\n  }\r\n  function targetPassword(event) {\r\n    setPassword(event.target.value)\r\n    localStorage.setItem('password', event.target.value)\r\n  }\r\n\r\n  function Click() {\r\n    let promise = new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (!nickname) {\r\n          reject(alert('Пожалуйста введите ваше имя'))\r\n        } else if (+nickname) {\r\n          reject(alert('Имя не может состоять из цифр'))\r\n        } else if (!password) {\r\n          reject(alert('Введите пароль'))\r\n        } else if (password.length < 8) {\r\n          reject(alert('Этот пароль слишкой короткий'))\r\n        } else (document.getElementById('loader').classList.remove('hide'));\r\n\r\n        document.getElementById('login').style.pointerEvents = 'none'\r\n\r\n        setTimeout(() => {\r\n          const loginData = [\r\n            localStorage.getItem('nickname'),\r\n            localStorage.getItem('password')\r\n          ]\r\n          resolve(loginData)\r\n        }, 3000);\r\n      }, 0)\r\n    })\r\n    promise\r\n      .then(data => {\r\n        document.getElementById('loader').classList.add('hide')\r\n        render(\r\n          <Container maxWidth='sm'>\r\n            <Card>\r\n              <Typography variant=\"subtitle1\">Ваше имя: {data[0]}</Typography >\r\n              <Typography variant=\"subtitle1\">Ваш пароль: {data[1]}</Typography >\r\n            </Card>\r\n          </Container>\r\n        )\r\n      })\r\n  }\r\n\r\n  function Clear() {\r\n    localStorage.clear()\r\n\r\n    setNickname('');\r\n    setPassword('')\r\n  }\r\n\r\n  useEffect(() => {\r\n    setNickname(localStorage.getItem('nickname'))\r\n    setPassword(localStorage.getItem('password'))\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <Input value={nickname} onChange={targetName} type='text' placeholder='Введите имя' /> <hr width='0' />\r\n      <Input value={password} onChange={targetPassword} type='password' placeholder='Введите пароль' /> <hr width='0' />\r\n      <Grid container direction=\"row\" justify=\"space-between\">\r\n        <Button id='login' size=\"small\" variant=\"contained\" onClick={Click} type='submit' >Войти</Button >\r\n        <Button onClick={Clear} >Очистить</Button>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login;","import { render } from '@testing-library/react';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Input, Button, Card, Grid, Container, Typography } from '@material-ui/core';\r\n\r\n\r\nconst Register = () => {\r\n\r\n    const [nickname, setNickname] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n\r\n    function targetName(event) {\r\n        setNickname(event.target.value)\r\n        localStorage.setItem('nickname', event.target.value)\r\n    }\r\n    function targetEmail(event) {\r\n        setEmail(event.target.value)\r\n        localStorage.setItem('email', event.target.value)\r\n    }\r\n    function targetPassword(event) {\r\n        setPassword(event.target.value)\r\n        localStorage.setItem('password', event.target.value)\r\n    }\r\n    function targetConfirmPassword(event) {\r\n        setConfirmPassword(event.target.value)\r\n        localStorage.setItem('confirmPassword', event.target.value)\r\n    }\r\n\r\n    function Click() {\r\n        const reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n\r\n        let promise = new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n                if (!nickname) {\r\n                    reject(alert('Пожалуйста введите ваше имя'))\r\n                } else if (+nickname) {\r\n                    reject(alert('Имя не может состоять из цифр'))\r\n                } else if (!email) {\r\n                    reject(alert('Введите почту'))\r\n                } else if (!reg.test(email)) {\r\n                    reject(alert('Почта некорректна'))\r\n                } else if (!password) {\r\n                    reject(alert('Введите пароль'))\r\n                } else if (password.length < 8) {\r\n                    reject(alert('Этот пароль слишкой короткий'))\r\n                } else if (password !== confirmPassword) {\r\n                    reject(alert('Пароли не совпадают'))\r\n                }\r\n                else (document.getElementById('loader').classList.remove('hide'))\r\n\r\n                setTimeout(() => {\r\n                    const formData = [\r\n                        localStorage.getItem('nickname'),\r\n                        localStorage.getItem('email'),\r\n                        localStorage.getItem('password'),\r\n                        localStorage.getItem('confirmPassword')\r\n                    ]\r\n                    resolve(formData)\r\n                }, 3000)\r\n            }, 0)\r\n        })\r\n        promise\r\n            .then(data => {\r\n                document.getElementById('loader').classList.add('hide')\r\n                render(\r\n                    <Container maxWidth='sm'>\r\n                        <Card>\r\n                            <Typography variant=\"subtitle1\">Ваше имя: {data[0]}</Typography>\r\n                            <Typography variant=\"subtitle1\">Ваша почта: {data[1]}</Typography>\r\n                            <Typography variant=\"subtitle1\">Ваш пароль: {data[2]}</Typography>\r\n                        </Card>\r\n                    </Container>\r\n                )\r\n            })\r\n    }\r\n\r\n    function Clear() {\r\n        localStorage.clear()\r\n\r\n        setNickname('');\r\n        setEmail('');\r\n        setPassword('');\r\n        setConfirmPassword('');\r\n    }\r\n\r\n    useEffect(() => {\r\n        setNickname(localStorage.getItem('nickname'))\r\n        setEmail(localStorage.getItem('email'))\r\n        setPassword(localStorage.getItem('password'))\r\n        setConfirmPassword(localStorage.getItem('confirmPassword'))\r\n    }, [])\r\n\r\n    return (\r\n        <div style={{ padding: '10px' }}>\r\n            <Input value={nickname} onChange={targetName} type='text' placeholder='Введите имя' /> <hr width='0' />\r\n            <Input value={email} onChange={targetEmail} type='email' placeholder='Введите email' /> <hr width='0' />\r\n            <Input value={password} onChange={targetPassword} type='password' placeholder='Придумайте пароль' /> <hr width='0' />\r\n            <Input value={confirmPassword} onChange={targetConfirmPassword} type='password' placeholder='Подтвердите пароль' /> <hr width='0' />\r\n            <Grid container direction=\"row\" justify=\"space-between\">\r\n                <Button size=\"small\" variant=\"contained\" onClick={Click} type='submit' >Зарегистриговаться</Button >\r\n                <Button onClick={Clear} >Очистить</Button>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport ReactDOM, { render } from 'react-dom';\r\nimport { Container, Button, Card, Typography, Grid, CircularProgress } from '@material-ui/core';\r\nimport Login from './login';\r\nimport Register from './register';\r\nimport './index.scss';\r\n\r\nfunction renderRegister() {\r\n  render(\r\n    <Register />, document.getElementById('block')\r\n  )\r\n}\r\n\r\nconst Form = () => {\r\n  return (\r\n    <Container maxWidth='sm'>\r\n      <Card className='form' style={{ padding: '10px' }}>\r\n        <Grid container direction=\"row\" justify=\"space-between\">\r\n          <Typography variant='h5'>Войти в систему</Typography>\r\n          <CircularProgress id='loader' className='hide' />\r\n          <Button className='register' onClick={renderRegister}>Зарегистриговаться</Button>\r\n        </Grid>\r\n        <Login />\r\n        <span id='block' />\r\n      </Card>\r\n    </Container>\r\n  )\r\n}\r\n\r\nReactDOM.render(\r\n  <Form />,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}