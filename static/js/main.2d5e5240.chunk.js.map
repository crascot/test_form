{"version":3,"sources":["form/styles/styles.js","form/login.js","services/services.js","form/register.js","feed/feed-card/pagination/pagination.jsx","feed/feed-card/feed-card.jsx","feed/feed-header/feed-header.jsx","feed/feed-card/feed-create.jsx","feed/feed.jsx","form/form.js","database/database.js","App.js","index.js"],"names":["useStyles","makeStyles","body","margin","paddingBottom","borderTop","width","marginTop","register","textDecoration","color","hide","display","Login","nickname","targetName","password","targetPassword","disabled","setDisabled","errorName","errorPassword","helperTextName","helperTextPassword","checkName","checkPassword","clear","clearType","classes","useState","setHide","redirect","setRedirect","click","setClick","useEffect","length","Container","maxWidth","Card","className","Grid","container","direction","justify","Typography","variant","to","onClick","style","Button","TextField","label","value","onChange","type","error","helperText","alignItems","id","size","userName","userPassword","DB","JSON","parse","localStorage","getItem","Promise","resolve","reject","setTimeout","users","find","user","name","alert","SignIn","then","setItem","catch","props","finally","CircularProgress","Register","email","targetEmail","confirmPassword","targetConfirmPassword","errorEmail","errorConfirmPassword","helperTextEmail","helperConfirmPassword","checkEmail","checkConfirmPassword","test","userEmail","stringify","push","CheckIn","pagination","flexWrap","justifyContent","num","boxShadow","Pagination","cardsLength","totalCards","paginate","pageNumbers","i","Math","ceil","map","number","block","card","minWidth","noCards","icon","marginLeft","cursor","paddingTop","save","FeedCard","cards","setCards","findCards","edit","setEdit","valueTitle","setValueTitle","valueBody","setValueBody","currentPage","setCurrentPage","lastCardIndex","firstCardsIndex","Box","filter","el","CardContent","e","target","fullWidth","multiline","gutterBottom","component","title","newCard","item","saveCard","slice","pageNumber","backgroundColor","padding","center","textAlign","fontSize","FeedHeader","setToken","search","setSearch","anchorEl","setAnchorEl","feedName","open","Boolean","event","textTransform","aria-controls","aria-haspopup","aria-expanded","undefined","currentTarget","Menu","onClose","MenuListProps","MenuItem","removeItem","lineHeight","input","titleText","setTitleText","bodyText","setBodyText","v","trim","Feed","token","fetch","response","json","data","toLowerCase","includes","toLocaleLowerCase","Redirect","Form","setNickname","setEmail","setPassword","setConfirmPassword","setErrorName","setErrorEmail","setErrorPassword","setErrorConfirmPassword","setHelperTextName","setHelperTextEmail","setHelperTextPassword","setHelperTextConfirmPassword","text","basename","path","exact","dataBase","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2d5e5240.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core';\r\n\r\n\r\nexport const useStyles = makeStyles({\r\n    body: {\r\n      margin: '20px 0',\r\n      paddingBottom: 5,\r\n      borderTop: '3px solid #0dcaf0',\r\n  \r\n      '& *': {\r\n        width: '100%',\r\n        marginTop: 7,\r\n      },\r\n    },\r\n    register: {\r\n      '& *': {\r\n        textDecoration: 'none',\r\n        color: 'inherit',\r\n      }\r\n    },\r\n    hide: {\r\n      display: 'none',\r\n      margin: 30,\r\n    },\r\n  })","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n  Card,\r\n  CircularProgress,\r\n  TextField,\r\n  Container\r\n} from '@material-ui/core';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { useStyles } from './styles/styles';\r\nimport { SignIn } from '../services/services';\r\n\r\n\r\nconst Login = ({\r\n  nickname, targetName,\r\n  password, targetPassword,\r\n  disabled, setDisabled,\r\n  errorName, errorPassword,\r\n  helperTextName, helperTextPassword,\r\n  checkName, checkPassword,\r\n  clear, clearType }) => {\r\n\r\n  const classes = useStyles()\r\n\r\n  const [hide, setHide] = useState(classes.hide)\r\n  const [redirect, setRedirect] = useState('')\r\n  const [click, setClick] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (click === true) {\r\n      if (!nickname) checkName(true)('Пожалуйста введите ваше имя')\r\n      else if (+nickname) checkName(true)('Имя не может состоять из цифр')\r\n      else checkName()()\r\n\r\n      if (password.length < 8) checkPassword(true)('Пароль слишкой короткий')\r\n      else checkPassword()()\r\n    }\r\n  })\r\n\r\n  const handleSubmit = () => {\r\n    setClick(true);\r\n    setDisabled(true);\r\n    setHide(null);\r\n    SignIn(nickname, password)\r\n      .then(() => {\r\n        localStorage.setItem('auth_token', true)\r\n        setRedirect('/feed')\r\n        clear()\r\n      }).catch((props) => {\r\n        switch (props) {\r\n          case nickname:\r\n            if (nickname === 0) checkName(true)('Пожалуйста введите ваше имя')\r\n            break;\r\n          case password:\r\n            checkPassword(true)('Пароль слишкой короткий')\r\n            break;\r\n\r\n          // no default\r\n        }\r\n      })\r\n      .finally(() => {\r\n        setDisabled(false);\r\n        setHide(classes.hide);\r\n      })\r\n  }\r\n\r\n  return (\r\n    <Container maxWidth='sm'>\r\n      <Card className='form'>\r\n        <Grid className='form-register head' container direction=\"row\" justify=\"space-between\">\r\n          <Typography variant='h5'>Войти в систему</Typography>\r\n          <Typography variant='h5'>или</Typography>\r\n          <Link to='/register' onClick={clear} style={{ textDecoration: 'none' }}><Button className={classes.register} onClick={clearType} disabled={disabled} variant=\"outlined\" color=\"primary\">Зарегистриговаться</Button></Link>\r\n        </Grid>\r\n        <Grid className={`form-register ${classes.body}`} container>\r\n          <TextField label=\"Введите имя\" value={nickname} onChange={targetName} disabled={disabled} type='text' error={errorName} helperText={helperTextName} />\r\n          <TextField label=\"Введите пароль\" value={password} onChange={targetPassword} disabled={disabled} type='password' error={errorPassword} helperText={helperTextPassword} />\r\n        </Grid>\r\n        <Grid className='form-register footer' container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\r\n          <Button id='login' size=\"small\" disabled={disabled} variant=\"contained\" onClick={handleSubmit} type='submit'><Redirect to={redirect} />Войти</Button>\r\n          <CircularProgress id='loader' className={`${hide} + visible`} />\r\n          <Button onClick={clear} type='submit' disabled={disabled}>Очистить</Button>\r\n        </Grid>\r\n      </Card>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Login;","export function SignIn(userName, userPassword) {\r\n\r\n    let DB = JSON.parse(localStorage.getItem('database'))\r\n\r\n    return new Promise((resolve, reject) => {\r\n        if (!userName || +userName) {\r\n            reject(userName)\r\n        } else if (!userPassword || userPassword.length < 8) {\r\n            reject(userPassword)\r\n        } else {\r\n            setTimeout(() => {\r\n                let findUser = DB.users.find(user => user.name === userName && user.password === userPassword)\r\n\r\n                if (findUser) {\r\n                    resolve()\r\n                }\r\n                else {\r\n                    reject(alert('Данного пользователя не существует или вы неправильно ввели свой пароль'))\r\n                }\r\n            }, 3000);\r\n        }\r\n    })\r\n}\r\n\r\nexport function CheckIn(userName, userEmail, userPassword, confirmPassword) {\r\n    return new Promise((resolve, reject) => {\r\n        const reg = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/iu;\r\n        let user = {\r\n            name: userName,\r\n            email: userEmail,\r\n            password: userPassword\r\n        }\r\n\r\n        if (!userName || +userName) {\r\n            reject(userName)\r\n        } else if (!userEmail || !reg.test(userEmail)) {\r\n            reject(userEmail)\r\n        } else if (!userPassword || userPassword.length < 8) {\r\n            reject(userPassword)\r\n        } else if (userPassword !== confirmPassword) {\r\n            reject(confirmPassword)\r\n        } else {\r\n            setTimeout(() => {\r\n                resolve(user)\r\n            }, 3000);\r\n        }\r\n    }).then((user) => {\r\n        return new Promise((resolve, reject) => {\r\n            let DB = JSON.parse(localStorage.getItem('database'))\r\n            let duplicate = DB.users.find(user => user.email === userEmail)\r\n\r\n            if (duplicate) {\r\n                reject(alert('Данная почта занята'))\r\n            }\r\n            else {\r\n                localStorage.setItem('database', JSON.stringify(user))\r\n                DB.users.push(user)\r\n                localStorage.setItem('database', JSON.stringify(DB))\r\n                resolve()\r\n            }\r\n        })\r\n    })\r\n}\r\n\r\nexport function FeedPush() {\r\n    return new Promise((resolve) => {\r\n        fetch('https://jsonplaceholder.typicode.com/posts')\r\n            .then(response => response.json())\r\n            .then(json => resolve(JSON.stringify(json)))\r\n    })\r\n}","import React, { useEffect, useState } from 'react';\r\nimport {\r\n    Button,\r\n    Card,\r\n    Grid,\r\n    Typography,\r\n    CircularProgress,\r\n    TextField,\r\n    Container\r\n} from '@material-ui/core';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { useStyles } from './styles/styles';\r\nimport { CheckIn } from '../services/services';\r\n\r\n\r\nconst Register = ({\r\n    nickname, targetName,\r\n    email, targetEmail,\r\n    password, targetPassword,\r\n    confirmPassword, targetConfirmPassword,\r\n    disabled, setDisabled,\r\n    errorName, errorEmail,\r\n    errorPassword, errorConfirmPassword,\r\n    helperTextName, helperTextEmail,\r\n    helperTextPassword, helperConfirmPassword,\r\n    checkName, checkEmail, checkPassword, checkConfirmPassword,\r\n    clear, clearType }) => {\r\n\r\n    const classes = useStyles()\r\n\r\n    const [hide, setHide] = useState(classes.hide)\r\n    const [redirect, setRedirect] = useState('/register')\r\n    const [click, setClick] = useState(false)\r\n\r\n    useEffect(() => {\r\n        const reg = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/iu;\r\n\r\n        if (click === true) {\r\n            if (!nickname) checkName(true)('Пожалуйста введите ваше имя')\r\n            else if (+nickname) checkName(true)('Имя не может состоять из цифр')\r\n            else checkName()()\r\n\r\n            if (!email || !reg.test(email)) checkEmail(true)('Почта некорректна')\r\n            else checkEmail()()\r\n\r\n            if (password.length < 8) checkPassword(true)('Пароль слишкой короткий')\r\n            else checkPassword()()\r\n\r\n            if (password !== confirmPassword) checkConfirmPassword(true)('Пароли не совпадают')\r\n            else checkConfirmPassword()()\r\n        }\r\n    })\r\n\r\n    const handleSubmit = () => {\r\n        setClick(true);\r\n        setDisabled(true);\r\n        setHide(null);\r\n        CheckIn(nickname, email, password, confirmPassword)\r\n            .then(() => {\r\n                localStorage.setItem('auth_token', true)\r\n                setRedirect('/feed')\r\n                clear()\r\n            }).catch((props) => {\r\n                switch (props) {\r\n                    case nickname:\r\n                        if (nickname === 0) checkName(true)('Пожалуйста введите ваше имя')\r\n                        break;\r\n                    case email:\r\n                        checkEmail()('Почта некорректна')\r\n                        break;\r\n                    case password:\r\n                        if (password !== confirmPassword) {\r\n                            checkPassword(true)('Пароль слишкой короткий')\r\n                            checkConfirmPassword(true)('Пароли не совпадают')\r\n                        }\r\n\r\n                    // no default\r\n                }\r\n            })\r\n            .finally(() => {\r\n                setDisabled(false);\r\n                setHide(classes.hide);\r\n            })\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth='sm'>\r\n            <Card className='form'>\r\n                <Grid className='form-register head' container direction=\"row\" justify=\"space-between\">\r\n                    <Typography variant='h5'>Зарегистриговаться</Typography>\r\n                    <Typography variant='h5'>или</Typography>\r\n                    <Link to='/' onClick={clear} style={{ textDecoration: 'none' }}><Button className={classes.register} onClick={clearType} disabled={disabled} variant=\"outlined\" color=\"primary\">Войти</Button></Link>\r\n                </Grid>\r\n                <Grid className={`form-register ${classes.body}`} container>\r\n                    <TextField label=\"Введите имя\" value={nickname} onChange={targetName} disabled={disabled} type='text' error={errorName} helperText={helperTextName} />\r\n                    <TextField label=\"Введите вашу почту\" value={email} onChange={targetEmail} disabled={disabled} type='email' error={errorEmail} helperText={helperTextEmail} />\r\n                    <TextField label=\"Придумайте пароль\" value={password} onChange={targetPassword} disabled={disabled} type='password' error={errorPassword} helperText={helperTextPassword} />\r\n                    <TextField label=\"Подтвердите пароль\" value={confirmPassword} onChange={targetConfirmPassword} disabled={disabled} type='password' error={errorConfirmPassword} helperText={helperConfirmPassword} />\r\n                </Grid>\r\n                <Grid className='form-register footer' container direction=\"row\" justify=\"space-between\">\r\n                    <Button id='register' size=\"small\" disabled={disabled} variant=\"contained\" onClick={handleSubmit} type='submit' ><Redirect to={redirect} />Зарегистриговаться</Button >\r\n                    <CircularProgress id='loader' className={hide} />\r\n                    <Button onClick={clear} disabled={disabled} >Очистить</Button>\r\n                </Grid>\r\n            </Card>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    pagination: {\r\n        width: '100%',\r\n        marginTop: '2rem',\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'center',\r\n    },\r\n    num: {\r\n        width: 30,\r\n        margin: '10px 3px',\r\n        boxShadow: \"0px 2px 1px -1px rgb(0 0 0 / 20%), 0px 1px 1px 0px rgb(0 0 0 / 14%), 0px 1px 3px 0px rgb(0 0 0 / 12%)\"\r\n    }\r\n});\r\n\r\nconst Pagination = ({ cardsLength, totalCards, paginate }) => {\r\n    const classes = useStyles();\r\n\r\n    const pageNumbers = []\r\n    for (let i = 1; i <= Math.ceil(totalCards / cardsLength); i++) {\r\n        pageNumbers.push(i)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.pagination}>\r\n            {\r\n                pageNumbers.map(number => (\r\n                    <Button onClick={() => paginate(number)}\r\n                        className={classes.num}\r\n                        size=\"small\"\r\n                        key={number}\r\n                    >\r\n                        {number}\r\n                    </Button>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pagination;","import React, { useState } from 'react';\r\nimport {\r\n    Card,\r\n    CardContent,\r\n    Typography,\r\n    TextField,\r\n    Box,\r\n    Button,\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport HighlightOff from '@material-ui/icons/HighlightOff';\r\nimport Pagination from '../feed-card/pagination/pagination';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    block: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'center',\r\n    },\r\n    card: {\r\n        minWidth: 280,\r\n        maxWidth: 280,\r\n        marginTop: '2rem',\r\n        margin: '0 14px',\r\n    },\r\n    noCards: {\r\n        marginTop: 20,\r\n    },\r\n    icon: {\r\n        marginTop: '9px',\r\n        marginLeft: '88%',\r\n        cursor: 'pointer',\r\n    },\r\n    body: {\r\n        borderTop: '3px solid #0dcaf0',\r\n        paddingTop: 4\r\n    },\r\n    save: {\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n        alignItems: 'flex-end',\r\n        marginTop: 5,\r\n    },\r\n    pagination: {\r\n        marginTop: '2rem',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n    }\r\n});\r\n\r\nconst FeedCard = ({ cards, setCards, findCards }) => {\r\n    const classes = useStyles();\r\n\r\n    const [edit, setEdit] = useState(null)\r\n    const [valueTitle, setValueTitle] = useState('')\r\n    const [valueBody, setValueBody] = useState('')\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n\r\n    let cardsLength = 8\r\n    const lastCardIndex = currentPage * cardsLength\r\n    const firstCardsIndex = lastCardIndex - cardsLength\r\n\r\n    const deleteCard = (id) => setCards(cards.filter((el) => el.id !== id))\r\n\r\n    const editCard = (id, title, body) => {\r\n        setEdit(id)\r\n        setValueTitle(title)\r\n        setValueBody(body)\r\n    }\r\n    const saveCard = (id) => {\r\n        let newCard = cards.map(item => {\r\n            if (item.id === id) {\r\n                item.title = valueTitle\r\n                item.body = valueBody\r\n            }\r\n            return item\r\n        })\r\n        setCards(newCard)\r\n        setEdit(null)\r\n    }\r\n\r\n    const paginate = pageNumber => setCurrentPage(pageNumber)\r\n\r\n    return (\r\n        <Box className={classes.block}>\r\n            {\r\n                cards.length === 0 ?\r\n                    <Typography variant=\"h3\" className={classes.noCards}>Посты закончились</Typography>\r\n                    :\r\n                    findCards.length === 0 ?\r\n                        <Typography variant=\"h3\" className={classes.noCards}>Пост не найден</Typography>\r\n                        :\r\n                        findCards.map((props) => (\r\n                            <Card className={classes.card} id={props.id} key={props.id}>\r\n                                <HighlightOff className={classes.icon} onClick={() => deleteCard(props.id)} />\r\n                                <CardContent>\r\n                                    <div>\r\n                                        {\r\n                                            edit === props.id ? <div>\r\n                                                <TextField value={valueTitle} onChange={(e) => setValueTitle(e.target.value)} fullWidth multiline />\r\n                                            </div>\r\n                                                :\r\n                                                <Typography\r\n                                                    gutterBottom variant=\"h5\"\r\n                                                    component=\"h2\"\r\n                                                >\r\n                                                    {props.title}\r\n                                                </Typography>\r\n                                        }\r\n                                    </div>\r\n                                    <div className={classes.body}>\r\n                                        {\r\n                                            edit === props.id ? <div>\r\n                                                <TextField value={valueBody} onChange={(e) => setValueBody(e.target.value)} fullWidth multiline />\r\n                                            </div>\r\n                                                :\r\n                                                <Typography variant=\"body2\"\r\n                                                    color=\"textSecondary\"\r\n                                                    component=\"p\"\r\n                                                >\r\n                                                    {props.body}\r\n                                                </Typography>\r\n                                        }\r\n                                    </div>\r\n                                    <Typography className={classes.save} variant=\"button\">\r\n                                        {\r\n                                            edit === props.id ?\r\n                                                <Button onClick={() => saveCard(props.id)} size='small'>Сохранить</Button>\r\n                                                :\r\n                                                <Button onClick={() => editCard(props.id, props.title, props.body)}>Редактировать {props.id}</Button>\r\n                                        }\r\n                                    </Typography>\r\n                                </CardContent>\r\n                            </Card>\r\n                        )).slice(firstCardsIndex, lastCardIndex)\r\n            }\r\n            <Pagination\r\n                cardsLength={cardsLength}\r\n                totalCards={findCards.length}\r\n                paginate={paginate}\r\n            />\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default FeedCard;","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    Box,\r\n    Typography,\r\n    Button,\r\n    TextField,\r\n} from '@material-ui/core';\r\nimport {\r\n    Menu,\r\n    MenuItem\r\n} from '@mui/material';\r\n\r\nconst useStyles = makeStyles({\r\n    block: {\r\n        width: '100%',\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        backgroundColor: '#0dcaf0',\r\n        margin: '0 -15xp',\r\n        padding: '15px'\r\n    },\r\n    center: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'space-between',\r\n        width: '30%',\r\n        textAlign: 'center'\r\n    },\r\n    name: {\r\n        fontSize: 25\r\n    }\r\n});\r\n\r\nconst FeedHeader = ({ setToken, nickname, search, setSearch }) => {\r\n    const classes = useStyles();\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null)\r\n    const [feedName] = useState(nickname)\r\n\r\n    const open = Boolean(anchorEl)\r\n\r\n    const handleClick = (event) => setAnchorEl(event.currentTarget)\r\n    const handleClose = () => setAnchorEl(null)\r\n    const leave = () => setToken(localStorage.removeItem('auth_token'))\r\n\r\n    return (\r\n        <Box className={classes.block}>\r\n\r\n            <Typography variant=\"h4\">Test-Form</Typography>\r\n            <div className={classes.center}>\r\n                <TextField label=\"Пойск...\" value={search} onChange={(event) => setSearch(event.target.value)} />\r\n            </div>\r\n            <div>\r\n                <Button\r\n                    style={{ textTransform: 'capitalize' }}\r\n                    id=\"basic-button\"\r\n                    aria-controls=\"basic-menu\"\r\n                    aria-haspopup=\"true\"\r\n                    aria-expanded={open ? 'true' : undefined}\r\n                    onClick={handleClick}\r\n                >\r\n                    <Typography variant=\"body1\" className={classes.name}>\r\n                        {feedName}\r\n                    </Typography>\r\n                </Button>\r\n                <Menu\r\n                    id=\"basic-menu\"\r\n                    anchorEl={anchorEl}\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    MenuListProps={{\r\n                        'aria-labelledby': 'basic-button',\r\n                    }}\r\n                >\r\n                    <MenuItem onClick={leave}>Выйти</MenuItem>\r\n                </Menu>\r\n            </div>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default FeedHeader;","import React, { useState } from 'react';\r\nimport {\r\n    Card,\r\n    CardContent,\r\n    Typography,\r\n    TextField,\r\n    Box,\r\n    Button,\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    block: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'center',\r\n    },\r\n    card: {\r\n        minWidth: 280,\r\n        maxWidth: 280,\r\n        marginTop: '2rem',\r\n        margin: '0 14px',\r\n        padding: 15,\r\n        textAlign: 'center',\r\n    },\r\n    center: {\r\n        lineHeight: 4\r\n    },\r\n    input: {\r\n        lineHeight: 30\r\n    }\r\n});\r\n\r\nconst FeedCard = ({ cards, setCards }) => {\r\n    const classes = useStyles();\r\n\r\n    const [titleText, setTitleText] = useState('')\r\n    const [bodyText, setBodyText] = useState('')\r\n\r\n    const addCards = () => {\r\n        if (titleText.trim() && bodyText.trim()) {\r\n\r\n            let newCard = {\r\n                // id: ,\r\n                title: titleText,\r\n                body: bodyText\r\n            }\r\n\r\n            setCards([...cards, newCard])\r\n\r\n            setTitleText('')\r\n            setBodyText('')\r\n        } else alert('Заполните поле')\r\n    }\r\n\r\n    return (\r\n        <Box className={classes.block}>\r\n            <Card className={classes.card}>\r\n                <Typography variant='h6'>Добавить пост</Typography>\r\n                <CardContent className={classes.center}>\r\n                    <TextField className={classes.input} fullWidth label=\"Заголовок\" value={titleText} onChange={(v) => setTitleText(v.target.value)} type='text' />\r\n                    <TextField className={classes.input} fullWidth label=\"Содержание\" value={bodyText} onChange={(v) => setBodyText(v.target.value)} type='text' />\r\n                </CardContent>\r\n                <Button onClick={addCards} size='large'>Сохранить</Button>\r\n            </Card>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default FeedCard;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Box,\r\n    Container,\r\n} from '@material-ui/core';\r\nimport { Redirect } from 'react-router-dom';\r\nimport FeedCard from './feed-card/feed-card';\r\nimport FeedHeader from './feed-header/feed-header';\r\nimport { FeedPush } from '../services/services';\r\nimport FeedCreat from './feed-card/feed-create';\r\n\r\n\r\nconst Feed = ({ nickname }) => {\r\n\r\n    const [cards, setCards] = useState([])\r\n    const [token, setToken] = useState(localStorage.getItem('auth_token'))\r\n    const [search, setSearch] = useState('')\r\n    useEffect(() => {\r\n        FeedPush()\r\n            .then((data) => {\r\n                setCards(JSON.parse(data))\r\n            })\r\n    }, [])\r\n\r\n    const findCards = cards.filter(card => {\r\n        return card.title.toLowerCase().includes(search.toLocaleLowerCase())\r\n    })\r\n\r\n    if (token) {\r\n        return (\r\n            <Box display=\"flex\" flexWrap=\"wrap\" justifyContent=\"flex-start\">\r\n                <FeedHeader setToken={setToken} nickname={nickname} search={search} setSearch={setSearch} />\r\n                <Container>\r\n                    <FeedCreat  cards={cards} setCards={setCards} />\r\n                    <FeedCard cards={cards} setCards={setCards} findCards={findCards} />\r\n                </Container>\r\n            </Box>\r\n        )\r\n    } else return Redirect('/')\r\n}\r\n\r\nexport default Feed;","import React, { useState } from 'react';\r\nimport Login from './login';\r\nimport Register from './register';\r\nimport Feed from '../feed/feed';\r\nimport './form.scss';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\n\r\n\r\nconst Form = () => {\r\n\r\n  const [nickname, setNickname] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n\r\n  const [disabled, setDisabled] = useState(false)\r\n\r\n  const [errorName, setErrorName] = useState(false)\r\n  const [errorEmail, setErrorEmail] = useState(false)\r\n  const [errorPassword, setErrorPassword] = useState(false)\r\n  const [errorConfirmPassword, setErrorConfirmPassword] = useState(false)\r\n  const [helperTextName, setHelperTextName] = useState('')\r\n  const [helperTextEmail, setHelperTextEmail] = useState('')\r\n  const [helperTextPassword, setHelperTextPassword] = useState('')\r\n  const [helperConfirmPassword, setHelperTextConfirmPassword] = useState('')\r\n\r\n  const targetName = (event)  => setNickname(event.target.value)\r\n  const targetEmail = (event) => setEmail(event.target.value)\r\n  const targetPassword = (event) => setPassword(event.target.value)\r\n  const targetConfirmPassword = (event) => setConfirmPassword(event.target.value)\r\n\r\n  const checkName = error => text => {\r\n    setErrorName(error)\r\n    setHelperTextName(text)\r\n  }\r\n  const checkEmail = error => text => {\r\n    setErrorEmail(error)\r\n    setHelperTextEmail(text)\r\n  }\r\n  const checkPassword = error => text => {\r\n    setErrorPassword(error)\r\n    setHelperTextPassword(text)\r\n  }\r\n  const checkConfirmPassword = error => text => {\r\n    setErrorConfirmPassword(error)\r\n    setHelperTextConfirmPassword(text)\r\n  }\r\n\r\n  const clearType = () => {\r\n    checkName()()\r\n    checkEmail()()\r\n    checkPassword()()\r\n    checkConfirmPassword()()\r\n  }\r\n  const clear = () => {\r\n    setNickname('');\r\n    setEmail('');\r\n    setPassword('');\r\n    setConfirmPassword('');\r\n  }\r\n\r\n  return (\r\n    <div style={{ margin: -8 }}>\r\n      <BrowserRouter basename='/test_form'>\r\n        <Switch>\r\n          <Route path='/' exact>\r\n            <Login\r\n              nickname={nickname} targetName={targetName}\r\n              password={password} targetPassword={targetPassword}\r\n              disabled={disabled} setDisabled={setDisabled}\r\n              errorName={errorName} errorPassword={errorPassword}\r\n              helperTextName={helperTextName} helperTextPassword={helperTextPassword}\r\n              checkName={checkName} checkPassword={checkPassword}\r\n              clear={clear} clearType={clearType}\r\n            />\r\n          </Route>\r\n          <Route path='/register'>\r\n            <Register\r\n              nickname={nickname} targetName={targetName}\r\n              email={email} targetEmail={targetEmail}\r\n              password={password} targetPassword={targetPassword}\r\n              confirmPassword={confirmPassword} targetConfirmPassword={targetConfirmPassword}\r\n              disabled={disabled} setDisabled={setDisabled}\r\n              errorName={errorName} errorEmail={errorEmail}\r\n              errorPassword={errorPassword} errorConfirmPassword={errorConfirmPassword}\r\n              helperTextName={helperTextName} helperTextEmail={helperTextEmail}\r\n              helperTextPassword={helperTextPassword} helperConfirmPassword={helperConfirmPassword}\r\n              checkName={checkName} checkEmail={checkEmail}\r\n              checkPassword={checkPassword} checkConfirmPassword={checkConfirmPassword}\r\n              clear={clear} clearType={clearType}\r\n            />\r\n          </Route>\r\n          <Route path='/feed'><Feed nickname={nickname} /></Route>\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Form;","export const dataBase = {\r\n    users: []\r\n}","import React, { useEffect } from 'react';\r\nimport Form from './form/form'\r\nimport { dataBase } from './database/database';\r\n\r\nconst App = () => {\r\n    useEffect(() => {\r\n        const DB = localStorage.getItem('database')\r\n\r\n        if (!DB) {\r\n            localStorage.setItem('database', JSON.stringify(dataBase))\r\n        }\r\n    }, [])\r\n\r\n    return <Form />\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}