{"version":3,"sources":["form/styles/styles.js","form/login.js","database/database.js","form/register.js","main/main.jsx","form/form.js","App.js","index.js"],"names":["useStyles","makeStyles","body","margin","paddingBottom","borderTop","width","marginTop","register","textDecoration","color","hide","display","success","Login","classes","useState","nickname","setNickname","password","setPassword","disabled","setDisabled","setHide","redirect","setRedirect","Card","className","Grid","container","direction","justify","Typography","variant","Button","to","TextField","id","label","value","onChange","event","target","type","alignItems","size","onClick","Promise","resolve","reject","DB","JSON","parse","localStorage","getItem","alert","length","setTimeout","users","forEach","user","name","CircularProgress","dataBase","Register","email","setEmail","confirmPassword","setConfirmPassword","Clear","duplicate","find","test","setItem","stringify","push","Main","Container","fixed","Form","maxWidth","basename","exact","path","component","App","useEffect","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dbb47ebf.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core';\r\n\r\n\r\nexport const useStyles = makeStyles({\r\n    body: {\r\n      margin: '20px 0',\r\n      paddingBottom: 5,\r\n      borderTop: '3px solid #0dcaf0',\r\n  \r\n      '& *': {\r\n        width: '100%',\r\n        marginTop: 7,\r\n      },\r\n    },\r\n    register: {\r\n      '& *': {\r\n        textDecoration: 'none',\r\n        color: 'inherit',\r\n      }\r\n    },\r\n    hide: {\r\n      display: 'none',\r\n      margin: 30,\r\n    },\r\n    success: {\r\n      color: '#4caf50'\r\n    }\r\n  })","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n  Card,\r\n  CircularProgress,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { useStyles } from './styles/styles';\r\n\r\n\r\nconst Login = () => {\r\n\r\n  const classes = useStyles()\r\n\r\n  const [nickname, setNickname] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const [disabled, setDisabled] = useState(false)\r\n  const [hide, setHide] = useState(classes.hide)\r\n\r\n  const [redirect, setRedirect] = useState('')\r\n\r\n  function targetName(event) {\r\n    setNickname(event.target.value)\r\n  }\r\n  function targetPassword(event) {\r\n    setPassword(event.target.value)\r\n  }\r\n\r\n  function Click() {\r\n    return new Promise((resolve, reject) => {\r\n      let DB = JSON.parse(localStorage.getItem('database'))\r\n\r\n      if (!nickname) {\r\n        reject(alert('Пожалуйста введите ваше имя'))\r\n      } else if (+nickname) {\r\n        reject(alert('Имя не может состоять из цифр'))\r\n      } else if (!password) {\r\n        reject(alert('Введите пароль'))\r\n      } else if (password.length < 8) {\r\n        reject(alert('Этот пароль слишкой короткий'))\r\n      } else {\r\n        setDisabled(true)\r\n        setHide()\r\n\r\n        setTimeout(() => {\r\n          DB.users.forEach(user => {\r\n            if (user.name === nickname && user.password === password) {\r\n              setRedirect('/main')\r\n              resolve(alert('Добро пожаловать'))\r\n            } else {\r\n              reject(alert('Данного пользователя не существует или вы неправильно ввели свой пароль'))\r\n            }\r\n            setDisabled(false)\r\n            setHide(classes.hide)\r\n          });\r\n        }, 3000);\r\n      }\r\n    })\r\n  }\r\n\r\n  function Clear() {\r\n    setNickname('');\r\n    setPassword('');\r\n  }\r\n\r\n  return (\r\n    <Card className='form'>\r\n      <Grid className='form-register head' container direction=\"row\" justify=\"space-between\">\r\n        <Typography variant='h5'>Войти в систему</Typography>\r\n        <Typography variant='h5'>или</Typography>\r\n        <Button className={classes.register} disabled={disabled} variant=\"outlined\" color=\"primary\"><Link to='/register'>Зарегистриговаться</Link></Button>\r\n      </Grid>\r\n      <Grid className={`form-register ${classes.body}`} container>\r\n        <TextField id=\"standard-basic\" label=\"Введите имя\" value={nickname} onChange={targetName} disabled={disabled} type='text' />\r\n        <TextField id=\"standard-basic\" label=\"Введите пароль\" value={password} onChange={targetPassword} disabled={disabled} type='password' />\r\n      </Grid>\r\n      <Grid className='form-register footer' container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\r\n        <Button id='login' size=\"small\" disabled={disabled} variant=\"contained\" onClick={Click} type='submit'><Redirect to={redirect} />Войти</Button>\r\n        <CircularProgress id='loader' className={hide} />\r\n        <Button onClick={Clear} type='submit' disabled={disabled}>Очистить</Button>\r\n      </Grid>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Login;","export const dataBase = {\r\n    users: []\r\n}","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Button,\r\n    Card,\r\n    Grid,\r\n    Typography,\r\n    CircularProgress,\r\n    TextField\r\n} from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport { dataBase } from '../database/database';\r\nimport { useStyles } from './styles/styles';\r\n\r\n\r\nconst Register = () => {\r\n\r\n    const classes = useStyles()\r\n\r\n    const [nickname, setNickname] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n\r\n    const [disabled, setDisabled] = useState(false)\r\n    const [hide, setHide] = useState(classes.hide)\r\n\r\n    function targetName(event) {\r\n        setNickname(event.target.value)\r\n    }\r\n    function targetEmail(event) {\r\n        setEmail(event.target.value)\r\n    }\r\n    function targetPassword(event) {\r\n        setPassword(event.target.value)\r\n    }\r\n    function targetConfirmPassword(event) {\r\n        setConfirmPassword(event.target.value)\r\n    }\r\n\r\n    function Click() {\r\n        return new Promise(() => {\r\n            const reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n            let DB = JSON.parse(localStorage.getItem('database'))\r\n            let duplicate = DB.users.find(user => user.email === email)\r\n            let user = {\r\n                name: nickname,\r\n                email: email,\r\n                password: password\r\n            }\r\n\r\n            if (!nickname) {\r\n                alert('Пожалуйста введите ваше имя')\r\n            } else if (+nickname) {\r\n                alert('Имя не может состоять из цифр')\r\n            } else if (!email) {\r\n                alert('Введите почту')\r\n            } else if (!reg.test(email)) {\r\n                alert('Почта некорректна')\r\n            } else if (!password) {\r\n                alert('Введите пароль')\r\n            } else if (password.length < 8) {\r\n                alert('Этот пароль слишкой короткий')\r\n            } else if (password !== confirmPassword) {\r\n                alert('Пароли не совпадают')\r\n            } else {\r\n                setDisabled(true)\r\n                setHide()\r\n\r\n                setTimeout(() => {\r\n                    if (duplicate) (alert('Данная почта занята'))\r\n                    else {\r\n                        localStorage.setItem('database', JSON.stringify(user))\r\n                        DB.users.push(user)\r\n                        localStorage.setItem('database', JSON.stringify(DB))\r\n                        \r\n                        setDisabled(false)\r\n                        setHide(classes.hide)\r\n                        \r\n                        Clear()\r\n                    }\r\n                }, 3000);\r\n            }\r\n        })\r\n    }\r\n\r\n    function Clear() {\r\n        setNickname('');\r\n        setEmail('');\r\n        setPassword('');\r\n        setConfirmPassword('');\r\n    }\r\n\r\n    return (\r\n        <Card className='form'>\r\n            <Grid className='form-register head' container direction=\"row\" justify=\"space-between\">\r\n                <Typography variant='h5'>Зарегистриговаться</Typography>\r\n                <Typography variant='h5'>или</Typography>\r\n                <Button className={classes.register} disabled={disabled} variant=\"outlined\" color=\"primary\"><Link to='/'>Войти</Link></Button>\r\n            </Grid>\r\n            <Grid className={`form-register ${classes.body}`} container>\r\n                <TextField id=\"standard-basic\" label=\"Введите имя\" value={nickname} onChange={targetName} disabled={disabled} type='text' />\r\n                <TextField id=\"standard-basic\" label=\"Введите вашу почту\" value={email} onChange={targetEmail} disabled={disabled} type='email' />\r\n                <TextField id=\"standard-basic\" label=\"Придумайте пароль\" value={password} onChange={targetPassword} disabled={disabled} type='password' />\r\n                <TextField id=\"standard-basic\" label=\"Подтвердите пароль\" value={confirmPassword} onChange={targetConfirmPassword} disabled={disabled} type='password' />\r\n            </Grid>\r\n            <Grid className='form-register footer' container direction=\"row\" justify=\"space-between\">\r\n                <Button id='register' size=\"small\" disabled={disabled} variant=\"contained\" onClick={Click} type='submit' >Зарегистриговаться</Button >\r\n                <CircularProgress id='loader' className={hide} />\r\n                <Button onClick={Clear} disabled={disabled} >Очистить</Button>\r\n            </Grid>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport { Container, Grid, Typography } from '@material-ui/core';\r\nimport './main.scss';\r\n\r\n\r\nconst Main = () => {\r\n    return (\r\n        <Container fixed>\r\n            {/* <Grid className='head'>head</Grid>\r\n            <Grid className='body'>body</Grid>\r\n            <Grid className='footer'>footer</Grid> */}\r\n            <Typography variant='h5'>Данная страница еще в разработке</Typography>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\nimport { Container } from '@material-ui/core';\r\nimport Login from './login';\r\nimport Register from './register';\r\nimport Main from '../main/main';\r\nimport './form.scss';\r\nimport { HashRouter as Router, Route } from 'react-router-dom';\r\n\r\n\r\nconst Form = () => {\r\n  return (\r\n    <Container maxWidth='sm'>\r\n      <Router basename='/test_form'>\r\n        <Route exact path='/' component={Login} />\r\n        <Route exact path='/register' component={Register} />\r\n        <Route exact path='/main' component={Main} />\r\n      </Router>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Form;","import React, { useEffect } from 'react';\r\nimport Form from './form/form'\r\nimport { dataBase } from './database/database';\r\n\r\nconst App = () => {\r\n    useEffect(() => {\r\n        const DB = localStorage.getItem('database')\r\n\r\n        if (!DB) {\r\n            localStorage.setItem('database', JSON.stringify(dataBase))\r\n        }\r\n    }, [])\r\n\r\n    return <Form />\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}