{"version":3,"sources":["form/styles/styles.js","form/login.js","services/services.js","form/register.js","main/main.jsx","form/form.js","database/database.js","App.js","index.js"],"names":["useStyles","makeStyles","body","margin","paddingBottom","borderTop","width","marginTop","register","textDecoration","color","hide","display","Login","classes","useState","nickname","setNickname","password","setPassword","disabled","setDisabled","setHide","redirect","setRedirect","Card","className","Grid","container","direction","justify","Typography","variant","Button","to","TextField","label","value","onChange","event","target","type","alignItems","id","size","onClick","userName","userPassword","DB","JSON","parse","localStorage","getItem","Promise","resolve","reject","alert","length","setTimeout","users","find","user","name","SignIn","then","finally","CircularProgress","Register","email","setEmail","confirmPassword","setConfirmPassword","Clear","userEmail","test","setItem","stringify","push","CheckIn","Main","Container","fixed","Form","maxWidth","basename","exact","path","component","dataBase","App","useEffect","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a256e258.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core';\r\n\r\n\r\nexport const useStyles = makeStyles({\r\n    body: {\r\n      margin: '20px 0',\r\n      paddingBottom: 5,\r\n      borderTop: '3px solid #0dcaf0',\r\n  \r\n      '& *': {\r\n        width: '100%',\r\n        marginTop: 7,\r\n      },\r\n    },\r\n    register: {\r\n      '& *': {\r\n        textDecoration: 'none',\r\n        color: 'inherit',\r\n      }\r\n    },\r\n    hide: {\r\n      display: 'none',\r\n      margin: 30,\r\n    },\r\n  })","import React, { useState } from 'react';\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n  Card,\r\n  CircularProgress,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { useStyles } from './styles/styles';\r\nimport { SignIn } from '../services/services';\r\n\r\n\r\nconst Login = () => {\r\n\r\n  const classes = useStyles()\r\n\r\n  const [nickname, setNickname] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const [disabled, setDisabled] = useState(false)\r\n  const [hide, setHide] = useState(classes.hide)\r\n\r\n  const [redirect, setRedirect] = useState('')\r\n\r\n  const handleSubmit = () => {\r\n    setDisabled(true);\r\n    setHide(null);\r\n    SignIn(nickname, password)\r\n      .then(() => {\r\n        alert('Добро пожаловать')\r\n        setRedirect('/main')\r\n      })\r\n      .finally(() => {\r\n        setDisabled(false);\r\n        setHide(classes.hide);\r\n      })\r\n  }\r\n\r\n  function targetName(event) {\r\n    setNickname(event.target.value)\r\n  }\r\n  function targetPassword(event) {\r\n    setPassword(event.target.value)\r\n  }\r\n\r\n  function Clear() {\r\n    setNickname('');\r\n    setPassword('');\r\n  }\r\n\r\n  return (\r\n    <Card className='form'>\r\n      <Grid className='form-register head' container direction=\"row\" justify=\"space-between\">\r\n        <Typography variant='h5'>Войти в систему</Typography>\r\n        <Typography variant='h5'>или</Typography>\r\n        <Button className={classes.register} disabled={disabled} variant=\"outlined\" color=\"primary\"><Link to='/register'>Зарегистриговаться</Link></Button>\r\n      </Grid>\r\n      <Grid className={`form-register ${classes.body}`} container>\r\n        <TextField label=\"Введите имя\" value={nickname} onChange={targetName} disabled={disabled} type='text' />\r\n        <TextField label=\"Введите пароль\" value={password} onChange={targetPassword} disabled={disabled} type='password' />\r\n      </Grid>\r\n      <Grid className='form-register footer' container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\r\n        <Button id='login' size=\"small\" disabled={disabled} variant=\"contained\" onClick={handleSubmit} type='submit'><Redirect to={redirect} />Войти</Button>\r\n        <CircularProgress id='loader' className={hide} />\r\n        <Button onClick={Clear} type='submit' disabled={disabled}>Очистить</Button>\r\n      </Grid>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Login;","export function SignIn(userName, userPassword) {\r\n\r\n    let DB = JSON.parse(localStorage.getItem('database'))\r\n\r\n    return new Promise((resolve, reject) => {\r\n        if (!userName) {\r\n            reject(alert('Пожалуйста введите ваше имя'))\r\n        } else if (+userName) {\r\n            reject(alert('Имя не может состоять из цифр'))\r\n        } else if (!userPassword) {\r\n            reject(alert('Введите пароль'))\r\n        } else if (userPassword.length < 8) {\r\n            reject(alert('Этот пароль слишкой короткий'))\r\n        } else {\r\n            setTimeout(() => {\r\n                let findUser = DB.users.find(user => user.name === userName && user.password === userPassword)\r\n\r\n                if (findUser) {\r\n                    resolve()\r\n                }\r\n                else {\r\n                    reject(alert('Данного пользователя не существует или вы неправильно ввели свой пароль'))\r\n                }\r\n            }, 3000);\r\n        }\r\n    })\r\n}\r\n\r\nexport function CheckIn(userName, userEmail, userPassword, confirmPassword) {\r\n    return new Promise((resolve, reject) => {\r\n        const reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n        let user = {\r\n            name: userName,\r\n            email: userEmail,\r\n            password: userPassword\r\n        }\r\n\r\n        if (!userName) {\r\n            reject(alert('Пожалуйста введите ваше имя'))\r\n        } else if (+userName) {\r\n            reject(alert('Имя не может состоять из цифр'))\r\n        } else if (!userEmail) {\r\n            reject(alert('Введите почту'))\r\n        } else if (!reg.test(userEmail)) {\r\n            reject(alert('Почта некорректна'))\r\n        } else if (!userPassword) {\r\n            reject(alert('Введите пароль'))\r\n        } else if (userPassword.length < 8) {\r\n            reject(alert('Этот пароль слишкой короткий'))\r\n        } else if (userPassword !== confirmPassword) {\r\n            reject(alert('Пароли не совпадают'))\r\n        } else {\r\n            setTimeout(() => {\r\n                resolve(user)\r\n            }, 3000);\r\n        }\r\n    }).then((user) => {\r\n        return new Promise((resolve, reject) => {\r\n            let DB = JSON.parse(localStorage.getItem('database'))\r\n            let duplicate = DB.users.find(user => user.email === userEmail)\r\n\r\n            if (duplicate) {\r\n                reject(alert('Данная почта занята'))\r\n            }\r\n            else {\r\n                localStorage.setItem('database', JSON.stringify(user))\r\n                DB.users.push(user)\r\n                localStorage.setItem('database', JSON.stringify(DB))\r\n                resolve()\r\n            }\r\n        })\r\n    })\r\n}","import React, { useState } from 'react';\r\nimport {\r\n    Button,\r\n    Card,\r\n    Grid,\r\n    Typography,\r\n    CircularProgress,\r\n    TextField\r\n} from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport { useStyles } from './styles/styles';\r\nimport { CheckIn } from '../services/services';\r\n\r\n\r\nconst Register = () => {\r\n\r\n    const classes = useStyles()\r\n\r\n    const [nickname, setNickname] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n\r\n    const [disabled, setDisabled] = useState(false)\r\n    const [hide, setHide] = useState(classes.hide)\r\n\r\n    function targetName(event) {\r\n        setNickname(event.target.value)\r\n    }\r\n    function targetEmail(event) {\r\n        setEmail(event.target.value)\r\n    }\r\n    function targetPassword(event) {\r\n        setPassword(event.target.value)\r\n    }\r\n    function targetConfirmPassword(event) {\r\n        setConfirmPassword(event.target.value)\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        setDisabled(true);\r\n        setHide(null);\r\n        CheckIn(nickname, email, password, confirmPassword)\r\n            .then(() => {\r\n                Clear()\r\n            })\r\n            .finally(() => {\r\n                setDisabled(false);\r\n                setHide(classes.hide);\r\n            })\r\n    }\r\n\r\n    function Clear() {\r\n        setNickname('');\r\n        setEmail('');\r\n        setPassword('');\r\n        setConfirmPassword('');\r\n    }\r\n\r\n    return (\r\n        <Card className='form'>\r\n            <Grid className='form-register head' container direction=\"row\" justify=\"space-between\">\r\n                <Typography variant='h5'>Зарегистриговаться</Typography>\r\n                <Typography variant='h5'>или</Typography>\r\n                <Button className={classes.register} disabled={disabled} variant=\"outlined\" color=\"primary\"><Link to='/'>Войти</Link></Button>\r\n            </Grid>\r\n            <Grid className={`form-register ${classes.body}`} container>\r\n                <TextField label=\"Введите имя\" value={nickname} onChange={targetName} disabled={disabled} type='text' />\r\n                <TextField label=\"Введите вашу почту\" value={email} onChange={targetEmail} disabled={disabled} type='email' />\r\n                <TextField label=\"Придумайте пароль\" value={password} onChange={targetPassword} disabled={disabled} type='password' />\r\n                <TextField label=\"Подтвердите пароль\" value={confirmPassword} onChange={targetConfirmPassword} disabled={disabled} type='password' />\r\n            </Grid>\r\n            <Grid className='form-register footer' container direction=\"row\" justify=\"space-between\">\r\n                <Button id='register' size=\"small\" disabled={disabled} variant=\"contained\" onClick={handleSubmit} type='submit' >Зарегистриговаться</Button >\r\n                <CircularProgress id='loader' className={hide} />\r\n                <Button onClick={Clear} disabled={disabled} >Очистить</Button>\r\n            </Grid>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport { Container, Grid, Typography } from '@material-ui/core';\r\nimport './main.scss';\r\n\r\n\r\nconst Main = () => {\r\n    return (\r\n        <Container fixed>\r\n            {/* <Grid className='head'>head</Grid>\r\n            <Grid className='body'>body</Grid>\r\n            <Grid className='footer'>footer</Grid> */}\r\n            <Typography variant='h5'>Данная страница еще в разработке</Typography>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\nimport { Container } from '@material-ui/core';\r\nimport Login from './login';\r\nimport Register from './register';\r\nimport Main from '../main/main';\r\nimport './form.scss';\r\nimport { HashRouter as Router, Route } from 'react-router-dom';\r\n\r\n\r\nconst Form = () => {\r\n  return (\r\n    <Container maxWidth='sm'>\r\n      <Router basename='/test_form'>\r\n        <Route exact path='/' component={Login} />\r\n        <Route exact path='/register' component={Register} />\r\n        <Route exact path='/main' component={Main} />\r\n      </Router>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Form;","export const dataBase = {\r\n    users: []\r\n}","import React, { useEffect } from 'react';\r\nimport Form from './form/form'\r\nimport { dataBase } from './database/database';\r\n\r\nconst App = () => {\r\n    useEffect(() => {\r\n        const DB = localStorage.getItem('database')\r\n\r\n        if (!DB) {\r\n            localStorage.setItem('database', JSON.stringify(dataBase))\r\n        }\r\n    }, [])\r\n\r\n    return <Form />\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}