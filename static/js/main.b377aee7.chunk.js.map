{"version":3,"sources":["form/styles/styles.js","services/services.js","form/login.js","form/register.js","feed/posts/pagination/pagination.jsx","feed/posts/posts.jsx","feed/feed-header/feed-header.jsx","feed/posts/posts-create.jsx","feed/profile/user.jsx","feed/profile/info.jsx","feed/profile/profile.jsx","feed/feed.jsx","form/form.js","database/database.js","App.js","index.js"],"names":["useStyles","makeStyles","body","margin","paddingBottom","borderTop","marginTop","width","display","alignItems","marginLeft","border","register","textDecoration","color","showPasswordButton","footer","paddingTop","reg","DB","JSON","parse","localStorage","getItem","Login","email","targetEmail","password","targetPassword","disabled","setDisabled","errorEmail","errorPassword","helperTextEmail","helperTextPassword","checkEmail","checkPassword","show","showPassword","buttonStyle","setButtonStyle","clear","clearType","classes","useState","hide","setHide","redirect","setRedirect","click","setClick","useEffect","test","length","Container","maxWidth","Card","className","Grid","container","direction","justify","Typography","variant","to","onClick","style","Button","TextField","fullWidth","label","value","onChange","type","error","helperText","marginBottom","id","size","userEmail","userPassword","Promise","resolve","reject","setTimeout","findUser","users","find","user","setItem","alert","then","catch","props","finally","CircularProgress","Register","nickname","targetName","confirmPassword","targetConfirmPassword","errorName","errorConfirmPassword","helperTextName","helperConfirmPassword","checkName","checkConfirmPassword","userName","name","CheckIn","stringify","push","pagination","flexWrap","justifyContent","num","boxShadow","Pagination","postsLength","totalPosts","paginate","pageNumbers","i","Math","ceil","map","number","block","post","minWidth","noPosts","textAlign","icon","cursor","content","title","borderBottom","save","Posts","posts","setPosts","findPosts","edit","setEdit","valueTitle","setValueTitle","valueBody","setValueBody","currentPage","setCurrentPage","lastPostIndex","firstPostsIndex","Box","filter","el","CardContent","e","target","multiline","gutterBottom","component","newPost","item","savePost","slice","pageNumber","backgroundColor","padding","left","webName","marginRight","fontSize","FeedHeader","setToken","search","setSearch","anchorEl","setAnchorEl","open","Boolean","event","textTransform","aria-controls","aria-haspopup","aria-expanded","undefined","currentTarget","Menu","onClose","MenuListProps","MenuItem","removeItem","center","lineHeight","input","PostCreate","titleText","setTitleText","bodyText","setBodyText","v","trim","random","avatar","borderRadius","textOverflow","overflow","link","Input","styled","User","setAvatar","Stack","spacing","htmlFor","file","files","reader","FileReader","onload","result","readAsDataURL","multiple","CardMedia","height","image","alt","Divider","MenuList","option","ListItemIcon","ListItemText","href","info","blockData","mainTitle","data","whiteSpace","Info","feedUser","setName","showError","column","setColumn","filtered","birthday","setBirthday","gender","setGender","setPassword","phone","setPhone","setEmail","window","innerWidth","columns","xs","Alert","severity","userBirthday","userGender","userPhone","duplicate","forEach","text","profile","paper","Profile","setDisplay","setError","Paper","elevation","Feed","token","fetch","response","json","toLowerCase","includes","toLocaleLowerCase","basename","path","exact","Redirect","Form","setNickname","setConfirmPassword","setShow","setErrorName","setErrorEmail","setErrorPassword","setErrorConfirmPassword","setHelperTextName","setHelperTextEmail","setHelperTextPassword","setHelperTextConfirmPassword","dataBase","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b377aee7.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core';\r\n\r\n\r\nexport const useStyles = makeStyles({\r\n  body: {\r\n    margin: '20px 0',\r\n    paddingBottom: 5,\r\n    borderTop: '3px solid #0dcaf0',\r\n    '& *': {\r\n      marginTop: 7,\r\n    },\r\n    '& span': {\r\n      width: '100%',\r\n      display: 'flex',\r\n      alignItems: 'flex-end',\r\n\r\n      '& button': {\r\n        marginLeft: '-2px',\r\n        border: '1px solid gray',\r\n\r\n        '& *': {\r\n          margin: '0 auto'\r\n        }\r\n      }\r\n    },\r\n  },\r\n  register: {\r\n    '& *': {\r\n      textDecoration: 'none',\r\n      color: 'inherit',\r\n    }\r\n  },\r\n  showPasswordButton: {\r\n    margin: '0 auto',\r\n    '& svg': {\r\n      marginLeft: 10\r\n    }\r\n  },\r\n  footer: {\r\n    paddingTop: 10,\r\n  },\r\n})","export const reg = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/iu;\r\nexport let DB = JSON.parse(localStorage.getItem('database'));\r\n\r\nexport function SignIn(userEmail, userPassword) {\r\n    return new Promise((resolve, reject) => {\r\n        if (!userEmail || !reg.test(userEmail)) {\r\n            reject(userEmail)\r\n        } else if (!userPassword || userPassword.length < 8) {\r\n            reject(userPassword)\r\n        } else {\r\n            setTimeout(() => {\r\n                let findUser = DB.users.find(user => user.email === userEmail && user.password === userPassword)\r\n\r\n                if (findUser) {\r\n                    localStorage.setItem('id', findUser.id)\r\n                    resolve()\r\n                }\r\n                else {\r\n                    reject(alert('Данного пользователя не существует или вы неправильно ввели данные'))\r\n                }\r\n            }, 3000);\r\n        }\r\n    })\r\n}\r\n\r\nexport function CheckIn(userName, userEmail, userPassword, confirmPassword) {\r\n    return new Promise((resolve, reject) => {\r\n        const id = JSON.parse(localStorage.getItem('database')).users.length;\r\n\r\n        let user = {\r\n            id: id,\r\n            name: userName,\r\n            email: userEmail,\r\n            password: userPassword\r\n        }\r\n\r\n        if (!userName || +userName) {\r\n            reject(userName)\r\n        } else if (!userEmail || !reg.test(userEmail)) {\r\n            reject(userEmail)\r\n        } else if (!userPassword || userPassword.length < 8) {\r\n            reject(userPassword)\r\n        } else if (userPassword !== confirmPassword) {\r\n            reject(confirmPassword)\r\n        } else {\r\n            setTimeout(() => {\r\n                resolve(user)\r\n            }, 3000);\r\n        }\r\n    }).then((user) => {\r\n        return new Promise((resolve, reject) => {\r\n            let duplicate = DB.users.find(user => user.email === userEmail);\r\n\r\n            if (duplicate) reject(alert('Данная почта занята'))\r\n            else resolve(user)\r\n        })\r\n    })\r\n}\r\n\r\nexport function changeData(userName, userBirthday, userGender, userPassword, userPhone, userEmail) {\r\n    return new Promise((resolve, reject) => {\r\n        let duplicate = DB.users.find(user => user.email === userEmail && user.id !== JSON.parse(localStorage.getItem('id')))\r\n\r\n        if (!userName || +userName) reject('Имя некорректно')\r\n        if (!userPassword || userPassword.length < 8) reject('Пароль слишком короткий')\r\n        if (userPhone < 11) reject('Некорректный номер телефона')\r\n        if (!userEmail || !reg.test(userEmail)) reject('Почта некорректна')\r\n        if (duplicate) reject('Данная почта занята')\r\n\r\n        resolve(userName, userBirthday, userGender, userPassword, userPhone, userEmail);\r\n    })\r\n}\r\n\r\nexport function FeedPush() {\r\n    return new Promise((resolve) => {\r\n        fetch('https://jsonplaceholder.typicode.com/posts')\r\n            .then(response => response.json())\r\n            .then(json => resolve(JSON.stringify(json)))\r\n    })\r\n}","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n  Card,\r\n  CircularProgress,\r\n  TextField,\r\n  Container,\r\n} from '@material-ui/core';\r\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { useStyles } from './styles/styles';\r\nimport { SignIn, reg } from '../services/services';\r\n\r\n\r\nconst Login = ({\r\n  email, targetEmail,\r\n  password, targetPassword,\r\n  disabled, setDisabled,\r\n  errorEmail, errorPassword,\r\n  helperTextEmail, helperTextPassword,\r\n  checkEmail, checkPassword,\r\n  show, showPassword,\r\n  buttonStyle, setButtonStyle,\r\n  clear, clearType }) => {\r\n\r\n  const classes = useStyles()\r\n\r\n  const [hide, setHide] = useState('none')\r\n  const [redirect, setRedirect] = useState('')\r\n  const [click, setClick] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (click === true) {\r\n      if (!email || !reg.test(email)) checkEmail(true)('Почта некорректна')\r\n      else checkEmail()()\r\n\r\n      if (password.length < 8) {\r\n        checkPassword(true)('Пароль слишкой короткий')\r\n        setButtonStyle(27);\r\n      }\r\n      else {\r\n        checkPassword()()\r\n        setButtonStyle()\r\n      }\r\n    }\r\n  })\r\n\r\n  const handleSubmit = () => {\r\n    setClick(true);\r\n    setDisabled(true);\r\n    setHide('inherit');\r\n    SignIn(email, password)\r\n      .then(() => {\r\n        clear()\r\n        localStorage.setItem('auth_token', true)\r\n        setRedirect('/feed/posts')\r\n      }).catch((props) => {\r\n        switch (props) {\r\n          case email:\r\n            checkEmail()('Почта некорректна')\r\n            break;\r\n          case password:\r\n            checkPassword(true)('Пароль слишкой короткий')\r\n            break;\r\n\r\n          // no default\r\n        }\r\n      })\r\n      .finally(() => {\r\n        setDisabled(false);\r\n        setHide('none');\r\n      })\r\n  }\r\n\r\n  return (\r\n    <Container maxWidth='sm'>\r\n      <Card className='form'>\r\n        <Grid className='form-register head' container direction=\"row\" justify=\"space-between\">\r\n          <Typography variant='h5'>Войти в систему</Typography>\r\n          <Typography variant='h5'>или</Typography>\r\n          <Link to='/register' onClick={clear} style={{ textDecoration: 'none' }}>\r\n            <Button className={classes.register} onClick={clearType} disabled={disabled} variant=\"outlined\" color=\"primary\">\r\n              Зарегистриговаться\r\n            </Button>\r\n          </Link>\r\n        </Grid>\r\n        <Grid className={`form-register ${classes.body}`} container>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Введите почту\"\r\n            value={email}\r\n            onChange={targetEmail}\r\n            disabled={disabled}\r\n            type='text'\r\n            error={errorEmail}\r\n            helperText={helperTextEmail}\r\n          />\r\n          <span>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Введите пароль\"\r\n              value={password}\r\n              onChange={targetPassword}\r\n              disabled={disabled}\r\n              type={show === true ? 'text' : 'password'}\r\n              error={errorPassword}\r\n              helperText={helperTextPassword}\r\n            />\r\n            <Button\r\n              className={classes.showPasswordButton}\r\n              onClick={showPassword}\r\n              disabled={disabled}\r\n              style={{ marginBottom: buttonStyle }}\r\n            >\r\n              {show === true ? <VisibilityOffIcon /> : <VisibilityIcon />}\r\n            </Button>\r\n          </span>\r\n        </Grid>\r\n        <Grid className={`form-register ${classes.footer}`} container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\r\n          <Button id='login' size=\"small\" disabled={disabled} variant=\"contained\" onClick={handleSubmit} type='submit'><Redirect to={redirect} />Войти</Button>\r\n          <CircularProgress id='loader' className='visible' style={{ display: hide }} />\r\n          <Button onClick={clear} type='submit' disabled={disabled}>Очистить</Button>\r\n        </Grid>\r\n      </Card>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Login;","import React, { useEffect, useState } from 'react';\r\nimport {\r\n    Button,\r\n    Card,\r\n    Grid,\r\n    Typography,\r\n    CircularProgress,\r\n    TextField,\r\n    Container\r\n} from '@material-ui/core';\r\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { useStyles } from './styles/styles';\r\nimport { CheckIn, reg, DB } from '../services/services';\r\n\r\n\r\nconst Register = ({\r\n    nickname, targetName,\r\n    email, targetEmail,\r\n    password, targetPassword,\r\n    confirmPassword, targetConfirmPassword,\r\n    disabled, setDisabled,\r\n    errorName, errorEmail,\r\n    errorPassword, errorConfirmPassword,\r\n    helperTextName, helperTextEmail,\r\n    helperTextPassword, helperConfirmPassword,\r\n    checkName, checkEmail, checkPassword, checkConfirmPassword,\r\n    show, showPassword,\r\n    buttonStyle, setButtonStyle,\r\n    clear, clearType }) => {\r\n\r\n    const classes = useStyles()\r\n\r\n    const [hide, setHide] = useState('none')\r\n    const [redirect, setRedirect] = useState('/register')\r\n    const [click, setClick] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if (click === true) {\r\n            if (!nickname) checkName(true)('Пожалуйста введите ваше имя')\r\n            else if (+nickname) checkName(true)('Имя не может состоять из цифр')\r\n            else checkName()()\r\n\r\n            if (!email || !reg.test(email)) checkEmail(true)('Почта некорректна')\r\n            else checkEmail()()\r\n\r\n            if (password.length < 8) {\r\n                checkPassword(true)('Пароль слишкой короткий')\r\n                setButtonStyle(27)\r\n            }\r\n            else {\r\n                checkPassword()()\r\n                setButtonStyle()\r\n            }\r\n\r\n            if (password !== confirmPassword) checkConfirmPassword(true)('Пароли не совпадают')\r\n            else checkConfirmPassword()()\r\n        }\r\n    })\r\n\r\n    const handleSubmit = () => {\r\n        const id = JSON.parse(localStorage.getItem('database')).users.length\r\n\r\n        setClick(true);\r\n        setDisabled(true);\r\n        setHide('inherit');\r\n        CheckIn(nickname, email, password, confirmPassword)\r\n            .then((user) => {\r\n                localStorage.setItem('auth_token', true)\r\n                localStorage.setItem('id', id)\r\n\r\n                localStorage.setItem('database', JSON.stringify(user))\r\n                DB.users.push(user)\r\n                localStorage.setItem('database', JSON.stringify(DB))\r\n\r\n                setRedirect('/feed/posts')\r\n                clear()\r\n            }).catch((props) => {\r\n                switch (props) {\r\n                    case nickname:\r\n                        if (nickname === 0) checkName(true)('Пожалуйста введите ваше имя')\r\n                        break;\r\n                    case email:\r\n                        checkEmail()('Почта некорректна')\r\n                        break;\r\n                    case password:\r\n                        if (password !== confirmPassword) {\r\n                            checkPassword(true)('Пароль слишкой короткий')\r\n                            checkConfirmPassword(true)('Пароли не совпадают')\r\n                        }\r\n\r\n                    // no default\r\n                }\r\n            })\r\n            .finally(() => {\r\n                setDisabled(false);\r\n                setHide('none');\r\n            })\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth='sm'>\r\n            <Card className='form'>\r\n                <Grid className='form-register head' container direction=\"row\" justify=\"space-between\">\r\n                    <Typography variant='h5'>Зарегистриговаться</Typography>\r\n                    <Typography variant='h5'>или</Typography>\r\n                    <Link to='/' onClick={clear} style={{ textDecoration: 'none' }}><Button className={classes.register} onClick={clearType} disabled={disabled} variant=\"outlined\" color=\"primary\">Войти</Button></Link>\r\n                </Grid>\r\n                <Grid className={`form-register ${classes.body}`} container>\r\n                    <TextField\r\n                        label=\"Введите имя\"\r\n                        value={nickname}\r\n                        onChange={targetName}\r\n                        disabled={disabled}\r\n                        fullWidth type='text'\r\n                        error={errorName}\r\n                        helperText={helperTextName}\r\n                    />\r\n                    <TextField\r\n                        label=\"Введите вашу почту\"\r\n                        value={email}\r\n                        onChange={targetEmail}\r\n                        disabled={disabled}\r\n                        fullWidth type='email'\r\n                        error={errorEmail}\r\n                        helperText={helperTextEmail}\r\n                    />\r\n                    <span>\r\n                        <TextField\r\n                            fullWidth\r\n                            label=\"Введите пароль\"\r\n                            value={password}\r\n                            onChange={targetPassword}\r\n                            disabled={disabled}\r\n                            type={show === true ? 'text' : 'password'}\r\n                            error={errorPassword}\r\n                            helperText={helperTextPassword}\r\n                        />\r\n                        <Button\r\n                            className={classes.showPasswordButton}\r\n                            onClick={showPassword}\r\n                            disabled={disabled}\r\n                            style={{ marginBottom: buttonStyle }}\r\n                        >\r\n                            {show === true ? <VisibilityOffIcon /> : <VisibilityIcon />}\r\n                        </Button>\r\n                    </span>\r\n                    <TextField\r\n                        label=\"Подтвердите пароль\"\r\n                        value={confirmPassword}\r\n                        onChange={targetConfirmPassword}\r\n                        disabled={disabled} fullWidth\r\n                        type={show === true ? 'text' : 'password'}\r\n                        error={errorConfirmPassword}\r\n                        helperText={helperConfirmPassword}\r\n                    />\r\n                </Grid>\r\n                <Grid className='form-register footer' container direction=\"row\" justify=\"space-between\">\r\n                    <Button id='register' size=\"small\" disabled={disabled} variant=\"contained\" onClick={handleSubmit} type='submit' ><Redirect to={redirect} />Зарегистриговаться</Button >\r\n                    <CircularProgress id='loader' className='visible' style={{ display: hide }} />\r\n                    <Button onClick={clear} disabled={disabled} >Очистить</Button>\r\n                </Grid>\r\n            </Card>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    pagination: {\r\n        width: '100%',\r\n        marginTop: '2rem',\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'center',\r\n    },\r\n    num: {\r\n        width: 30,\r\n        margin: '10px 3px',\r\n        boxShadow: \"0px 2px 1px -1px rgb(0 0 0 / 20%), 0px 1px 1px 0px rgb(0 0 0 / 14%), 0px 1px 3px 0px rgb(0 0 0 / 12%)\"\r\n    }\r\n});\r\n\r\nconst Pagination = ({ postsLength, totalPosts, paginate }) => {\r\n    const classes = useStyles();\r\n\r\n    const pageNumbers = []\r\n    for (let i = 1; i <= Math.ceil(totalPosts / postsLength); i++) {\r\n        pageNumbers.push(i)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.pagination}>\r\n            {\r\n                pageNumbers.map(number => (\r\n                    <Button onClick={() => paginate(number)}\r\n                        className={classes.num}\r\n                        size=\"small\"\r\n                        key={number}\r\n                    >\r\n                        {number}\r\n                    </Button>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pagination;","import React, { useState } from 'react';\r\nimport {\r\n    Card,\r\n    CardContent,\r\n    Typography,\r\n    TextField,\r\n    Box,\r\n    Button,\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport HighlightOff from '@material-ui/icons/HighlightOff';\r\nimport Pagination from './pagination/pagination';\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    block: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'center',\r\n    },\r\n    post: {\r\n        minWidth: 280,\r\n        maxWidth: 280,\r\n        marginTop: '2rem',\r\n        margin: '0 14px',\r\n    },\r\n    noPosts: {\r\n        marginTop: 20,\r\n        textAlign: 'center',\r\n    },\r\n    icon: {\r\n        marginTop: '9px',\r\n        marginLeft: '88%',\r\n        cursor: 'pointer',\r\n    },\r\n    content: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        alignItems: 'center'\r\n    },\r\n    title: {\r\n        width: '100%',\r\n        borderBottom: '3px solid #0dcaf0',\r\n        marginBottom: 4\r\n    },\r\n    body: {\r\n        width: '100%',\r\n    },\r\n    save: {\r\n        width: '100%',\r\n        textAlign: 'right',\r\n        marginTop: 5,\r\n    },\r\n    pagination: {\r\n        marginTop: '2rem',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n    }\r\n});\r\n\r\nconst Posts = ({ posts, setPosts, findPosts }) => {\r\n    const classes = useStyles();\r\n\r\n    const [edit, setEdit] = useState(null)\r\n    const [valueTitle, setValueTitle] = useState('')\r\n    const [valueBody, setValueBody] = useState('')\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n\r\n    let postsLength = 8\r\n    const lastPostIndex = currentPage * postsLength\r\n    const firstPostsIndex = lastPostIndex - postsLength\r\n\r\n    const deletePost = (id) => setPosts(posts.filter((el) => el.id !== id))\r\n\r\n    const editPost = (id, title, body) => {\r\n        setEdit(id)\r\n        setValueTitle(title)\r\n        setValueBody(body)\r\n    }\r\n    const savePost = (id) => {\r\n        let newPost = posts.map(item => {\r\n            if (item.id === id) {\r\n                item.title = valueTitle\r\n                item.body = valueBody\r\n            }\r\n            return item\r\n        })\r\n\r\n        setPosts(newPost)\r\n        setEdit(null)\r\n    }\r\n\r\n    const paginate = pageNumber => setCurrentPage(pageNumber)\r\n\r\n    return (\r\n        <Box className={classes.block}>\r\n            {\r\n                posts.length === 0 ?\r\n                    <Typography variant=\"h3\" className={classes.noPosts}>Посты закончились</Typography>\r\n                    :\r\n                    findPosts.length === 0 ?\r\n                        <Typography variant=\"h3\" className={classes.noPosts}>Пост не найден</Typography>\r\n                        :\r\n                        findPosts.map((props) => (\r\n                            <Card className={classes.post} id={props.id} key={props.id}>\r\n                                <HighlightOff className={classes.icon} onClick={() => deletePost(props.id)} />\r\n                                <CardContent className={classes.content}>\r\n                                    <div className={classes.title}>\r\n                                        {\r\n                                            edit === props.id ? <div>\r\n                                                <TextField value={valueTitle} onChange={(e) => setValueTitle(e.target.value)} fullWidth multiline />\r\n                                            </div>\r\n                                                :\r\n                                                <Typography\r\n                                                    gutterBottom variant=\"h5\"\r\n                                                    component=\"h2\"\r\n                                                >\r\n                                                    {props.title}\r\n                                                </Typography>\r\n                                        }\r\n                                    </div>\r\n                                    <div className={classes.body}>\r\n                                        {\r\n                                            edit === props.id ? <div>\r\n                                                <TextField value={valueBody} onChange={(e) => setValueBody(e.target.value)} fullWidth multiline />\r\n                                            </div>\r\n                                                :\r\n                                                <Typography variant=\"body2\"\r\n                                                    color=\"textSecondary\"\r\n                                                    component=\"p\"\r\n                                                >\r\n                                                    {props.body}\r\n                                                </Typography>\r\n                                        }\r\n                                    </div>\r\n                                    <Typography className={classes.save} variant=\"button\">\r\n                                        {\r\n                                            edit === props.id ?\r\n                                                <Button onClick={() => savePost(props.id)} size='small'>Сохранить</Button>\r\n                                                :\r\n                                                <Button onClick={() => editPost(props.id, props.title, props.body)}>Редактировать</Button>\r\n                                        }\r\n                                    </Typography>\r\n                                </CardContent>\r\n                            </Card>\r\n                        )).slice(firstPostsIndex, lastPostIndex)\r\n            }\r\n            <Pagination\r\n                postsLength={postsLength}\r\n                totalPosts={findPosts.length}\r\n                paginate={paginate}\r\n            />\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Posts;","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    Box,\r\n    Typography,\r\n    Button,\r\n    TextField,\r\n} from '@material-ui/core';\r\nimport { Menu, MenuItem } from '@mui/material';\r\nimport { Redirect } from 'react-router';\r\n\r\nconst useStyles = makeStyles({\r\n    block: {\r\n        width: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        backgroundColor: '#0dcaf0',\r\n        margin: '0 -15xp',\r\n        padding: '15px'\r\n    },\r\n    left: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'space-between',\r\n        textAlign: 'center'\r\n    },\r\n    webName: {\r\n        marginRight: 20\r\n    },\r\n    name: {\r\n        fontSize: 25\r\n    }\r\n});\r\n\r\nconst FeedHeader = ({ setToken, search, setSearch, findUser }) => {\r\n    const classes = useStyles();\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null)\r\n    const [redirect, setRedirect] = useState('/posts')\r\n\r\n    const open = Boolean(anchorEl)\r\n\r\n    const handleClick = (event) => setAnchorEl(event.currentTarget)\r\n    const handleClose = () => setAnchorEl(null)\r\n    const profile = () => setRedirect('/profile')\r\n    const leave = () => {\r\n        setToken(localStorage.removeItem('auth_token'))\r\n        localStorage.removeItem('id')\r\n    }\r\n\r\n    return (\r\n        <Box className={classes.block}>\r\n            <div className={classes.left}>\r\n                <Typography variant=\"h4\" className={classes.webName}>Test-Form</Typography>\r\n                <TextField value={search} onChange={(event) => setSearch(event.target.value)} id=\"filled-basic\" label=\"Поиск...\" variant=\"filled\" size=\"small\" />\r\n            </div>\r\n            <div>\r\n                <Button\r\n                    style={{ textTransform: 'capitalize' }}\r\n                    id=\"basic-button\"\r\n                    aria-controls=\"basic-menu\"\r\n                    aria-haspopup=\"true\"\r\n                    aria-expanded={open ? 'true' : undefined}\r\n                    onClick={handleClick}\r\n                >\r\n                    <Typography variant=\"body1\" className={classes.name}>\r\n                        {findUser.name}\r\n                    </Typography>\r\n                </Button>\r\n                <Menu\r\n                    id=\"basic-menu\"\r\n                    anchorEl={anchorEl}\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    MenuListProps={{\r\n                        'aria-labelledby': 'basic-button',\r\n                    }}\r\n                >\r\n                    <MenuItem onClick={profile}><Redirect to={redirect} />Профиль</MenuItem>\r\n                    <MenuItem onClick={leave}>Выйти</MenuItem>\r\n                </Menu>\r\n            </div>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default FeedHeader;","import React, { useState } from 'react';\r\nimport {\r\n    Card,\r\n    CardContent,\r\n    Typography,\r\n    TextField,\r\n    Box,\r\n    Button,\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    block: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'center',\r\n    },\r\n    post: {\r\n        minWidth: 280,\r\n        maxWidth: 280,\r\n        marginTop: '2rem',\r\n        margin: '0 14px',\r\n        padding: 15,\r\n        textAlign: 'center',\r\n    },\r\n    center: {\r\n        lineHeight: 4\r\n    },\r\n    input: {\r\n        lineHeight: 30\r\n    }\r\n});\r\n\r\nconst PostCreate = ({ posts, setPosts }) => {\r\n    const classes = useStyles();\r\n\r\n    const [titleText, setTitleText] = useState('')\r\n    const [bodyText, setBodyText] = useState('')\r\n\r\n    const addPosts = () => {\r\n        if (titleText.trim() && bodyText.trim()) {\r\n\r\n            let newPost = {\r\n                id: Math.random() * posts.length,\r\n                title: titleText,\r\n                body: bodyText\r\n            }\r\n\r\n            setPosts([newPost, ...posts])\r\n\r\n            setTitleText('')\r\n            setBodyText('')\r\n        } else alert('Заполните поле')\r\n    }\r\n\r\n    return (\r\n        <Box className={classes.block}>\r\n            <Card className={classes.post}>\r\n                <Typography variant='h6'>Добавить пост</Typography>\r\n                <CardContent className={classes.center}>\r\n                    <TextField className={classes.input} fullWidth label=\"Заголовок\" value={titleText} onChange={(v) => setTitleText(v.target.value)} type='text' />\r\n                    <TextField className={classes.input} fullWidth label=\"Содержание\" value={bodyText} onChange={(v) => setBodyText(v.target.value)} type='text' />\r\n                </CardContent>\r\n                <Button onClick={addPosts} size='large'>Сохранить</Button>\r\n            </Card>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default PostCreate;","import React, { useState } from 'react';\r\nimport {\r\n    Typography,\r\n    Card,\r\n    CardMedia,\r\n    CardContent,\r\n    MenuList,\r\n    MenuItem,\r\n    ListItemText,\r\n    ListItemIcon,\r\n    Divider,\r\n} from '@mui/material';\r\nimport Stack from '@mui/material/Stack';\r\nimport { styled } from '@mui/material/styles';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FeedIcon from '@mui/icons-material/Feed';\r\nimport LogoutIcon from '@mui/icons-material/Logout';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    user: {\r\n        width: 300,\r\n        minWidth: 150,\r\n    },\r\n    label: {\r\n        margin: '0 auto',\r\n    },\r\n    avatar: {\r\n        borderRadius: '30px',\r\n        cursor: 'pointer',\r\n    },\r\n    name: {\r\n        textAlign: 'center',\r\n        textOverflow: 'ellipsis',\r\n        maxWidth: '100%',\r\n        overflow: 'hidden',\r\n    },\r\n    link: {\r\n        textDecoration: 'none',\r\n        color: 'inherit'\r\n    }\r\n});\r\n\r\nconst Input = styled('input')({\r\n    display: 'none',\r\n});\r\n\r\nconst User = ({ name }) => {\r\n    const classes = useStyles();\r\n\r\n    const [avatar, setAvatar] = useState(null)\r\n    const loadAvatar = (event) => {\r\n        const file = event.target.files[0];\r\n        if (!file) return;\r\n\r\n        const reader = new FileReader()\r\n\r\n        reader.onload = e => setAvatar(e.target.result)\r\n        reader.readAsDataURL(file)\r\n    }\r\n\r\n    const leave = () => {\r\n        localStorage.removeItem('id')\r\n        localStorage.removeItem('auth_token')\r\n    }\r\n\r\n    return (\r\n        <Card className={`${classes.user} + user`}>\r\n            <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\r\n                <label htmlFor=\"contained-button-file\" className={classes.label}>\r\n                    <Input id=\"contained-button-file\" onChange={loadAvatar} multiple type=\"file\" />\r\n                    <CardMedia className={classes.avatar}\r\n                        component=\"img\"\r\n                        height=\"190\"\r\n                        image={avatar === null ?\r\n                            'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRpAlUbnpAz36HIeIvG7nKBUHuILO3N2qODJxcAuTUSbrf_WoqiVsVpRcolCGCKu7O7f9Y&usqp=CAU'\r\n                            :\r\n                            avatar\r\n                        }\r\n                        alt=\"Avatar\"\r\n                    />\r\n                </label>\r\n            </Stack>\r\n            <CardContent>\r\n                <Typography gutterBottom variant=\"h5\" component=\"div\" className={classes.name}>\r\n                    {name}\r\n                </Typography>\r\n            </CardContent>\r\n\r\n            <Divider />\r\n\r\n            <MenuList className={`${classes.option} + option`}>\r\n                <Link to='/posts' className={classes.link}>\r\n                    <MenuItem>\r\n                        <ListItemIcon>\r\n                            <FeedIcon fontSize=\"small\" />\r\n                        </ListItemIcon>\r\n                        <ListItemText>Посты</ListItemText>\r\n                    </MenuItem>\r\n                </Link>\r\n                <a href='javascript:history.back()' onClick={leave} className={classes.link}>\r\n                    <MenuItem>\r\n                        <ListItemIcon>\r\n                            <LogoutIcon fontSize=\"small\" />\r\n                        </ListItemIcon>\r\n                        <ListItemText>Выйти</ListItemText>\r\n                    </MenuItem>\r\n                </a>\r\n            </MenuList>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default User;","import React, { useState } from 'react';\r\nimport {\r\n    Grid,\r\n    Box,\r\n    Typography,\r\n    Button,\r\n    Menu,\r\n    MenuItem,\r\n    Input,\r\n    Alert,\r\n} from '@mui/material';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { changeData, DB } from '../../services/services';\r\nimport { useEffect } from 'react';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    info: {\r\n        margin: '30px 15px',\r\n    },\r\n    blockData: {\r\n        margin: '5px 0 !important',\r\n        paddingTop: '0 !important'\r\n    },\r\n    mainTitle: {\r\n        textAlign: 'center',\r\n    },\r\n    title: {\r\n        margin: '0 !important',\r\n        marginRight: '10px !important'\r\n    },\r\n    data: {\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        maxWidth: '100%',\r\n        overflow: 'hidden',\r\n        marginBottom: 4,\r\n    },\r\n    input: {\r\n        width: 150,\r\n        marginBottom: 2,\r\n    },\r\n    alert: {\r\n        width: 'max-content',\r\n        margin: '0 auto',\r\n        padding: '0 10px !important'\r\n    },\r\n\r\n    footer: {\r\n        width: '100%',\r\n        height: '100%',\r\n        marginTop: 30,\r\n        display: 'flex',\r\n        justifyContent: 'flex-end'\r\n    },\r\n});\r\n\r\nconst Info = ({ feedUser, name, setName, showError }) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [edit, setEdit] = useState(0)\r\n    const [column, setColumn] = useState()\r\n\r\n    const filtered = DB.users.filter(user => user.email !== feedUser.email ? false : user)\r\n\r\n    const [birthday, setBirthday] = useState(feedUser.birthday)\r\n    const [gender, setGender] = useState(feedUser.gender)\r\n    const [password, setPassword] = useState(feedUser.password)\r\n    const [phone, setPhone] = useState(feedUser.phone)\r\n    const [email, setEmail] = useState(feedUser.email)\r\n\r\n    if (!gender) setGender('Мужской')\r\n\r\n    const handleSubmit = () => {\r\n        changeData(name, birthday, gender, password, phone, email)\r\n            .then(() => {\r\n                filtered.forEach(user => {\r\n                    if (name) user.name = name\r\n                    if (birthday) user.birthday = birthday\r\n                    if (gender) user.gender = gender\r\n                    if (password) user.password = password\r\n                    if (phone) user.phone = phone\r\n                    if (email) user.email = email\r\n                })\r\n            }).then(() => {\r\n                localStorage.setItem('database', JSON.stringify(DB))\r\n                showError('none')('')\r\n                setEdit(false)\r\n            }).catch((text) => showError('flex')(text))\r\n    }\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    }\r\n    const handleClose = () => setAnchorEl(null);\r\n    const changeGenderMen = () => {\r\n        setAnchorEl(null);\r\n        setGender('Мужской')\r\n    }\r\n    const changeGenderWomen = () => {\r\n        setAnchorEl(null);\r\n        setGender('Женский')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (window.innerWidth <= 883) setColumn('column');\r\n    }, [])\r\n\r\n    return (\r\n        <Box className={`${classes.info} + info`}>\r\n            <div>\r\n                <Typography variant=\"h3\" component=\"div\" gutterBottom className={`${classes.mainTitle} + main-title`}>\r\n                    Персональные данные\r\n                </Typography>\r\n\r\n                <div className='container-data'>\r\n                    <Grid container columns={16} direction={column}>\r\n                        <Grid display='flex' alignItems='center' className={`${classes.blockData} + block-data`} item xs={7}>\r\n                            <Typography variant=\"overline\" display=\"block\" className={`${classes.title} + title`} gutterBottom>\r\n                                Имя:\r\n                            </Typography>\r\n                            {\r\n                                edit ?\r\n                                    <Input className={classes.input} value={name} onChange={(event) => setName(event.target.value)} />\r\n                                    :\r\n                                    <Typography variant=\"h6\" className={classes.data} style={{ maxWidth: 180 }} gutterBottom component=\"p\" key={name}>{name}</Typography>\r\n                            }\r\n                        </Grid>\r\n                        <Grid display='flex' alignItems='center' className={`${classes.blockData} + block-data`} item xs={9}>\r\n                            <Typography variant=\"overline\" display=\"block\" className={`${classes.title} + title`} gutterBottom>\r\n                                Дата рождения:\r\n                            </Typography>\r\n                            {\r\n                                edit ?\r\n                                    <Input className={classes.input} value={birthday} onChange={(event) => setBirthday(event.target.value)} type='date' />\r\n                                    :\r\n                                    <span>\r\n                                        {\r\n                                            birthday ?\r\n                                                <Typography variant=\"h6\" style={{ marginBottom: 4 }} gutterBottom component=\"p\" key={birthday}>{birthday}</Typography>\r\n                                                :\r\n                                                <Alert className={classes.alert} severity=\"warning\">Не указано</Alert>\r\n                                        }\r\n                                    </span>\r\n                            }\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <Grid container columns={16} direction={column}>\r\n                        <Grid display='flex' alignItems='center' className={`${classes.blockData} + block-data`} item xs={8}>\r\n                            <Typography variant=\"overline\" display=\"block\" className={`${classes.title} + title`} gutterBottom>\r\n                                Пол:\r\n                            </Typography>\r\n                            <span>\r\n                                {\r\n                                    edit ?\r\n                                        <div>\r\n                                            <Button\r\n                                                style={{ width: 'max-content', marginTop: '-4px' }}\r\n                                                variant=\"outlined\"\r\n                                                id=\"basic-button\"\r\n                                                aria-controls={open ? 'basic-menu' : undefined}\r\n                                                aria-haspopup=\"true\"\r\n                                                aria-expanded={open ? 'true' : undefined}\r\n                                                onClick={handleClick}\r\n                                            >\r\n                                                {gender}\r\n                                            </Button>\r\n                                            <Menu\r\n                                                id=\"basic-menu\"\r\n                                                anchorEl={anchorEl}\r\n                                                open={open}\r\n                                                onClose={handleClose}\r\n                                                MenuListProps={{\r\n                                                    'aria-labelledby': 'basic-button',\r\n                                                }}\r\n                                            >\r\n                                                <MenuItem onClick={changeGenderMen}>Мужской</MenuItem>\r\n                                                <MenuItem onClick={changeGenderWomen}>Женский</MenuItem>\r\n                                            </Menu>\r\n                                        </div>\r\n                                        :\r\n                                        <Typography variant=\"h6\" style={{ marginBottom: 4 }} gutterBottom component=\"p\" key={gender}>{gender}</Typography>\r\n                                }\r\n                            </span>\r\n                        </Grid>\r\n                        <Grid display='flex' alignItems='center' className={`${classes.blockData} + block-data`} item xs={8}>\r\n                            <Typography variant=\"overline\" display=\"block\" className={`${classes.title} + title`} gutterBottom>\r\n                                Пароль:\r\n                            </Typography>\r\n                            {\r\n                                edit ?\r\n                                    <Input className={classes.input} value={password} onChange={(event) => setPassword(event.target.value)} />\r\n                                    :\r\n                                    <Typography variant=\"h6\" className={classes.data} style={{ maxWidth: 165 }} gutterBottom component=\"p\" key={password}>{password}</Typography>\r\n                            }\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <Grid container columns={16} direction={column}>\r\n                        <Grid display='flex' alignItems='center' className={`${classes.blockData} + block-data`} item xs={8}>\r\n                            <Typography variant=\"overline\" display=\"block\" className={`${classes.title} + title`} gutterBottom>\r\n                                Телефон:\r\n                            </Typography>\r\n                            {\r\n                                edit ?\r\n                                    <Input className={classes.input} value={phone} onChange={(event) => setPhone(event.target.value)} />\r\n                                    :\r\n                                    <span>\r\n                                        {\r\n                                            phone ?\r\n                                                <Typography variant=\"h6\" className={classes.data} style={{ maxWidth: 180 }} gutterBottom component=\"p\" key={phone}>{phone}</Typography>\r\n                                                :\r\n                                                <Alert className={classes.alert} severity=\"warning\">Не указан</Alert>\r\n                                        }\r\n                                    </span>\r\n                            }\r\n                        </Grid>\r\n                        <Grid display='flex' alignItems='center' className={`${classes.blockData} + block-data`} item xs={8}>\r\n                            <Typography variant=\"overline\" display=\"block\" className={`${classes.title} + title`} gutterBottom>\r\n                                Почта:\r\n                            </Typography>\r\n                            {\r\n                                edit ?\r\n                                    <Input className={classes.input} value={email} onChange={(event) => setEmail(event.target.value)} />\r\n                                    :\r\n                                    <Typography variant=\"h6\" className={classes.data} style={{ maxWidth: 200 }} gutterBottom component=\"p\" key={email}>{email}</Typography>\r\n                            }\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n\r\n                <div className={classes.footer}>\r\n                    {\r\n                        !edit ?\r\n                            <Button onClick={() => setEdit(true)} variant=\"outlined\">Изменить</Button>\r\n                            :\r\n                            <Button onClick={handleSubmit} variant=\"outlined\">Сохранить</Button>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Info;","import React, { useState } from 'react';\r\nimport Container from '@mui/material/Container';\r\nimport User from './user';\r\nimport Info from './info';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@mui/material/Paper';\r\nimport './profile.scss';\r\nimport { Alert } from '@mui/material';\r\n\r\nconst useStyles = makeStyles({\r\n    profile: {\r\n        maxWidth: 'max-content !important',\r\n        margin: '5% 0 0 0',\r\n    },\r\n    paper: {\r\n        overflow: 'hidden',\r\n        marginTop: '5%',\r\n        display: 'flex',\r\n    }\r\n});\r\n\r\nconst Profile = ({ feedUser }) => {\r\n    const classes = useStyles();\r\n\r\n    const [name, setName] = useState(feedUser.name)\r\n    const [display, setDisplay] = useState('none')\r\n    const [error, setError] = useState()\r\n\r\n    const showError = display => error => {\r\n        setDisplay(display);\r\n        setError(error);\r\n    }\r\n\r\n    return (\r\n        <Container className={classes.profile}>\r\n            <Alert severity='error' style={{display: display}}>{error}</Alert>\r\n            <Paper elevation={3} className={`${classes.paper} + paper`}>\r\n                <User name={name} />\r\n                <Info feedUser={feedUser} name={name} setName={setName} showError={showError} />\r\n            </Paper>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React, { useState, useEffect } from 'react';\r\nimport { Box, Container } from '@material-ui/core';\r\nimport FeedPost from './posts/posts';\r\nimport FeedHeader from './feed-header/feed-header';\r\nimport { FeedPush } from '../services/services';\r\nimport PostCreate from './posts/posts-create';\r\nimport Profile from './profile/profile';\r\nimport { DB } from '../services/services';\r\nimport { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\r\n\r\nconst Feed = () => {\r\n    const [token, setToken] = useState(localStorage.getItem('auth_token'))\r\n    const [search, setSearch] = useState('')\r\n    const [posts, setPosts] = useState([])\r\n\r\n    let findUser = DB.users.find(user => user.id === JSON.parse(localStorage.getItem('id')))\r\n    const [feedUser] = useState(findUser)\r\n\r\n    useEffect(() => {\r\n        FeedPush()\r\n            .then((data) => {\r\n                setPosts(JSON.parse(data))\r\n            })\r\n    }, [])\r\n\r\n    const findPosts = posts.filter(post => {\r\n        return post.title.toLowerCase().includes(search.toLocaleLowerCase())\r\n    })\r\n\r\n    if (token) {\r\n        return (\r\n            <Box display=\"flex\" flexWrap=\"wrap\" justifyContent=\"flex-start\">\r\n                <BrowserRouter basename='test_form/feed'>\r\n                    <Switch>\r\n                        <Route path='/posts' exact>\r\n                            <FeedHeader setToken={setToken} search={search} setSearch={setSearch} findUser={findUser} />\r\n                            <Container>\r\n                                <PostCreate posts={posts} setPosts={setPosts} />\r\n                                <FeedPost posts={posts} setPosts={setPosts} findPosts={findPosts} />\r\n                            </Container>\r\n                        </Route>\r\n                        <Route path='/profile'>\r\n                            <Profile feedUser={feedUser} />\r\n                        </Route>\r\n                    </Switch>\r\n                </BrowserRouter>\r\n\r\n            </Box>\r\n        )\r\n    } else return Redirect('/')\r\n}\r\n\r\nexport default Feed;","import React, { useState } from 'react';\r\nimport Login from './login';\r\nimport Register from './register';\r\nimport Feed from '../feed/feed';\r\nimport './form.scss';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\n\r\n\r\nconst Form = () => {\r\n\r\n  const [nickname, setNickname] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n\r\n  const [disabled, setDisabled] = useState(false)\r\n  const [show, setShow] = useState(false)\r\n  const [buttonStyle, setButtonStyle] = useState(0);\r\n\r\n  const [errorName, setErrorName] = useState(false)\r\n  const [errorEmail, setErrorEmail] = useState(false)\r\n  const [errorPassword, setErrorPassword] = useState(false)\r\n  const [errorConfirmPassword, setErrorConfirmPassword] = useState(false)\r\n  const [helperTextName, setHelperTextName] = useState('')\r\n  const [helperTextEmail, setHelperTextEmail] = useState('')\r\n  const [helperTextPassword, setHelperTextPassword] = useState('')\r\n  const [helperConfirmPassword, setHelperTextConfirmPassword] = useState('')\r\n\r\n  const targetName = (event) => setNickname(event.target.value)\r\n  const targetEmail = (event) => setEmail(event.target.value)\r\n  const targetPassword = (event) => setPassword(event.target.value)\r\n  const targetConfirmPassword = (event) => setConfirmPassword(event.target.value)\r\n\r\n  const checkName = error => text => {\r\n    setErrorName(error)\r\n    setHelperTextName(text)\r\n  }\r\n  const checkEmail = error => text => {\r\n    setErrorEmail(error)\r\n    setHelperTextEmail(text)\r\n  }\r\n  const checkPassword = error => text => {\r\n    setErrorPassword(error)\r\n    setHelperTextPassword(text)\r\n  }\r\n  const checkConfirmPassword = error => text => {\r\n    setErrorConfirmPassword(error)\r\n    setHelperTextConfirmPassword(text)\r\n  }\r\n\r\n  const showPassword = () => {\r\n    if (show === true) setShow(false)\r\n    else setShow(true)\r\n  }\r\n\r\n  const clearType = () => {\r\n    checkName()()\r\n    checkEmail()()\r\n    checkPassword()()\r\n    checkConfirmPassword()()\r\n    setButtonStyle(0)\r\n  }\r\n  const clear = () => {\r\n    setNickname('');\r\n    setEmail('');\r\n    setPassword('');\r\n    setConfirmPassword('');\r\n  }\r\n\r\n  return (\r\n    <div style={{ margin: -8 }}>\r\n      <BrowserRouter basename='/test_form'>\r\n        <Switch>\r\n          <Route path='/' exact>\r\n            <Login\r\n              email={email} targetEmail={targetEmail}\r\n              password={password} targetPassword={targetPassword}\r\n              disabled={disabled} setDisabled={setDisabled}\r\n              errorEmail={errorEmail} errorPassword={errorPassword}\r\n              helperTextEmail={helperTextEmail} helperTextPassword={helperTextPassword}\r\n              show={show} showPassword={showPassword}\r\n              buttonStyle={buttonStyle} setButtonStyle={setButtonStyle}\r\n              checkEmail={checkEmail} checkPassword={checkPassword}\r\n              clear={clear} clearType={clearType}\r\n            />\r\n          </Route>\r\n          <Route path='/register'>\r\n            <Register\r\n              nickname={nickname} targetName={targetName}\r\n              email={email} targetEmail={targetEmail}\r\n              password={password} targetPassword={targetPassword}\r\n              confirmPassword={confirmPassword} targetConfirmPassword={targetConfirmPassword}\r\n              disabled={disabled} setDisabled={setDisabled}\r\n              errorName={errorName} errorEmail={errorEmail}\r\n              errorPassword={errorPassword} errorConfirmPassword={errorConfirmPassword}\r\n              helperTextName={helperTextName} helperTextEmail={helperTextEmail}\r\n              helperTextPassword={helperTextPassword} helperConfirmPassword={helperConfirmPassword}\r\n              checkName={checkName} checkEmail={checkEmail}\r\n              checkPassword={checkPassword} checkConfirmPassword={checkConfirmPassword}\r\n              show={show} showPassword={showPassword}\r\n              buttonStyle={buttonStyle} setButtonStyle={setButtonStyle}\r\n              clear={clear} clearType={clearType}\r\n            />\r\n          </Route>\r\n          <Route path='/feed'><Feed /></Route>\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Form;","export const dataBase = {\r\n    users: []\r\n}","import React, { useEffect } from 'react';\r\nimport Form from './form/form'\r\nimport { dataBase } from './database/database';\r\n\r\nconst App = () => {\r\n    useEffect(() => {\r\n        const DB = localStorage.getItem('database')\r\n\r\n        if (!DB) {\r\n            localStorage.setItem('database', JSON.stringify(dataBase))\r\n        }\r\n    }, [])\r\n\r\n    return <Form />\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}