{"version":3,"sources":["users/user.js","form/styles/styles.js","form/login.js","database/database.js","form/register.js","main/main.jsx","form/form.js","App.js","index.js"],"names":["User","user","fetch","method","body","JSON","stringify","then","response","json","id","name","addToLocalStorage","renderList","users","getUsersFromLocalStorage","html","length","map","toCard","join","document","getElementById","innerHTML","all","push","localStorage","setItem","parse","getItem","alert","useStyles","makeStyles","margin","paddingBottom","borderTop","width","marginTop","register","textDecoration","color","hide","display","success","Login","classes","useState","nickname","setNickname","password","setPassword","disabled","setDisabled","setHide","useEffect","Card","className","Grid","container","direction","justify","Typography","variant","Button","to","TextField","label","value","onChange","event","target","type","alignItems","size","onClick","Promise","resolve","reject","setTimeout","CircularProgress","clear","dataBase","Register","email","setEmail","confirmPassword","setConfirmPassword","reg","test","find","data","registerUsers","finally","Main","Container","fixed","Form","maxWidth","basename","exact","path","component","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.4c8cb957.chunk.js","sourcesContent":["export class User {\r\n    static create(user) {\r\n        return fetch('https://test-form.firebaseio.com/users.json', {\r\n            method: 'POST',\r\n            body: JSON.stringify(user)\r\n        })\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                user.id = response.name\r\n                return user\r\n            })\r\n            .then(addToLocalStorage)\r\n            .then(User.renderList)\r\n    }\r\n\r\n    static renderList() {\r\n        const users = getUsersFromLocalStorage()\r\n        \r\n        const html = users.length\r\n            ? users.map(toCard).join('')\r\n            : `<div>Пользователей нет</div>`\r\n\r\n        const list = document.getElementById('list')\r\n\r\n        list.innerHTML = html\r\n    }\r\n}\r\n\r\nfunction addToLocalStorage(user) {\r\n    const all = getUsersFromLocalStorage()\r\n    all.push(user)\r\n    localStorage.setItem('users', JSON.stringify(all))\r\n}\r\n\r\nfunction getUsersFromLocalStorage() {\r\n    return JSON.parse(localStorage.getItem('users') || '[]')\r\n}\r\n\r\nfunction toCard(user) {\r\n    alert(`Поздравляю ${user.name} вы успешно зарегистрировались`)\r\n}","import { makeStyles } from '@material-ui/core';\r\n\r\n\r\nexport const useStyles = makeStyles({\r\n    body: {\r\n      margin: '20px 0',\r\n      paddingBottom: 5,\r\n      borderTop: '3px solid #0dcaf0',\r\n  \r\n      '& *': {\r\n        width: '100%',\r\n        marginTop: 7,\r\n      },\r\n    },\r\n    register: {\r\n      '& *': {\r\n        textDecoration: 'none',\r\n        color: 'inherit',\r\n      }\r\n    },\r\n    hide: {\r\n      display: 'none',\r\n      margin: 30,\r\n    },\r\n    success: {\r\n      color: '#4caf50'\r\n    }\r\n  })","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n  Card,\r\n  CircularProgress,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport { User } from '../users/user';\r\nimport { useStyles } from './styles/styles';\r\n\r\n\r\nconst Login = () => {\r\n\r\n  const classes = useStyles()\r\n\r\n  const [nickname, setNickname] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const [disabled, setDisabled] = useState(false)\r\n  const [hide, setHide] = useState(classes.hide)\r\n\r\n  function targetName(event) {\r\n    setNickname(event.target.value)\r\n  }\r\n  function targetPassword(event) {\r\n    setPassword(event.target.value)\r\n  }\r\n\r\n  function Click() {\r\n    let promise = new Promise((resolve, reject) => {\r\n      if (!nickname) {\r\n        reject(alert('Пожалуйста введите ваше имя'))\r\n      } else if (+nickname) {\r\n        reject(alert('Имя не может состоять из цифр'))\r\n      } else if (!password) {\r\n        reject(alert('Введите пароль'))\r\n      } else if (password.length < 8) {\r\n        reject(alert('Этот пароль слишкой короткий'))\r\n      } else {\r\n        setDisabled(true)\r\n        setHide()\r\n      }\r\n      resolve()\r\n    })\r\n    promise\r\n      .then(() => {\r\n        return new Promise((resolve, reject) => {\r\n          setTimeout((user) => {\r\n            if (nickname !== User.name) {\r\n              reject(alert('Пользователя с данным именем не существует'))\r\n            } else if (password !== User.password) {\r\n              reject(alert('Неправильный пароль'))\r\n            } else {\r\n              alert('Добро пожаловать')\r\n            }\r\n            setDisabled(false)\r\n            setHide(classes.hide)\r\n          }, 3000);\r\n        })\r\n      })\r\n  }\r\n\r\n  function Clear() {\r\n    localStorage.clear()\r\n\r\n    setNickname('');\r\n    setPassword('');\r\n  }\r\n\r\n  useEffect(() => {\r\n    setNickname(localStorage.getItem('nickname'))\r\n    setPassword(localStorage.getItem('password'))\r\n  }, [])\r\n\r\n  return (\r\n    <Card className='form'>\r\n      <Grid className='form-register head' container direction=\"row\" justify=\"space-between\">\r\n        <Typography variant='h5'>Войти в систему</Typography>\r\n        <Typography variant='h5'>или</Typography>\r\n        <Button className={classes.register} disabled={disabled} variant=\"outlined\" color=\"primary\"><Link to='/register'>Зарегистриговаться</Link></Button>\r\n      </Grid>\r\n      <Grid className={`form-register ${classes.body}`} container>\r\n        <TextField id=\"standard-basic\" label=\"Введите имя\" value={nickname} onChange={targetName} type='text' />\r\n        <TextField id=\"standard-basic\" label=\"Введите пароль\" value={password} onChange={targetPassword} type='password' />\r\n      </Grid>\r\n      <Grid className='form-register footer' container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\r\n        <Button id='login' size=\"small\" disabled={disabled} variant=\"contained\" onClick={Click} type='submit'>Войти</Button>\r\n        <CircularProgress id='loader' className={hide} />\r\n        <Button onClick={Clear} type='submit' disabled={disabled} >Очистить</Button>\r\n      </Grid>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Login;","export const dataBase = {\r\n    users: []\r\n}","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Button,\r\n    Card,\r\n    Grid,\r\n    Typography,\r\n    CircularProgress,\r\n    TextField\r\n} from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport { dataBase } from '../database/database';\r\nimport { useStyles } from './styles/styles';\r\n\r\n\r\nconst Register = () => {\r\n\r\n    const classes = useStyles()\r\n\r\n    const [nickname, setNickname] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n\r\n    const [disabled, setDisabled] = useState(false)\r\n    const [hide, setHide] = useState(classes.hide)\r\n\r\n    function targetName(event) {\r\n        setNickname(event.target.value)\r\n    }\r\n    function targetEmail(event) {\r\n        setEmail(event.target.value)\r\n    }\r\n    function targetPassword(event) {\r\n        setPassword(event.target.value)\r\n    }\r\n    function targetConfirmPassword(event) {\r\n        setConfirmPassword(event.target.value)\r\n    }\r\n\r\n    function Click() {\r\n        const reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n\r\n        let promise = new Promise((resolve, reject) => {\r\n            if (!nickname) {\r\n                reject(alert('Пожалуйста введите ваше имя'))\r\n            } else if (+nickname) {\r\n                reject(alert('Имя не может состоять из цифр'))\r\n            } else if (!email) {\r\n                reject(alert('Введите почту'))\r\n            } else if (!reg.test(email)) {\r\n                reject(alert('Почта некорректна'))\r\n            } else if (!password) {\r\n                reject(alert('Введите пароль'))\r\n            } else if (password.length < 8) {\r\n                reject(alert('Этот пароль слишкой короткий'))\r\n            } else if (password !== confirmPassword) {\r\n                reject(alert('Пароли не совпадают'))\r\n            } else {\r\n                setDisabled(true)\r\n                setHide()\r\n            }\r\n            resolve()\r\n        })\r\n        promise\r\n            .then(() => {\r\n                return new Promise((resolve, reject) => {\r\n                    setTimeout(() => {\r\n                        let DB = JSON.parse(localStorage.getItem('database'))\r\n\r\n                        let duplicate = DB.users.find(user => user.email === email)\r\n\r\n                        if (duplicate) reject(alert('Данная почта занята'))\r\n                        else resolve({\r\n                            name: nickname,\r\n                            email: email,\r\n                            password: password\r\n                        })\r\n                    }, 3000);\r\n                })\r\n            })\r\n            .then((data) => {\r\n                return new Promise(resolve => {\r\n                    let registerUsers = dataBase.users\r\n                    registerUsers.push(data)\r\n                    resolve(registerUsers)\r\n                })\r\n            })\r\n            .then((data) => {\r\n                localStorage.setItem('database', JSON.stringify({ users: data }))\r\n            })\r\n            .finally(() => {\r\n                setDisabled(false)\r\n                setHide(classes.hide)\r\n            })\r\n    }\r\n\r\n    function Clear() {\r\n        localStorage.clear()\r\n\r\n        setNickname('');\r\n        setEmail('');\r\n        setPassword('');\r\n        setConfirmPassword('');\r\n    }\r\n\r\n    useEffect(() => {\r\n        setNickname(localStorage.getItem('nickname'))\r\n        setEmail(localStorage.getItem('email'))\r\n        setPassword(localStorage.getItem('password'))\r\n        setConfirmPassword(localStorage.getItem('confirmPassword'))\r\n    }, [])\r\n\r\n    return (\r\n        <Card className='form'>\r\n            <Grid className='form-register head' container direction=\"row\" justify=\"space-between\">\r\n                <Typography variant='h5'>Зарегистриговаться</Typography>\r\n                <Typography variant='h5'>или</Typography>\r\n                <Button className={classes.register} disabled={disabled} variant=\"outlined\" color=\"primary\"><Link to='/'>Войти</Link></Button>\r\n            </Grid>\r\n            <Grid className={`form-register ${classes.body}`} container>\r\n                <TextField id=\"standard-basic\" label=\"Введите имя\" value={nickname} onChange={targetName} type='text' />\r\n                <TextField id=\"standard-basic\" label=\"Введите вашу почту\" value={email} onChange={targetEmail} type='email' />\r\n                <TextField id=\"standard-basic\" label=\"Придумайте пароль\" value={password} onChange={targetPassword} type='password' />\r\n                <TextField id=\"standard-basic\" label=\"Подтвердите пароль\" value={confirmPassword} onChange={targetConfirmPassword} type='password' />\r\n            </Grid>\r\n            <Grid className='form-register footer' container direction=\"row\" justify=\"space-between\">\r\n                <Button id='register' size=\"small\" disabled={disabled} variant=\"contained\" onClick={Click} type='submit' >Зарегистриговаться</Button >\r\n                <CircularProgress id='loader' className={hide} />\r\n                <Button onClick={Clear} disabled={disabled} >Очистить</Button>\r\n            </Grid>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport { Container, Grid, Typography } from '@material-ui/core';\r\nimport './main.scss';\r\n\r\n\r\nconst Main = () => {\r\n    return (\r\n        <Container fixed>\r\n            {/* <Grid className='head'>head</Grid>\r\n            <Grid className='body'>body</Grid>\r\n            <Grid className='footer'>footer</Grid> */}\r\n            <Typography variant='h5'>Данная страница еще в разработке</Typography>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\nimport { Container } from '@material-ui/core';\r\nimport Login from './login';\r\nimport Register from './register';\r\nimport Main from '../main/main';\r\nimport './form.scss';\r\nimport { HashRouter as Router, Route } from 'react-router-dom';\r\n\r\n\r\nconst Form = () => {\r\n  return (\r\n    <Container maxWidth='sm'>\r\n      <Router basename='/test_form'>\r\n        <Route exact path='/' component={Login} />\r\n        <Route exact path='/register' component={Register} />\r\n        <Route exact path='/main' component={Main} />\r\n      </Router>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Form;","import React, { useEffect } from 'react';\r\nimport Form from './form/form'\r\nimport { dataBase } from './database/database';\r\n\r\nconst App = () => {\r\n    useEffect(() => {\r\n        const DB = localStorage.getItem('database')\r\n\r\n        if (!DB) {\r\n            localStorage.setItem('database', JSON.stringify(dataBase))\r\n        }\r\n    }, [])\r\n\r\n    return <Form />\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}