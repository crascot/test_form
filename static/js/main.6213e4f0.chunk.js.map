{"version":3,"sources":["form/styles/styles.js","services/services.js","form/login.js","form/register.js","feed/posts/pagination/pagination.jsx","feed/posts/posts.jsx","feed/feed-header/feed-header.jsx","feed/posts/posts-create.jsx","feed/profile/user.jsx","feed/profile/info.jsx","feed/profile/profile.jsx","feed/feed.jsx","form/form.js","database/database.js","App.js","index.js"],"names":["useStyles","makeStyles","body","margin","paddingBottom","borderTop","marginTop","width","display","alignItems","marginLeft","border","register","textDecoration","color","showPasswordButton","footer","paddingTop","hide","reg","DB","JSON","parse","localStorage","getItem","Login","nickname","targetName","password","targetPassword","disabled","setDisabled","errorName","errorPassword","helperTextName","helperTextPassword","checkName","checkPassword","show","showPassword","buttonStyle","setButtonStyle","clear","clearType","classes","useState","setHide","redirect","setRedirect","click","setClick","useEffect","length","Container","maxWidth","Card","className","Grid","container","direction","justify","Typography","variant","to","onClick","style","Button","TextField","fullWidth","label","value","onChange","type","error","helperText","marginBottom","id","size","userName","userPassword","Promise","resolve","reject","setTimeout","findUser","users","find","user","name","setItem","alert","then","catch","props","finally","CircularProgress","Register","email","targetEmail","confirmPassword","targetConfirmPassword","errorEmail","errorConfirmPassword","helperTextEmail","helperConfirmPassword","checkEmail","checkConfirmPassword","test","userEmail","stringify","push","CheckIn","pagination","flexWrap","justifyContent","num","boxShadow","Pagination","postsLength","totalPosts","paginate","pageNumbers","i","Math","ceil","map","number","block","post","minWidth","noPosts","textAlign","icon","cursor","content","title","borderBottom","save","Posts","posts","setPosts","findPosts","edit","setEdit","valueTitle","setValueTitle","valueBody","setValueBody","currentPage","setCurrentPage","lastPostIndex","firstPostsIndex","Box","filter","el","CardContent","e","target","multiline","gutterBottom","component","newPost","item","savePost","slice","pageNumber","backgroundColor","padding","left","webName","marginRight","fontSize","FeedHeader","setToken","search","setSearch","setUserId","anchorEl","setAnchorEl","open","Boolean","event","textTransform","aria-controls","aria-haspopup","aria-expanded","undefined","currentTarget","Menu","onClose","MenuListProps","MenuItem","removeItem","center","lineHeight","input","PostCreate","titleText","setTitleText","bodyText","setBodyText","v","trim","random","avatar","status","height","userStatus","menuStatus","borderRadius","fontWeight","aboutMe","online","green","offline","red","Input","styled","User","setAvatar","setStatus","statusColor","setStatusColor","checkStatus","about","setAbout","Stack","spacing","htmlFor","file","files","reader","FileReader","onload","result","readAsDataURL","multiple","CardMedia","image","alt","Alert","severity","TransitionComponent","Fade","Info","feedUser","filtered","setName","birthday","setBirthday","gender","setGender","setPassword","phone","setPhone","setEmail","changeData","forEach","Paper","elevation","Profile","Feed","userId","token","fetch","response","json","data","toLowerCase","includes","toLocaleLowerCase","basename","path","exact","Redirect","Form","setNickname","setConfirmPassword","setShow","setErrorName","setErrorEmail","setErrorPassword","setErrorConfirmPassword","setHelperTextName","setHelperTextEmail","setHelperTextPassword","setHelperTextConfirmPassword","text","dataBase","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6213e4f0.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core';\r\n\r\n\r\nexport const useStyles = makeStyles({\r\n  body: {\r\n    margin: '20px 0',\r\n    paddingBottom: 5,\r\n    borderTop: '3px solid #0dcaf0',\r\n    '& *': {\r\n      marginTop: 7,\r\n    },\r\n    '& span': {\r\n      width: '100%',\r\n      display: 'flex',\r\n      alignItems: 'flex-end',\r\n\r\n      '& button': {\r\n        marginLeft: '-2px',\r\n        border: '1px solid gray',\r\n\r\n        '& *': {\r\n          margin: '0 auto'\r\n        }\r\n      }\r\n    },\r\n  },\r\n  register: {\r\n    '& *': {\r\n      textDecoration: 'none',\r\n      color: 'inherit',\r\n    }\r\n  },\r\n  showPasswordButton: {\r\n    margin: '0 auto',\r\n    '& svg': {\r\n      marginLeft: 10\r\n    }\r\n  },\r\n  footer: {\r\n    paddingTop: 10,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n    margin: 30,\r\n  },\r\n})","export const reg = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/iu;\r\nexport let DB = JSON.parse(localStorage.getItem('database'));\r\n\r\nexport function SignIn(userName, userPassword) {\r\n    return new Promise((resolve, reject) => {\r\n        if (!userName || +userName) {\r\n            reject(userName)\r\n        } else if (!userPassword || userPassword.length < 8) {\r\n            reject(userPassword)\r\n        } else {\r\n            setTimeout(() => {\r\n                let findUser = DB.users.find(user => user.name === userName && user.password === userPassword)\r\n\r\n                if (findUser) {\r\n                    localStorage.setItem('id', findUser.id)\r\n                    resolve()\r\n                }\r\n                else {\r\n                    reject(alert('Данного пользователя не существует или вы неправильно ввели данные'))\r\n                }\r\n            }, 3000);\r\n        }\r\n    })\r\n}\r\n\r\nexport function CheckIn(userName, userEmail, userPassword, confirmPassword) {\r\n    return new Promise((resolve, reject) => {\r\n        const id = JSON.parse(localStorage.getItem('database')).users.length;\r\n\r\n        let user = {\r\n            id: id,\r\n            name: userName,\r\n            email: userEmail,\r\n            password: userPassword\r\n        }\r\n\r\n        if (!userName || +userName) {\r\n            reject(userName)\r\n        } else if (!userEmail || !reg.test(userEmail)) {\r\n            reject(userEmail)\r\n        } else if (!userPassword || userPassword.length < 8) {\r\n            reject(userPassword)\r\n        } else if (userPassword !== confirmPassword) {\r\n            reject(confirmPassword)\r\n        } else {\r\n            setTimeout(() => {\r\n                resolve(user)\r\n            }, 3000);\r\n        }\r\n    }).then((user) => {\r\n        return new Promise((resolve, reject) => {\r\n            let duplicate = DB.users.find(user => user.email === userEmail)\r\n\r\n            if (duplicate) {\r\n                reject(alert('Данная почта занята'))\r\n            }\r\n            else {\r\n                localStorage.setItem('database', JSON.stringify(user))\r\n                DB.users.push(user)\r\n                localStorage.setItem('database', JSON.stringify(DB))\r\n                resolve()\r\n            }\r\n        })\r\n    })\r\n}\r\n\r\nexport function FeedPush() {\r\n    return new Promise((resolve) => {\r\n        fetch('https://jsonplaceholder.typicode.com/posts')\r\n            .then(response => response.json())\r\n            .then(json => resolve(JSON.stringify(json)))\r\n    })\r\n}","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n  Card,\r\n  CircularProgress,\r\n  TextField,\r\n  Container,\r\n} from '@material-ui/core';\r\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { useStyles } from './styles/styles';\r\nimport { SignIn } from '../services/services';\r\n\r\n\r\nconst Login = ({\r\n  nickname, targetName,\r\n  password, targetPassword,\r\n  disabled, setDisabled,\r\n  errorName, errorPassword,\r\n  helperTextName, helperTextPassword,\r\n  checkName, checkPassword,\r\n  show, showPassword,\r\n  buttonStyle, setButtonStyle,\r\n  clear, clearType }) => {\r\n\r\n  const classes = useStyles()\r\n\r\n  const [hide, setHide] = useState(classes.hide)\r\n  const [redirect, setRedirect] = useState('')\r\n  const [click, setClick] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (click === true) {\r\n      if (!nickname) checkName(true)('Пожалуйста введите ваше имя')\r\n      else if (+nickname) checkName(true)('Имя не может состоять из цифр')\r\n      else checkName()()\r\n\r\n      if (password.length < 8) {\r\n        checkPassword(true)('Пароль слишкой короткий')\r\n        setButtonStyle(27);\r\n      }\r\n      else {\r\n        checkPassword()()\r\n        setButtonStyle()\r\n      }\r\n\r\n    }\r\n  })\r\n\r\n  const handleSubmit = () => {\r\n    setClick(true);\r\n    setDisabled(true);\r\n    setHide(null);\r\n    SignIn(nickname, password)\r\n      .then(() => {\r\n        localStorage.setItem('auth_token', true)\r\n        setRedirect('/feed/posts')\r\n        clear()\r\n      }).catch((props) => {\r\n        switch (props) {\r\n          case nickname:\r\n            if (nickname === 0) checkName(true)('Пожалуйста введите ваше имя')\r\n            break;\r\n          case password:\r\n            checkPassword(true)('Пароль слишкой короткий')\r\n            break;\r\n\r\n          // no default\r\n        }\r\n      })\r\n      .finally(() => {\r\n        setDisabled(false);\r\n        setHide(classes.hide);\r\n      })\r\n  }\r\n\r\n  return (\r\n    <Container maxWidth='sm'>\r\n      <Card className='form'>\r\n        <Grid className='form-register head' container direction=\"row\" justify=\"space-between\">\r\n          <Typography variant='h5'>Войти в систему</Typography>\r\n          <Typography variant='h5'>или</Typography>\r\n          <Link to='/register' onClick={clear} style={{ textDecoration: 'none' }}>\r\n            <Button className={classes.register} onClick={clearType} disabled={disabled} variant=\"outlined\" color=\"primary\">\r\n              Зарегистриговаться\r\n            </Button>\r\n          </Link>\r\n        </Grid>\r\n        <Grid className={`form-register ${classes.body}`} container>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Введите имя\"\r\n            value={nickname}\r\n            onChange={targetName}\r\n            disabled={disabled}\r\n            type='text'\r\n            error={errorName}\r\n            helperText={helperTextName}\r\n          />\r\n          <span>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Введите пароль\"\r\n              value={password}\r\n              onChange={targetPassword}\r\n              disabled={disabled}\r\n              type={show === true ? 'text' : 'password'}\r\n              error={errorPassword}\r\n              helperText={helperTextPassword}\r\n            />\r\n            <Button\r\n              className={classes.showPasswordButton}\r\n              onClick={showPassword}\r\n              disabled={disabled}\r\n              style={{ marginBottom: buttonStyle }}\r\n            >\r\n              {show === true ? <VisibilityOffIcon /> : <VisibilityIcon />}\r\n            </Button>\r\n          </span>\r\n        </Grid>\r\n        <Grid className={`form-register ${classes.footer}`} container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\r\n          <Button id='login' size=\"small\" disabled={disabled} variant=\"contained\" onClick={handleSubmit} type='submit'><Redirect to={redirect} />Войти</Button>\r\n          <CircularProgress id='loader' className={`${hide} + visible`} />\r\n          <Button onClick={clear} type='submit' disabled={disabled}>Очистить</Button>\r\n        </Grid>\r\n      </Card>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Login;","import React, { useEffect, useState } from 'react';\r\nimport {\r\n    Button,\r\n    Card,\r\n    Grid,\r\n    Typography,\r\n    CircularProgress,\r\n    TextField,\r\n    Container\r\n} from '@material-ui/core';\r\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { useStyles } from './styles/styles';\r\nimport { CheckIn, reg } from '../services/services';\r\n\r\n\r\nconst Register = ({\r\n    nickname, targetName,\r\n    email, targetEmail,\r\n    password, targetPassword,\r\n    confirmPassword, targetConfirmPassword,\r\n    disabled, setDisabled,\r\n    errorName, errorEmail,\r\n    errorPassword, errorConfirmPassword,\r\n    helperTextName, helperTextEmail,\r\n    helperTextPassword, helperConfirmPassword,\r\n    checkName, checkEmail, checkPassword, checkConfirmPassword,\r\n    show, showPassword,\r\n    buttonStyle, setButtonStyle,\r\n    clear, clearType }) => {\r\n\r\n    const classes = useStyles()\r\n\r\n    const [hide, setHide] = useState(classes.hide)\r\n    const [redirect, setRedirect] = useState('/register')\r\n    const [click, setClick] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if (click === true) {\r\n            if (!nickname) checkName(true)('Пожалуйста введите ваше имя')\r\n            else if (+nickname) checkName(true)('Имя не может состоять из цифр')\r\n            else checkName()()\r\n\r\n            if (!email || !reg.test(email)) checkEmail(true)('Почта некорректна')\r\n            else checkEmail()()\r\n\r\n            if (password.length < 8) {\r\n                checkPassword(true)('Пароль слишкой короткий')\r\n                setButtonStyle(27)\r\n            }\r\n            else {\r\n                checkPassword()()\r\n                setButtonStyle()\r\n            }\r\n\r\n            if (password !== confirmPassword) checkConfirmPassword(true)('Пароли не совпадают')\r\n            else checkConfirmPassword()()\r\n        }\r\n    })\r\n\r\n    const handleSubmit = () => {\r\n        const id = JSON.parse(localStorage.getItem('database')).users.length\r\n\r\n        setClick(true);\r\n        setDisabled(true);\r\n        setHide(null);\r\n        CheckIn(nickname, email, password, confirmPassword)\r\n            .then(() => {\r\n                localStorage.setItem('auth_token', true)\r\n                localStorage.setItem('id', id)\r\n                setRedirect('/feed/posts')\r\n                clear()\r\n            }).catch((props) => {\r\n                switch (props) {\r\n                    case nickname:\r\n                        if (nickname === 0) checkName(true)('Пожалуйста введите ваше имя')\r\n                        break;\r\n                    case email:\r\n                        checkEmail()('Почта некорректна')\r\n                        break;\r\n                    case password:\r\n                        if (password !== confirmPassword) {\r\n                            checkPassword(true)('Пароль слишкой короткий')\r\n                            checkConfirmPassword(true)('Пароли не совпадают')\r\n                        }\r\n\r\n                    // no default\r\n                }\r\n            })\r\n            .finally(() => {\r\n                setDisabled(false);\r\n                setHide(classes.hide);\r\n            })\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth='sm'>\r\n            <Card className='form'>\r\n                <Grid className='form-register head' container direction=\"row\" justify=\"space-between\">\r\n                    <Typography variant='h5'>Зарегистриговаться</Typography>\r\n                    <Typography variant='h5'>или</Typography>\r\n                    <Link to='/' onClick={clear} style={{ textDecoration: 'none' }}><Button className={classes.register} onClick={clearType} disabled={disabled} variant=\"outlined\" color=\"primary\">Войти</Button></Link>\r\n                </Grid>\r\n                <Grid className={`form-register ${classes.body}`} container>\r\n                    <TextField\r\n                        label=\"Введите имя\"\r\n                        value={nickname}\r\n                        onChange={targetName}\r\n                        disabled={disabled}\r\n                        fullWidth type='text'\r\n                        error={errorName}\r\n                        helperText={helperTextName}\r\n                    />\r\n                    <TextField\r\n                        label=\"Введите вашу почту\"\r\n                        value={email}\r\n                        onChange={targetEmail}\r\n                        disabled={disabled}\r\n                        fullWidth type='email'\r\n                        error={errorEmail}\r\n                        helperText={helperTextEmail}\r\n                    />\r\n                    <span>\r\n                        <TextField\r\n                            fullWidth\r\n                            label=\"Введите пароль\"\r\n                            value={password}\r\n                            onChange={targetPassword}\r\n                            disabled={disabled}\r\n                            type={show === true ? 'text' : 'password'}\r\n                            error={errorPassword}\r\n                            helperText={helperTextPassword}\r\n                        />\r\n                        <Button\r\n                            className={classes.showPasswordButton}\r\n                            onClick={showPassword}\r\n                            disabled={disabled}\r\n                            style={{ marginBottom: buttonStyle }}\r\n                        >\r\n                            {show === true ? <VisibilityOffIcon /> : <VisibilityIcon />}\r\n                        </Button>\r\n                    </span>\r\n                    <TextField\r\n                        label=\"Подтвердите пароль\"\r\n                        value={confirmPassword}\r\n                        onChange={targetConfirmPassword}\r\n                        disabled={disabled} fullWidth\r\n                        type={show === true ? 'text' : 'password'}\r\n                        error={errorConfirmPassword}\r\n                        helperText={helperConfirmPassword}\r\n                    />\r\n                </Grid>\r\n                <Grid className='form-register footer' container direction=\"row\" justify=\"space-between\">\r\n                    <Button id='register' size=\"small\" disabled={disabled} variant=\"contained\" onClick={handleSubmit} type='submit' ><Redirect to={redirect} />Зарегистриговаться</Button >\r\n                    <CircularProgress id='loader' className={hide} />\r\n                    <Button onClick={clear} disabled={disabled} >Очистить</Button>\r\n                </Grid>\r\n            </Card>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    pagination: {\r\n        width: '100%',\r\n        marginTop: '2rem',\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'center',\r\n    },\r\n    num: {\r\n        width: 30,\r\n        margin: '10px 3px',\r\n        boxShadow: \"0px 2px 1px -1px rgb(0 0 0 / 20%), 0px 1px 1px 0px rgb(0 0 0 / 14%), 0px 1px 3px 0px rgb(0 0 0 / 12%)\"\r\n    }\r\n});\r\n\r\nconst Pagination = ({ postsLength, totalPosts, paginate }) => {\r\n    const classes = useStyles();\r\n\r\n    const pageNumbers = []\r\n    for (let i = 1; i <= Math.ceil(totalPosts / postsLength); i++) {\r\n        pageNumbers.push(i)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.pagination}>\r\n            {\r\n                pageNumbers.map(number => (\r\n                    <Button onClick={() => paginate(number)}\r\n                        className={classes.num}\r\n                        size=\"small\"\r\n                        key={number}\r\n                    >\r\n                        {number}\r\n                    </Button>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pagination;","import React, { useState } from 'react';\r\nimport {\r\n    Card,\r\n    CardContent,\r\n    Typography,\r\n    TextField,\r\n    Box,\r\n    Button,\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport HighlightOff from '@material-ui/icons/HighlightOff';\r\nimport Pagination from './pagination/pagination';\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    block: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'center',\r\n    },\r\n    post: {\r\n        minWidth: 280,\r\n        maxWidth: 280,\r\n        marginTop: '2rem',\r\n        margin: '0 14px',\r\n    },\r\n    noPosts: {\r\n        marginTop: 20,\r\n        textAlign: 'center',\r\n    },\r\n    icon: {\r\n        marginTop: '9px',\r\n        marginLeft: '88%',\r\n        cursor: 'pointer',\r\n    },\r\n    content: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        alignItems: 'center'\r\n    },\r\n    title: {\r\n        width: '100%',\r\n        borderBottom: '3px solid #0dcaf0',\r\n        marginBottom: 4\r\n    },\r\n    body: {\r\n        width: '100%',\r\n    },\r\n    save: {\r\n        width: '100%',\r\n        textAlign: 'right',\r\n        marginTop: 5,\r\n    },\r\n    pagination: {\r\n        marginTop: '2rem',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n    }\r\n});\r\n\r\nconst Posts = ({ posts, setPosts, findPosts }) => {\r\n    const classes = useStyles();\r\n\r\n    const [edit, setEdit] = useState(null)\r\n    const [valueTitle, setValueTitle] = useState('')\r\n    const [valueBody, setValueBody] = useState('')\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n\r\n    let postsLength = 8\r\n    const lastPostIndex = currentPage * postsLength\r\n    const firstPostsIndex = lastPostIndex - postsLength\r\n\r\n    const deletePost = (id) => setPosts(posts.filter((el) => el.id !== id))\r\n\r\n    const editPost = (id, title, body) => {\r\n        setEdit(id)\r\n        setValueTitle(title)\r\n        setValueBody(body)\r\n    }\r\n    const savePost = (id) => {\r\n        let newPost = posts.map(item => {\r\n            if (item.id === id) {\r\n                item.title = valueTitle\r\n                item.body = valueBody\r\n            }\r\n            return item\r\n        })\r\n\r\n        setPosts(newPost)\r\n        setEdit(null)\r\n    }\r\n\r\n    const paginate = pageNumber => setCurrentPage(pageNumber)\r\n\r\n    return (\r\n        <Box className={classes.block}>\r\n            {\r\n                posts.length === 0 ?\r\n                    <Typography variant=\"h3\" className={classes.noPosts}>Посты закончились</Typography>\r\n                    :\r\n                    findPosts.length === 0 ?\r\n                        <Typography variant=\"h3\" className={classes.noPosts}>Пост не найден</Typography>\r\n                        :\r\n                        findPosts.map((props) => (\r\n                            <Card className={classes.post} id={props.id} key={props.id}>\r\n                                <HighlightOff className={classes.icon} onClick={() => deletePost(props.id)} />\r\n                                <CardContent className={classes.content}>\r\n                                    <div className={classes.title}>\r\n                                        {\r\n                                            edit === props.id ? <div>\r\n                                                <TextField value={valueTitle} onChange={(e) => setValueTitle(e.target.value)} fullWidth multiline />\r\n                                            </div>\r\n                                                :\r\n                                                <Typography\r\n                                                    gutterBottom variant=\"h5\"\r\n                                                    component=\"h2\"\r\n                                                >\r\n                                                    {props.title}\r\n                                                </Typography>\r\n                                        }\r\n                                    </div>\r\n                                    <div className={classes.body}>\r\n                                        {\r\n                                            edit === props.id ? <div>\r\n                                                <TextField value={valueBody} onChange={(e) => setValueBody(e.target.value)} fullWidth multiline />\r\n                                            </div>\r\n                                                :\r\n                                                <Typography variant=\"body2\"\r\n                                                    color=\"textSecondary\"\r\n                                                    component=\"p\"\r\n                                                >\r\n                                                    {props.body}\r\n                                                </Typography>\r\n                                        }\r\n                                    </div>\r\n                                    <Typography className={classes.save} variant=\"button\">\r\n                                        {\r\n                                            edit === props.id ?\r\n                                                <Button onClick={() => savePost(props.id)} size='small'>Сохранить</Button>\r\n                                                :\r\n                                                <Button onClick={() => editPost(props.id, props.title, props.body)}>Редактировать</Button>\r\n                                        }\r\n                                    </Typography>\r\n                                </CardContent>\r\n                            </Card>\r\n                        )).slice(firstPostsIndex, lastPostIndex)\r\n            }\r\n            <Pagination\r\n                postsLength={postsLength}\r\n                totalPosts={findPosts.length}\r\n                paginate={paginate}\r\n            />\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Posts;","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    Box,\r\n    Typography,\r\n    Button,\r\n    TextField,\r\n} from '@material-ui/core';\r\nimport {\r\n    Menu,\r\n    MenuItem\r\n} from '@mui/material';\r\nimport { Redirect } from 'react-router';\r\n\r\nconst useStyles = makeStyles({\r\n    block: {\r\n        width: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        backgroundColor: '#0dcaf0',\r\n        margin: '0 -15xp',\r\n        padding: '15px'\r\n    },\r\n    left: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'space-between',\r\n        textAlign: 'center'\r\n    },\r\n    webName: {\r\n        marginRight: 20\r\n    },\r\n    name: {\r\n        fontSize: 25\r\n    }\r\n});\r\n\r\nconst FeedHeader = ({ setToken, search, setSearch, setUserId, name }) => {\r\n    const classes = useStyles();\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null)\r\n    const [redirect, setRedirect] = useState('/posts')\r\n\r\n    const open = Boolean(anchorEl)\r\n\r\n    const handleClick = (event) => setAnchorEl(event.currentTarget)\r\n    const handleClose = () => setAnchorEl(null)\r\n    const profile = () => setRedirect('/profile')\r\n    const leave = () => {\r\n        setToken(localStorage.removeItem('auth_token'))\r\n        setUserId(localStorage.removeItem('id'))\r\n    }\r\n\r\n    return (\r\n        <Box className={classes.block}>\r\n            <div className={classes.left}>\r\n                <Typography variant=\"h4\" className={classes.webName}>Test-Form</Typography>\r\n                <TextField value={search} onChange={(event) => setSearch(event.target.value)} id=\"filled-basic\" label=\"Поиск...\" variant=\"filled\" size=\"small\" />\r\n            </div>\r\n            <div>\r\n                <Button\r\n                    style={{ textTransform: 'capitalize' }}\r\n                    id=\"basic-button\"\r\n                    aria-controls=\"basic-menu\"\r\n                    aria-haspopup=\"true\"\r\n                    aria-expanded={open ? 'true' : undefined}\r\n                    onClick={handleClick}\r\n                >\r\n                    <Typography variant=\"body1\" className={classes.name}>\r\n                        {name}\r\n                    </Typography>\r\n                </Button>\r\n                <Menu\r\n                    id=\"basic-menu\"\r\n                    anchorEl={anchorEl}\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    MenuListProps={{\r\n                        'aria-labelledby': 'basic-button',\r\n                    }}\r\n                >\r\n                    <MenuItem onClick={profile}><Redirect to={redirect} />Профиль</MenuItem>\r\n                    <MenuItem onClick={leave}>Выйти</MenuItem>\r\n                </Menu>\r\n            </div>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default FeedHeader;","import React, { useState } from 'react';\r\nimport {\r\n    Card,\r\n    CardContent,\r\n    Typography,\r\n    TextField,\r\n    Box,\r\n    Button,\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    block: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'center',\r\n    },\r\n    post: {\r\n        minWidth: 280,\r\n        maxWidth: 280,\r\n        marginTop: '2rem',\r\n        margin: '0 14px',\r\n        padding: 15,\r\n        textAlign: 'center',\r\n    },\r\n    center: {\r\n        lineHeight: 4\r\n    },\r\n    input: {\r\n        lineHeight: 30\r\n    }\r\n});\r\n\r\nconst PostCreate = ({ posts, setPosts }) => {\r\n    const classes = useStyles();\r\n\r\n    const [titleText, setTitleText] = useState('')\r\n    const [bodyText, setBodyText] = useState('')\r\n\r\n    const addPosts = () => {\r\n        if (titleText.trim() && bodyText.trim()) {\r\n\r\n            let newPost = {\r\n                id: Math.random() * posts.length,\r\n                title: titleText,\r\n                body: bodyText\r\n            }\r\n\r\n            setPosts([newPost, ...posts])\r\n\r\n            setTitleText('')\r\n            setBodyText('')\r\n        } else alert('Заполните поле')\r\n    }\r\n\r\n    return (\r\n        <Box className={classes.block}>\r\n            <Card className={classes.post}>\r\n                <Typography variant='h6'>Добавить пост</Typography>\r\n                <CardContent className={classes.center}>\r\n                    <TextField className={classes.input} fullWidth label=\"Заголовок\" value={titleText} onChange={(v) => setTitleText(v.target.value)} type='text' />\r\n                    <TextField className={classes.input} fullWidth label=\"Содержание\" value={bodyText} onChange={(v) => setBodyText(v.target.value)} type='text' />\r\n                </CardContent>\r\n                <Button onClick={addPosts} size='large'>Сохранить</Button>\r\n            </Card>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default PostCreate;","import React, { useState } from 'react';\r\nimport {\r\n    Box,\r\n    Alert,\r\n    Typography,\r\n    TextField,\r\n    Button,\r\n    Card,\r\n    CardMedia,\r\n    CardContent,\r\n    Menu,\r\n    MenuItem,\r\n    Fade,\r\n} from '@mui/material';\r\nimport Stack from '@mui/material/Stack';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport { styled } from '@mui/material/styles';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { green, red } from '@mui/material/colors';\r\n\r\nconst useStyles = makeStyles({\r\n    avatar: {\r\n        width: 'max-content',\r\n        margin: '0 auto',\r\n        cursor: 'pointer',\r\n    },\r\n    status: {\r\n        width: '100%',\r\n        height: 20,\r\n        margin: '15px 0 !important',\r\n        padding: 0,\r\n    },\r\n    userStatus: {\r\n        width: '100%',\r\n        height: 'inherit',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    menuStatus: {\r\n        margin: '8px !important',\r\n        borderRadius: '5px !important',\r\n        fontWeight: '500 !important',\r\n        color: '#fff !important',\r\n    },\r\n    aboutMe: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        fontWeight: 500,\r\n        color: 'gray',\r\n        marginBottom: 0\r\n    },\r\n\r\n    icon: {\r\n        marginRight: 7\r\n    },\r\n    center: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    }\r\n});\r\n\r\nconst online = green[800];\r\nconst offline = red[800];\r\nconst Input = styled('input')({\r\n    display: 'none',\r\n});\r\n\r\nconst User = ({ edit }) => {\r\n    const classes = useStyles();\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const handleClick = (event) => setAnchorEl(event.currentTarget);\r\n    const handleClose = () => setAnchorEl(null);\r\n\r\n    const [avatar, setAvatar] = useState(null)\r\n\r\n    const loadAvatar = (event) => {\r\n        const file = event.target.files[0];\r\n        const reader = new FileReader()\r\n\r\n        reader.onload = e => setAvatar(e.target.result)\r\n        reader.readAsDataURL(file)\r\n    }\r\n\r\n    const [status, setStatus] = useState('')\r\n    const [statusColor, setStatusColor] = useState('')\r\n    const checkStatus = status => color => {\r\n        setStatus(status)\r\n        setStatusColor(color)\r\n    }\r\n    const handleOnline = () => {\r\n        checkStatus('Online')('success')\r\n        setAnchorEl(null);\r\n    }\r\n    const handleOffline = () => {\r\n        checkStatus('Offline')('error')\r\n        setAnchorEl(null);\r\n    }\r\n\r\n    const [about, setAbout] = useState('')\r\n    const checkAbout = event => setAbout(event.target.value)\r\n\r\n    return (\r\n        <Box width={320} style={{ marginRight: 8 }}>\r\n            <Card variant=\"outlined\">\r\n                <CardContent>\r\n                    <div>\r\n                        <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\r\n                            <label htmlFor=\"contained-button-file\" className={classes.avatar}>\r\n                                <Input id=\"contained-button-file\" onChange={loadAvatar} multiple type=\"file\" />\r\n                                <CardMedia\r\n                                    component=\"img\"\r\n                                    height=\"190\"\r\n                                    image={avatar === null ?\r\n                                        'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRpAlUbnpAz36HIeIvG7nKBUHuILO3N2qODJxcAuTUSbrf_WoqiVsVpRcolCGCKu7O7f9Y&usqp=CAU'\r\n                                        :\r\n                                        avatar\r\n                                    }\r\n                                    alt=\"Avatar\"\r\n                                />\r\n                            </label>\r\n                        </Stack>\r\n\r\n                        <Button\r\n                            className={classes.status}\r\n                            id=\"fade-button\"\r\n                            aria-controls=\"fade-menu\"\r\n                            aria-haspopup=\"true\"\r\n                            aria-expanded={open ? 'true' : undefined}\r\n                            onClick={handleClick}\r\n                        >\r\n                            <Alert\r\n                                severity={statusColor ? statusColor : setStatusColor('success')}\r\n                                icon={false} variant=\"filled\"\r\n                                className={classes.userStatus}\r\n                            >\r\n                                {status ? status : setStatus('Online')}\r\n                            </Alert>\r\n                        </Button>\r\n                        <Menu\r\n                            id=\"fade-menu\"\r\n                            MenuListProps={{\r\n                                'aria-labelledby': 'fade-button',\r\n                            }}\r\n                            anchorEl={anchorEl}\r\n                            open={open}\r\n                            onClose={handleClose}\r\n                            TransitionComponent={Fade}\r\n                        >\r\n                            <MenuItem onClick={handleOnline} className={classes.menuStatus} style={{ backgroundColor: online }}>Online</MenuItem>\r\n                            <MenuItem onClick={handleOffline} className={classes.menuStatus} style={{ backgroundColor: offline }}>Offline</MenuItem>\r\n                        </Menu>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <Typography className={classes.aboutMe} variant=\"h5\" gutterBottom component=\"div\"><PersonIcon /> Обо мне</Typography>\r\n                        {\r\n                            edit === true ?\r\n                                <TextField\r\n                                    value={about}\r\n                                    onChange={checkAbout}\r\n                                    style={{ marginBottom: 5.6 }}\r\n                                    id=\"standard-multiline-static\"\r\n                                    multiline\r\n                                    fullWidth\r\n                                />\r\n                                :\r\n                                <Typography variant=\"subtitle1\" gutterBottom component=\"div\">\r\n                                    {\r\n                                        about ? about :\r\n                                            <Alert\r\n                                                className={classes.center}\r\n                                                severity='warning'\r\n                                            >\r\n                                                Данный пункт не заполнен, вы можете заполнить его нажав на \"Изменить профиль\"\r\n                                            </Alert>\r\n                                    }\r\n                                </Typography>\r\n                        }\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default User;","import React, { useState } from 'react';\r\nimport {\r\n    Box,\r\n    Paper,\r\n    Typography,\r\n    Input,\r\n    Alert,\r\n} from '@mui/material';\r\nimport { DB, reg } from '../../services/services';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport './profile.scss';\r\n\r\n\r\nconst Info = ({ feedUser }) => {\r\n\r\n    const [edit, setEdit] = useState(0)\r\n\r\n    const filtered = DB.users.filter(user => user.name !== feedUser.name ? false : user)\r\n\r\n    const [name, setName] = useState(feedUser.name)\r\n    const [birthday, setBirthday] = useState(feedUser.birthday)\r\n    const [gender, setGender] = useState(feedUser.gender)\r\n    const [password, setPassword] = useState(feedUser.password)\r\n    const [phone, setPhone] = useState(feedUser.phone)\r\n    const [email, setEmail] = useState(feedUser.email)\r\n\r\n    const changeData = () => {\r\n        return new Promise((resolve, reject) => {\r\n            filtered.forEach(user => {\r\n                if (name) {\r\n                    if (!name || +name) reject(alert('Имя некорректно'))\r\n                    else user.name = name\r\n                }\r\n                if (birthday) user.birthday = birthday\r\n                if (gender) {\r\n                    if (gender === null) setGender('Пол не выбран')\r\n                    else user.gender = gender\r\n                }\r\n                if (password) {\r\n                    if (password.length > 8) user.password = password\r\n                    else reject(alert('Некорректный пароль'))\r\n                }\r\n                if (phone) {\r\n                    if (phone.length === 13) user.phone = phone\r\n                    else reject(alert('Некорректный номер телефона'))\r\n                }\r\n                if (email) {\r\n                    if (reg.test(email)) user.email = email;\r\n                    else reject(alert('Почта некорректна'))\r\n                }\r\n                resolve()\r\n            })\r\n        }).then(() => {\r\n            localStorage.setItem('database', JSON.stringify(DB))\r\n            setEdit(0)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Box style={{ width: '70%' }}>\r\n            <Paper elevation={1} className='paper' key={feedUser.name} >\r\n                <div>\r\n                    <Typography variant=\"h3\" component=\"div\" gutterBottom className='title'>\r\n                        Основная информация\r\n                    </Typography>\r\n\r\n                    <div className='info'>\r\n                        <Box display='flex' alignItems='center' justifyContent='flex-start' className='box'>\r\n                            <Typography variant=\"overline\" display=\"block\" gutterBottom className='class'>\r\n                                Имя:\r\n                            </Typography>\r\n                            <div className='user-data' onClick={() => setEdit(1)}>\r\n                                {\r\n                                    edit === 1 ?\r\n                                        <Input label=\"Standard\" value={name} onChange={(event) => setName(event.target.value)} />\r\n                                        :\r\n                                        <Typography variant=\"h6\" gutterBottom component=\"div\" key={name}>\r\n                                            {\r\n                                                name ?\r\n                                                    name\r\n                                                    :\r\n                                                    <Alert variant=\"filled\" severity=\"error\" className='alert'>Имя не указано</Alert>\r\n                                            }\r\n                                        </Typography>\r\n                                }\r\n\r\n                                {\r\n                                    edit === 1 ?\r\n                                        <SaveIcon onClick={changeData} onChange={() => setEdit(0)} />\r\n                                        :\r\n                                        <SettingsIcon className='icon' />\r\n                                }\r\n                            </div>\r\n                        </Box>\r\n\r\n                        <Box display='flex' alignItems='center' justifyContent='flex-start' className='box'>\r\n                            <Typography variant=\"overline\" display=\"block\" gutterBottom className='class'>\r\n                                Дата рождения:\r\n                            </Typography>\r\n                            <div className='user-data' onClick={() => setEdit(2)}>\r\n                                {\r\n                                    edit === 2 ?\r\n                                        <Input label=\"Standard\" type='date' value={birthday} onChange={(event) => setBirthday(event.target.value)} />\r\n                                        :\r\n                                        <Typography variant=\"h6\" gutterBottom component=\"div\" key={birthday}>\r\n                                            {\r\n                                                birthday ?\r\n                                                    birthday\r\n                                                    :\r\n                                                    <Alert variant=\"filled\" severity=\"warning\" className='alert'>Дата рождения не указано</Alert>\r\n                                            }\r\n                                        </Typography>\r\n                                }\r\n\r\n                                {\r\n                                    edit === 2 ?\r\n                                        <SaveIcon onClick={changeData} onChange={() => setEdit(0)} />\r\n                                        :\r\n                                        <SettingsIcon className='icon' />\r\n                                }\r\n                            </div>\r\n                        </Box>\r\n\r\n                        <Box display='flex' alignItems='center' justifyContent='flex-start' className='box'>\r\n                            <Typography variant=\"overline\" display=\"block\" gutterBottom className='class'>\r\n                                Пол:\r\n                            </Typography>\r\n                            <div className='user-data' onClick={() => setEdit(3)}>\r\n                                {\r\n                                    edit === 3 ?\r\n                                        <Input label=\"Standard\" value={gender} onChange={(event) => setGender(event.target.value)} />\r\n                                        :\r\n                                        <Typography variant=\"h6\" gutterBottom component=\"div\" key={gender}>\r\n                                            {\r\n                                                gender ?\r\n                                                    gender\r\n                                                    :\r\n                                                    <Alert variant=\"filled\" severity=\"warning\" className='alert'>Пол не указан</Alert>\r\n                                            }\r\n                                        </Typography>\r\n                                }\r\n\r\n                                {\r\n                                    edit === 3 ?\r\n                                        <SaveIcon onClick={changeData} onChange={() => setEdit(0)} />\r\n                                        :\r\n                                        <SettingsIcon className='icon' />\r\n                                }\r\n                            </div>\r\n                        </Box>\r\n\r\n                        <Box display='flex' alignItems='center' justifyContent='flex-start' className='box'>\r\n                            <Typography variant=\"overline\" display=\"block\" gutterBottom className='class'>\r\n                                Пароль:\r\n                            </Typography>\r\n                            <div className='user-data' onClick={() => setEdit(4)}>\r\n                                {\r\n                                    edit === 4 ?\r\n                                        <Input label=\"Standard\" value={password} onChange={(event) => setPassword(event.target.value)} />\r\n                                        :\r\n                                        <Typography variant=\"h6\" gutterBottom component=\"div\" key={password}>\r\n                                            {\r\n                                                password ?\r\n                                                    password\r\n                                                    :\r\n                                                    <Alert variant=\"filled\" severity=\"error\" className='alert'>Пароль не указан</Alert>\r\n                                            }\r\n                                        </Typography>\r\n                                }\r\n\r\n                                {\r\n                                    edit === 4 ?\r\n                                        <SaveIcon onClick={changeData} onChange={() => setEdit(0)} />\r\n                                        :\r\n                                        <SettingsIcon className='icon' />\r\n                                }\r\n                            </div>\r\n                        </Box>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <Typography variant=\"h3\" component=\"div\" gutterBottom className='title'>\r\n                            Связь с пользователем\r\n                        </Typography>\r\n\r\n                        <div className='info'>\r\n                            <Box display='flex' alignItems='center' justifyContent='flex-start' className='box'>\r\n                                <Typography variant=\"overline\" display=\"block\" gutterBottom className='class'>\r\n                                    Телефон:\r\n                                </Typography>\r\n                                <div className='user-data' onClick={() => setEdit(5)}>\r\n                                    {\r\n                                        edit === 5 ?\r\n                                            <Input label=\"Standard\" value={phone} onChange={(event) => setPhone(event.target.value)} />\r\n                                            :\r\n                                            <Typography variant=\"h6\" gutterBottom component=\"div\" key={phone}>\r\n                                                {\r\n                                                    phone ?\r\n                                                        phone\r\n                                                        :\r\n                                                        <Alert variant=\"filled\" severity=\"warning\" className='alert'>Телефон не указан</Alert>\r\n                                                }\r\n                                            </Typography>\r\n                                    }\r\n\r\n                                    {\r\n                                        edit === 5 ?\r\n                                            <SaveIcon onClick={changeData} onChange={() => setEdit(0)} />\r\n                                            :\r\n                                            <SettingsIcon className='icon' />\r\n                                    }\r\n                                </div>\r\n                            </Box>\r\n\r\n                            <Box display='flex' alignItems='center' justifyContent='flex-start' className='box'>\r\n                                <Typography variant=\"overline\" display=\"block\" gutterBottom className='class'>\r\n                                    Почта:\r\n                                </Typography>\r\n                                <div className='user-data' onClick={() => setEdit(6)}>\r\n                                    {\r\n                                        edit === 6 ?\r\n                                            <Input label=\"Standard\" value={email} onChange={(event) => setEmail(event.target.value)} />\r\n                                            :\r\n                                            <Typography variant=\"h6\" gutterBottom component=\"div\" key={email}>\r\n                                                {\r\n                                                    email ?\r\n                                                        email\r\n                                                        :\r\n                                                        <Alert variant=\"filled\" severity=\"error\" className='alert'>Почта не указана</Alert>\r\n                                                }\r\n                                            </Typography>\r\n                                    }\r\n\r\n                                    {\r\n                                        edit === 6 ?\r\n                                            <SaveIcon onClick={changeData} onChange={() => setEdit(0)} />\r\n                                            :\r\n                                            <SettingsIcon className='icon' />\r\n                                    }\r\n                                </div>\r\n                            </Box>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Paper>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Info;","import React, { useState } from 'react';\r\nimport { Box } from '@mui/system';\r\nimport User from './user';\r\nimport Info from './info';\r\n\r\nconst Profile = ({ feedUser }) => {\r\n    const [edit] = useState(false)\r\n\r\n    return (\r\n        <Box display=\"flex\" justifyContent=\"center\" style={{ margin: 8, width: '100%' }}>\r\n            <User edit={edit} feedUser={feedUser} />\r\n            <Info feedUser={feedUser} />\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Box,\r\n    Container,\r\n} from '@material-ui/core';\r\nimport { Redirect } from 'react-router-dom';\r\nimport FeedPost from './posts/posts';\r\nimport FeedHeader from './feed-header/feed-header';\r\nimport { FeedPush } from '../services/services';\r\nimport PostCreate from './posts/posts-create';\r\nimport Profile from './profile/profile';\r\nimport { DB } from '../services/services';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\n\r\nconst Feed = () => {\r\n    const [userId, setUserId] = useState(JSON.parse(localStorage.getItem('id')))\r\n    const [token, setToken] = useState(localStorage.getItem('auth_token'))\r\n    const [search, setSearch] = useState('')\r\n    const [posts, setPosts] = useState([])\r\n\r\n    let findUser = DB.users.find(user => user.id === userId)\r\n    const [feedUser] = useState(findUser)\r\n\r\n    useEffect(() => {\r\n        FeedPush()\r\n            .then((data) => {\r\n                setPosts(JSON.parse(data))\r\n            })\r\n    }, [])\r\n\r\n    const findPosts = posts.filter(post => {\r\n        return post.title.toLowerCase().includes(search.toLocaleLowerCase())\r\n    })\r\n\r\n    if (token) {\r\n        return (\r\n            <Box display=\"flex\" flexWrap=\"wrap\" justifyContent=\"flex-start\">\r\n                <BrowserRouter basename='test_form/feed'>\r\n                    <Switch>\r\n                        <Route path='/posts' exact>\r\n                            <FeedHeader setToken={setToken} search={search} setSearch={setSearch} setUserId={setUserId} name={feedUser.name} />\r\n                            <Container>\r\n                                <PostCreate posts={posts} setPosts={setPosts} />\r\n                                <FeedPost posts={posts} setPosts={setPosts} findPosts={findPosts} />\r\n                            </Container>\r\n                        </Route>\r\n                        <Route path='/profile'>\r\n                            <Profile feedUser={feedUser} />\r\n                        </Route>\r\n                    </Switch>\r\n                </BrowserRouter>\r\n\r\n            </Box>\r\n        )\r\n    } else return Redirect('/')\r\n}\r\n\r\nexport default Feed;","import React, { useState } from 'react';\r\nimport Login from './login';\r\nimport Register from './register';\r\nimport Feed from '../feed/feed';\r\nimport './form.scss';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\n\r\n\r\nconst Form = () => {\r\n\r\n  const [nickname, setNickname] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n\r\n  const [disabled, setDisabled] = useState(false)\r\n  const [show, setShow] = useState(false)\r\n  const [buttonStyle, setButtonStyle] = useState(0);\r\n\r\n  const [errorName, setErrorName] = useState(false)\r\n  const [errorEmail, setErrorEmail] = useState(false)\r\n  const [errorPassword, setErrorPassword] = useState(false)\r\n  const [errorConfirmPassword, setErrorConfirmPassword] = useState(false)\r\n  const [helperTextName, setHelperTextName] = useState('')\r\n  const [helperTextEmail, setHelperTextEmail] = useState('')\r\n  const [helperTextPassword, setHelperTextPassword] = useState('')\r\n  const [helperConfirmPassword, setHelperTextConfirmPassword] = useState('')\r\n\r\n  const targetName = (event) => setNickname(event.target.value)\r\n  const targetEmail = (event) => setEmail(event.target.value)\r\n  const targetPassword = (event) => setPassword(event.target.value)\r\n  const targetConfirmPassword = (event) => setConfirmPassword(event.target.value)\r\n\r\n  const checkName = error => text => {\r\n    setErrorName(error)\r\n    setHelperTextName(text)\r\n  }\r\n  const checkEmail = error => text => {\r\n    setErrorEmail(error)\r\n    setHelperTextEmail(text)\r\n  }\r\n  const checkPassword = error => text => {\r\n    setErrorPassword(error)\r\n    setHelperTextPassword(text)\r\n  }\r\n  const checkConfirmPassword = error => text => {\r\n    setErrorConfirmPassword(error)\r\n    setHelperTextConfirmPassword(text)\r\n  }\r\n\r\n  const showPassword = () => {\r\n    if (show === true) setShow(false)\r\n    else setShow(true)\r\n  }\r\n\r\n  const clearType = () => {\r\n    checkName()()\r\n    checkEmail()()\r\n    checkPassword()()\r\n    checkConfirmPassword()()\r\n    setButtonStyle(0)\r\n  }\r\n  const clear = () => {\r\n    setNickname('');\r\n    setEmail('');\r\n    setPassword('');\r\n    setConfirmPassword('');\r\n  }\r\n\r\n  return (\r\n    <div style={{ margin: -8 }}>\r\n      <BrowserRouter basename='/test_form'>\r\n        <Switch>\r\n          <Route path='/' exact>\r\n            <Login\r\n              nickname={nickname} targetName={targetName}\r\n              password={password} targetPassword={targetPassword}\r\n              disabled={disabled} setDisabled={setDisabled}\r\n              errorName={errorName} errorPassword={errorPassword}\r\n              helperTextName={helperTextName} helperTextPassword={helperTextPassword}\r\n              show={show} showPassword={showPassword}\r\n              buttonStyle={buttonStyle} setButtonStyle={setButtonStyle}\r\n              checkName={checkName} checkPassword={checkPassword}\r\n              clear={clear} clearType={clearType}\r\n            />\r\n          </Route>\r\n          <Route path='/register'>\r\n            <Register\r\n              nickname={nickname} targetName={targetName}\r\n              email={email} targetEmail={targetEmail}\r\n              password={password} targetPassword={targetPassword}\r\n              confirmPassword={confirmPassword} targetConfirmPassword={targetConfirmPassword}\r\n              disabled={disabled} setDisabled={setDisabled}\r\n              errorName={errorName} errorEmail={errorEmail}\r\n              errorPassword={errorPassword} errorConfirmPassword={errorConfirmPassword}\r\n              helperTextName={helperTextName} helperTextEmail={helperTextEmail}\r\n              helperTextPassword={helperTextPassword} helperConfirmPassword={helperConfirmPassword}\r\n              checkName={checkName} checkEmail={checkEmail}\r\n              checkPassword={checkPassword} checkConfirmPassword={checkConfirmPassword}\r\n              show={show} showPassword={showPassword}\r\n              buttonStyle={buttonStyle} setButtonStyle={setButtonStyle}\r\n              clear={clear} clearType={clearType}\r\n            />\r\n          </Route>\r\n          <Route path='/feed'><Feed /></Route>\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Form;","export const dataBase = {\r\n    users: []\r\n}","import React, { useEffect } from 'react';\r\nimport Form from './form/form'\r\nimport { dataBase } from './database/database';\r\n\r\nconst App = () => {\r\n    useEffect(() => {\r\n        const DB = localStorage.getItem('database')\r\n\r\n        if (!DB) {\r\n            localStorage.setItem('database', JSON.stringify(dataBase))\r\n        }\r\n    }, [])\r\n\r\n    return <Form />\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}