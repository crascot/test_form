{"version":3,"sources":["form/styles/styles.js","form/login.js","services/services.js","form/register.js","feed/feed-card/pagination/pagination.jsx","feed/feed-card/feed-card.jsx","feed/feed-header/feed-header.jsx","feed/feed.jsx","form/form.js","database/database.js","App.js","index.js"],"names":["useStyles","makeStyles","body","margin","paddingBottom","borderTop","width","marginTop","register","textDecoration","color","hide","display","Login","nickname","targetName","password","targetPassword","disabled","setDisabled","errorName","errorPassword","helperTextName","helperTextPassword","checkName","checkPassword","clear","clearType","classes","useState","setHide","redirect","setRedirect","click","setClick","useEffect","length","Container","maxWidth","Card","className","Grid","container","direction","justify","Typography","variant","to","onClick","style","Button","TextField","label","value","onChange","type","error","helperText","alignItems","id","size","userName","userPassword","DB","JSON","parse","localStorage","getItem","Promise","resolve","reject","setTimeout","users","find","user","name","alert","SignIn","then","setItem","catch","props","finally","CircularProgress","Register","email","targetEmail","confirmPassword","targetConfirmPassword","errorEmail","errorConfirmPassword","helperTextEmail","helperConfirmPassword","checkEmail","checkConfirmPassword","test","userEmail","stringify","push","CheckIn","pagination","flexWrap","justifyContent","num","boxShadow","Pagination","cardsLength","totalCards","paginate","pageNumbers","i","Math","ceil","map","number","block","card","minWidth","icon","marginLeft","cursor","paddingTop","save","FeedCard","cards","setCards","edit","setEdit","valueTitle","setValueTitle","valueBody","setValueBody","currentPage","setCurrentPage","lastCardIndex","firstCardsIndex","Box","filter","el","CardContent","e","target","fullWidth","multiline","gutterBottom","component","title","newCard","item","saveCard","slice","pageNumber","backgroundColor","padding","center","textAlign","FeedHeader","setToken","anchorEl","setAnchorEl","open","Boolean","handleClose","removeItem","Alert","severity","basename","textTransform","aria-controls","aria-haspopup","aria-expanded","undefined","event","currentTarget","Menu","onClose","MenuListProps","MenuItem","header","marginRight","footer","Feed","token","fetch","response","json","data","Redirect","Form","setNickname","setEmail","setPassword","setConfirmPassword","setErrorName","setErrorEmail","setErrorPassword","setErrorConfirmPassword","setHelperTextName","setHelperTextEmail","setHelperTextPassword","setHelperTextConfirmPassword","text","path","exact","dataBase","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.16703916.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core';\r\n\r\n\r\nexport const useStyles = makeStyles({\r\n    body: {\r\n      margin: '20px 0',\r\n      paddingBottom: 5,\r\n      borderTop: '3px solid #0dcaf0',\r\n  \r\n      '& *': {\r\n        width: '100%',\r\n        marginTop: 7,\r\n      },\r\n    },\r\n    register: {\r\n      '& *': {\r\n        textDecoration: 'none',\r\n        color: 'inherit',\r\n      }\r\n    },\r\n    hide: {\r\n      display: 'none',\r\n      margin: 30,\r\n    },\r\n  })","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n  Card,\r\n  CircularProgress,\r\n  TextField,\r\n  Container\r\n} from '@material-ui/core';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { useStyles } from './styles/styles';\r\nimport { SignIn } from '../services/services';\r\n\r\n\r\nconst Login = ({\r\n  nickname, targetName,\r\n  password, targetPassword,\r\n  disabled, setDisabled,\r\n  errorName, errorPassword,\r\n  helperTextName, helperTextPassword,\r\n  checkName, checkPassword,\r\n  clear, clearType }) => {\r\n\r\n  const classes = useStyles()\r\n\r\n  const [hide, setHide] = useState(classes.hide)\r\n  const [redirect, setRedirect] = useState('')\r\n  const [click, setClick] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (click === true) {\r\n      if (!nickname) checkName(true)('Пожалуйста введите ваше имя')\r\n      else if (+nickname) checkName(true)('Имя не может состоять из цифр')\r\n      else checkName()()\r\n\r\n      if (password.length < 8) checkPassword(true)('Пароль слишкой короткий')\r\n      else checkPassword()()\r\n    }\r\n  })\r\n\r\n  const handleSubmit = () => {\r\n    setClick(true);\r\n    setDisabled(true);\r\n    setHide(null);\r\n    SignIn(nickname, password)\r\n      .then(() => {\r\n        localStorage.setItem('auth_token', true)\r\n        setRedirect('/feed')\r\n        clear()\r\n      }).catch((props) => {\r\n        switch (props) {\r\n          case nickname:\r\n            if (nickname === 0) checkName(true)('Пожалуйста введите ваше имя')\r\n            break;\r\n          case password:\r\n            checkPassword(true)('Пароль слишкой короткий')\r\n            break;\r\n\r\n          // no default\r\n        }\r\n      })\r\n      .finally(() => {\r\n        setDisabled(false);\r\n        setHide(classes.hide);\r\n      })\r\n  }\r\n\r\n  return (\r\n    <Container maxWidth='sm'>\r\n      <Card className='form'>\r\n        <Grid className='form-register head' container direction=\"row\" justify=\"space-between\">\r\n          <Typography variant='h5'>Войти в систему</Typography>\r\n          <Typography variant='h5'>или</Typography>\r\n          <Link to='/register' onClick={clear} style={{ textDecoration: 'none' }}><Button className={classes.register} onClick={clearType} disabled={disabled} variant=\"outlined\" color=\"primary\">Зарегистриговаться</Button></Link>\r\n        </Grid>\r\n        <Grid className={`form-register ${classes.body}`} container>\r\n          <TextField label=\"Введите имя\" value={nickname} onChange={targetName} disabled={disabled} type='text' error={errorName} helperText={helperTextName} />\r\n          <TextField label=\"Введите пароль\" value={password} onChange={targetPassword} disabled={disabled} type='password' error={errorPassword} helperText={helperTextPassword} />\r\n        </Grid>\r\n        <Grid className='form-register footer' container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\r\n          <Button id='login' size=\"small\" disabled={disabled} variant=\"contained\" onClick={handleSubmit} type='submit'><Redirect to={redirect} />Войти</Button>\r\n          <CircularProgress id='loader' className={`${hide} + visible`} />\r\n          <Button onClick={clear} type='submit' disabled={disabled}>Очистить</Button>\r\n        </Grid>\r\n      </Card>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Login;","export function SignIn(userName, userPassword) {\r\n\r\n    let DB = JSON.parse(localStorage.getItem('database'))\r\n\r\n    return new Promise((resolve, reject) => {\r\n        if (!userName || +userName) {\r\n            reject(userName)\r\n        } else if (!userPassword || userPassword.length < 8) {\r\n            reject(userPassword)\r\n        } else {\r\n            setTimeout(() => {\r\n                let findUser = DB.users.find(user => user.name === userName && user.password === userPassword)\r\n\r\n                if (findUser) {\r\n                    resolve()\r\n                }\r\n                else {\r\n                    reject(alert('Данного пользователя не существует или вы неправильно ввели свой пароль'))\r\n                }\r\n            }, 3000);\r\n        }\r\n    })\r\n}\r\n\r\nexport function CheckIn(userName, userEmail, userPassword, confirmPassword) {\r\n    return new Promise((resolve, reject) => {\r\n        const reg = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/iu;\r\n        let user = {\r\n            name: userName,\r\n            email: userEmail,\r\n            password: userPassword\r\n        }\r\n\r\n        if (!userName || +userName) {\r\n            reject(userName)\r\n        } else if (!userEmail || !reg.test(userEmail)) {\r\n            reject(userEmail)\r\n        } else if (!userPassword || userPassword.length < 8) {\r\n            reject(userPassword)\r\n        } else if (userPassword !== confirmPassword) {\r\n            reject(confirmPassword)\r\n        } else {\r\n            setTimeout(() => {\r\n                resolve(user)\r\n            }, 3000);\r\n        }\r\n    }).then((user) => {\r\n        return new Promise((resolve, reject) => {\r\n            let DB = JSON.parse(localStorage.getItem('database'))\r\n            let duplicate = DB.users.find(user => user.email === userEmail)\r\n\r\n            if (duplicate) {\r\n                reject(alert('Данная почта занята'))\r\n            }\r\n            else {\r\n                localStorage.setItem('database', JSON.stringify(user))\r\n                DB.users.push(user)\r\n                localStorage.setItem('database', JSON.stringify(DB))\r\n                resolve()\r\n            }\r\n        })\r\n    })\r\n}\r\n\r\nexport function FeedPush() {\r\n    return new Promise((resolve) => {\r\n        fetch('https://jsonplaceholder.typicode.com/posts')\r\n            .then(response => response.json())\r\n            .then(json => resolve(JSON.stringify(json)))\r\n    })\r\n}","import React, { useEffect, useState } from 'react';\r\nimport {\r\n    Button,\r\n    Card,\r\n    Grid,\r\n    Typography,\r\n    CircularProgress,\r\n    TextField,\r\n    Container\r\n} from '@material-ui/core';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { useStyles } from './styles/styles';\r\nimport { CheckIn } from '../services/services';\r\n\r\n\r\nconst Register = ({\r\n    nickname, targetName,\r\n    email, targetEmail,\r\n    password, targetPassword,\r\n    confirmPassword, targetConfirmPassword,\r\n    disabled, setDisabled,\r\n    errorName, errorEmail,\r\n    errorPassword, errorConfirmPassword,\r\n    helperTextName, helperTextEmail,\r\n    helperTextPassword, helperConfirmPassword,\r\n    checkName, checkEmail, checkPassword, checkConfirmPassword,\r\n    clear, clearType }) => {\r\n\r\n    const classes = useStyles()\r\n\r\n    const [hide, setHide] = useState(classes.hide)\r\n    const [redirect, setRedirect] = useState('/register')\r\n    const [click, setClick] = useState(false)\r\n\r\n    useEffect(() => {\r\n        const reg = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/iu;\r\n\r\n        if (click === true) {\r\n            if (!nickname) checkName(true)('Пожалуйста введите ваше имя')\r\n            else if (+nickname) checkName(true)('Имя не может состоять из цифр')\r\n            else checkName()()\r\n\r\n            if (!email || !reg.test(email)) checkEmail(true)('Почта некорректна')\r\n            else checkEmail()()\r\n\r\n            if (password.length < 8) checkPassword(true)('Пароль слишкой короткий')\r\n            else checkPassword()()\r\n\r\n            if (password !== confirmPassword) checkConfirmPassword(true)('Пароли не совпадают')\r\n            else checkConfirmPassword()()\r\n        }\r\n    })\r\n\r\n    const handleSubmit = () => {\r\n        setClick(true);\r\n        setDisabled(true);\r\n        setHide(null);\r\n        CheckIn(nickname, email, password, confirmPassword)\r\n            .then(() => {\r\n                localStorage.setItem('auth_token', true)\r\n                setRedirect('/feed')\r\n                clear()\r\n            }).catch((props) => {\r\n                switch (props) {\r\n                    case nickname:\r\n                        if (nickname === 0) checkName(true)('Пожалуйста введите ваше имя')\r\n                        break;\r\n                    case email:\r\n                        checkEmail()('Почта некорректна')\r\n                        break;\r\n                    case password:\r\n                        if (password !== confirmPassword) {\r\n                            checkPassword(true)('Пароль слишкой короткий')\r\n                            checkConfirmPassword(true)('Пароли не совпадают')\r\n                        }\r\n\r\n                    // no default\r\n                }\r\n            })\r\n            .finally(() => {\r\n                setDisabled(false);\r\n                setHide(classes.hide);\r\n            })\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth='sm'>\r\n            <Card className='form'>\r\n                <Grid className='form-register head' container direction=\"row\" justify=\"space-between\">\r\n                    <Typography variant='h5'>Зарегистриговаться</Typography>\r\n                    <Typography variant='h5'>или</Typography>\r\n                    <Link to='/' onClick={clear} style={{ textDecoration: 'none' }}><Button className={classes.register} onClick={clearType} disabled={disabled} variant=\"outlined\" color=\"primary\">Войти</Button></Link>\r\n                </Grid>\r\n                <Grid className={`form-register ${classes.body}`} container>\r\n                    <TextField label=\"Введите имя\" value={nickname} onChange={targetName} disabled={disabled} type='text' error={errorName} helperText={helperTextName} />\r\n                    <TextField label=\"Введите вашу почту\" value={email} onChange={targetEmail} disabled={disabled} type='email' error={errorEmail} helperText={helperTextEmail} />\r\n                    <TextField label=\"Придумайте пароль\" value={password} onChange={targetPassword} disabled={disabled} type='password' error={errorPassword} helperText={helperTextPassword} />\r\n                    <TextField label=\"Подтвердите пароль\" value={confirmPassword} onChange={targetConfirmPassword} disabled={disabled} type='password' error={errorConfirmPassword} helperText={helperConfirmPassword} />\r\n                </Grid>\r\n                <Grid className='form-register footer' container direction=\"row\" justify=\"space-between\">\r\n                    <Button id='register' size=\"small\" disabled={disabled} variant=\"contained\" onClick={handleSubmit} type='submit' ><Redirect to={redirect} />Зарегистриговаться</Button >\r\n                    <CircularProgress id='loader' className={hide} />\r\n                    <Button onClick={clear} disabled={disabled} >Очистить</Button>\r\n                </Grid>\r\n            </Card>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    pagination: {\r\n        width: '100%',\r\n        marginTop: '2rem',\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'center',\r\n    },\r\n    num: {\r\n        width: 30,\r\n        margin: '10px 3px',\r\n        boxShadow: \"0px 2px 1px -1px rgb(0 0 0 / 20%), 0px 1px 1px 0px rgb(0 0 0 / 14%), 0px 1px 3px 0px rgb(0 0 0 / 12%)\"\r\n    }\r\n});\r\n\r\nconst Pagination = ({ cardsLength, totalCards, paginate }) => {\r\n    const classes = useStyles();\r\n\r\n    const pageNumbers = []\r\n    for (let i = 1; i <= Math.ceil(totalCards / cardsLength); i++) {\r\n        pageNumbers.push(i)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.pagination}>\r\n            {\r\n                pageNumbers.map(number => (\r\n                    <Button onClick={() => paginate(number)}\r\n                        className={classes.num}\r\n                        size=\"small\"\r\n                        key={number}\r\n                    >\r\n                        {number}\r\n                    </Button>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pagination;","import React, { useState } from 'react';\r\nimport {\r\n    Card,\r\n    CardContent,\r\n    Typography,\r\n    TextField,\r\n    Box,\r\n    Button,\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport HighlightOff from '@material-ui/icons/HighlightOff';\r\nimport Pagination from '../feed-card/pagination/pagination';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    block: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'center',\r\n    },\r\n    card: {\r\n        minWidth: 280,\r\n        maxWidth: 280,\r\n        marginTop: '2rem',\r\n        margin: '0 14px',\r\n    },\r\n    icon: {\r\n        marginTop: '9px',\r\n        marginLeft: '88%',\r\n        cursor: 'pointer',\r\n    },\r\n    body: {\r\n        borderTop: '3px solid #0dcaf0',\r\n        paddingTop: 4\r\n    },\r\n    save: {\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n        alignItems: 'flex-end',\r\n        marginTop: 5,\r\n    },\r\n    pagination: {\r\n        marginTop: '2rem',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n    }\r\n});\r\n\r\nconst FeedCard = ({ cards, setCards }) => {\r\n    const classes = useStyles();\r\n\r\n    const [edit, setEdit] = useState(null)\r\n    const [valueTitle, setValueTitle] = useState('')\r\n    const [valueBody, setValueBody] = useState('')\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n\r\n    let cardsLength = 8\r\n    const lastCardIndex = currentPage * cardsLength\r\n    const firstCardsIndex = lastCardIndex - cardsLength\r\n\r\n    const deleteCard = (id) => {\r\n        setCards(cards.filter((el) => el.id !== id))\r\n    }\r\n    const editCard = (id, title, body) => {\r\n        setEdit(id)\r\n        setValueTitle(title)\r\n        setValueBody(body)\r\n    }\r\n    const saveCard = (id) => {\r\n        let newCard = cards.map(item => {\r\n            if (item.id === id) {\r\n                item.title = valueTitle\r\n                item.body = valueBody\r\n            }\r\n            return item\r\n        })\r\n        setCards(newCard)\r\n        setEdit(null)\r\n    }\r\n\r\n    const paginate = pageNumber => setCurrentPage(pageNumber)\r\n\r\n    return (\r\n        <Box className={classes.block}>\r\n            {\r\n                cards.map((props) => (\r\n                    <Card className={classes.card} id={props.id} key={props.id}>\r\n                        <HighlightOff className={classes.icon} onClick={() => deleteCard(props.id)} />\r\n                        <CardContent>\r\n                            <div>\r\n                                {\r\n                                    edit === props.id ? <div>\r\n                                        <TextField value={valueTitle} onChange={(e) => setValueTitle(e.target.value)} fullWidth multiline />\r\n                                    </div>\r\n                                        :\r\n                                        <Typography\r\n                                            gutterBottom variant=\"h5\"\r\n                                            component=\"h2\"\r\n                                        >\r\n                                            {props.title}\r\n                                        </Typography>\r\n                                }\r\n                            </div>\r\n                            <div className={classes.body}>\r\n                                {\r\n                                    edit === props.id ? <div>\r\n                                        <TextField value={valueBody} onChange={(e) => setValueBody(e.target.value)} fullWidth multiline />\r\n                                    </div>\r\n                                        :\r\n                                        <Typography variant=\"body2\"\r\n                                            color=\"textSecondary\"\r\n                                            component=\"p\"\r\n                                        >\r\n                                            {props.body}\r\n                                        </Typography>\r\n                                }\r\n                            </div>\r\n                            <Typography className={classes.save} variant=\"button\">\r\n                                {\r\n                                    edit === props.id ?\r\n                                        <Button onClick={() => saveCard(props.id)} size='small'>Сохранить</Button>\r\n                                        :\r\n                                        <Button onClick={() => editCard(props.id, props.title, props.body)}>Редактировать</Button>\r\n                                }\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </Card>\r\n                )).slice(firstCardsIndex, lastCardIndex)\r\n            }\r\n            <Pagination\r\n                cardsLength={cardsLength}\r\n                totalCards={cards.length}\r\n                paginate={paginate}\r\n            />\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default FeedCard;","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    Box,\r\n    Typography,\r\n    Button,\r\n    TextField\r\n} from '@material-ui/core';\r\nimport {\r\n    Alert,\r\n    Menu,\r\n    MenuItem\r\n} from '@mui/material';\r\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles({\r\n    block: {\r\n        width: '100%',\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        backgroundColor: '#0dcaf0',\r\n        margin: '0 -15xp',\r\n        padding: '15px'\r\n    },\r\n    center: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'space-between',\r\n        width: '30%',\r\n        textAlign: 'center'\r\n    }\r\n});\r\n\r\nconst FeedHeader = ({ setToken }) => {\r\n    const classes = useStyles();\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null)\r\n\r\n    const open = Boolean(anchorEl);\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    }\r\n    const handleClose = () => {\r\n        setAnchorEl(null)\r\n        setToken(localStorage.removeItem('auth_token'))\r\n    }\r\n\r\n    return (\r\n        <Box className={classes.block}>\r\n\r\n            <div style={{ width: '100%' }}>\r\n                <Alert severity=\"warning\" style={{ width: 'max-content', margin: '0 auto' }}>Данная часть в разработке</Alert>\r\n            </div>\r\n\r\n            <Typography variant=\"h4\">Test-Form</Typography>\r\n            <Router basename='/feed'>\r\n                <div className={classes.center}>\r\n                    <Link to={'/posts'}><Typography>Посты</Typography></Link>\r\n                    <Link to={'/countries'}><Typography>Страны</Typography></Link>\r\n                    <Link to={'/drinks'}><Typography>Напитки</Typography></Link>\r\n                </div>\r\n            </Router>\r\n            <div>\r\n                <Button\r\n                    style={{ textTransform: 'capitalize' }}\r\n                    id=\"basic-button\"\r\n                    aria-controls=\"basic-menu\"\r\n                    aria-haspopup=\"true\"\r\n                    aria-expanded={open ? 'true' : undefined}\r\n                    onClick={handleClick}\r\n                >\r\n                    <Typography variant=\"body1\">Имя пользователя</Typography>\r\n                </Button>\r\n                <Menu\r\n                    style={{ textAlign: 'center' }}\r\n                    id=\"basic-menu\"\r\n                    anchorEl={anchorEl}\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    MenuListProps={{\r\n                        'aria-labelledby': 'basic-button',\r\n                    }}\r\n                >\r\n                    <MenuItem onClick={handleClose}>Выйти</MenuItem>\r\n                </Menu>\r\n            </div>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default FeedHeader;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Typography,\r\n    Box,\r\n    Container,\r\n} from '@material-ui/core';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FeedCard from './feed-card/feed-card';\r\nimport FeedHeader from './feed-header/feed-header';\r\nimport { FeedPush } from '../services/services';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    header: {\r\n        marginLeft: '0',\r\n        marginRight: '0',\r\n    },\r\n    footer: {\r\n        maxWidth: '100%',\r\n        width: '100%',\r\n        marginTop: '2rem',\r\n    },\r\n});\r\n\r\nconst Feed = () => {\r\n    const classes = useStyles();\r\n\r\n    const [cards, setCards] = useState([])\r\n    const [token, setToken] = useState(localStorage.getItem('auth_token'))\r\n    useEffect(() => {\r\n        FeedPush()\r\n            .then((data) => {\r\n                setCards(JSON.parse(data))\r\n            })\r\n    }, [])\r\n\r\n    if (token) {\r\n        return (\r\n            <Box display=\"flex\" flexWrap=\"wrap\" justifyContent=\"flex-start\">\r\n                <FeedHeader setToken={setToken} />\r\n                <Container>\r\n                    <FeedCard cards={cards} setCards={setCards} />\r\n                    <Box className={classes.footer}><Typography>footer</Typography></Box>\r\n                </Container>\r\n            </Box>\r\n        )\r\n    } else return Redirect('/')\r\n}\r\n\r\nexport default Feed;","import React, { useState } from 'react';\r\nimport Login from './login';\r\nimport Register from './register';\r\nimport Feed from '../feed/feed';\r\nimport './form.scss';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\n\r\n\r\nconst Form = () => {\r\n\r\n  const [nickname, setNickname] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n\r\n  const [disabled, setDisabled] = useState(false)\r\n\r\n  const [errorName, setErrorName] = useState(false)\r\n  const [errorEmail, setErrorEmail] = useState(false)\r\n  const [errorPassword, setErrorPassword] = useState(false)\r\n  const [errorConfirmPassword, setErrorConfirmPassword] = useState(false)\r\n  const [helperTextName, setHelperTextName] = useState('')\r\n  const [helperTextEmail, setHelperTextEmail] = useState('')\r\n  const [helperTextPassword, setHelperTextPassword] = useState('')\r\n  const [helperConfirmPassword, setHelperTextConfirmPassword] = useState('')\r\n\r\n  function targetName(event) {\r\n    setNickname(event.target.value)\r\n  }\r\n  function targetEmail(event) {\r\n    setEmail(event.target.value)\r\n  }\r\n  function targetPassword(event) {\r\n    setPassword(event.target.value)\r\n  }\r\n  function targetConfirmPassword(event) {\r\n    setConfirmPassword(event.target.value)\r\n  }\r\n\r\n  const checkName = error => text => {\r\n    setErrorName(error)\r\n    setHelperTextName(text)\r\n  }\r\n  const checkEmail = error => text => {\r\n    setErrorEmail(error)\r\n    setHelperTextEmail(text)\r\n  }\r\n  const checkPassword = error => text => {\r\n    setErrorPassword(error)\r\n    setHelperTextPassword(text)\r\n  }\r\n  const checkConfirmPassword = error => text => {\r\n    setErrorConfirmPassword(error)\r\n    setHelperTextConfirmPassword(text)\r\n  }\r\n\r\n  const clearType = () => {\r\n    checkName()()\r\n    checkEmail()()\r\n    checkPassword()()\r\n    checkConfirmPassword()()\r\n  }\r\n  const clear = () => {\r\n    setNickname('');\r\n    setEmail('');\r\n    setPassword('');\r\n    setConfirmPassword('');\r\n  }\r\n\r\n  return (\r\n    <div style={{ margin: -8 }}>\r\n      <BrowserRouter basename='/test_form'>\r\n        <Switch>\r\n          <Route path='/' exact >\r\n            <Login\r\n              nickname={nickname} targetName={targetName}\r\n              password={password} targetPassword={targetPassword}\r\n              disabled={disabled} setDisabled={setDisabled}\r\n              errorName={errorName} errorPassword={errorPassword}\r\n              helperTextName={helperTextName} helperTextPassword={helperTextPassword}\r\n              checkName={checkName} checkPassword={checkPassword}\r\n              clear={clear} clearType={clearType}\r\n            />\r\n          </Route>\r\n          <Route path='/register' >\r\n            <Register\r\n              nickname={nickname} targetName={targetName}\r\n              email={email} targetEmail={targetEmail}\r\n              password={password} targetPassword={targetPassword}\r\n              confirmPassword={confirmPassword} targetConfirmPassword={targetConfirmPassword}\r\n              disabled={disabled} setDisabled={setDisabled}\r\n              errorName={errorName} errorEmail={errorEmail}\r\n              errorPassword={errorPassword} errorConfirmPassword={errorConfirmPassword}\r\n              helperTextName={helperTextName} helperTextEmail={helperTextEmail}\r\n              helperTextPassword={helperTextPassword} helperConfirmPassword={helperConfirmPassword}\r\n              checkName={checkName} checkEmail={checkEmail}\r\n              checkPassword={checkPassword} checkConfirmPassword={checkConfirmPassword}\r\n              clear={clear} clearType={clearType}\r\n            />\r\n          </Route>\r\n          <Route path='/feed' component={Feed} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Form;","export const dataBase = {\r\n    users: []\r\n}","import React, { useEffect } from 'react';\r\nimport Form from './form/form'\r\nimport { dataBase } from './database/database';\r\n\r\nconst App = () => {\r\n    useEffect(() => {\r\n        const DB = localStorage.getItem('database')\r\n\r\n        if (!DB) {\r\n            localStorage.setItem('database', JSON.stringify(dataBase))\r\n        }\r\n    }, [])\r\n\r\n    return <Form />\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}