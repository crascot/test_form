{"version":3,"sources":["form/styles/styles.js","form/login.js","services/services.js","form/register.js","feed/feed-card/pagination/pagination.jsx","feed/feed-card/feed-card.jsx","feed/feed-header/feed-header.jsx","feed/feed.jsx","form/form.js","database/database.js","App.js","index.js"],"names":["useStyles","makeStyles","body","margin","paddingBottom","borderTop","width","marginTop","register","textDecoration","color","hide","display","Login","nickname","setNickname","password","setPassword","disabled","setDisabled","errorName","setErrorName","errorPassword","setErrorPassword","helperTextName","setHelperTextName","helperTextPassword","setHelperTextPassword","classes","useState","setHide","redirect","setRedirect","click","setClick","checkName","error","text","checkPassword","useEffect","length","Container","maxWidth","Card","className","Grid","container","direction","justify","Typography","variant","Button","to","TextField","label","value","onChange","event","target","type","helperText","alignItems","id","size","onClick","userName","userPassword","DB","JSON","parse","localStorage","getItem","Promise","resolve","reject","setTimeout","users","find","user","name","alert","SignIn","then","setItem","catch","props","finally","CircularProgress","Register","email","setEmail","confirmPassword","setConfirmPassword","errorEmail","setErrorEmail","errorConfirmPassword","setErrorConfirmPassword","helperTextEmail","setHelperTextEmail","helperConfirmPassword","setHelperTextConfirmPassword","checkEmail","checkConfirmPassword","test","userEmail","stringify","push","CheckIn","pagination","flexWrap","justifyContent","num","boxShadow","Pagination","cardsLength","totalCards","paginate","pageNumbers","i","Math","ceil","map","number","block","card","minWidth","icon","marginLeft","cursor","paddingTop","save","FeedCard","cards","setCards","edit","setEdit","valueTitle","setValueTitle","valueBody","setValueBody","currentPage","setCurrentPage","lastCardIndex","firstCardsIndex","Box","filter","el","CardContent","e","fullWidth","multiline","gutterBottom","component","title","newCard","item","saveCard","slice","pageNumber","backgroundColor","padding","center","textAlign","FeedHeader","style","Alert","severity","basename","Avatar","alt","src","header","marginRight","footer","Feed","fetch","response","json","data","Redirect","Form","path","exact","dataBase","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.88255feb.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core';\r\n\r\n\r\nexport const useStyles = makeStyles({\r\n    body: {\r\n      margin: '20px 0',\r\n      paddingBottom: 5,\r\n      borderTop: '3px solid #0dcaf0',\r\n  \r\n      '& *': {\r\n        width: '100%',\r\n        marginTop: 7,\r\n      },\r\n    },\r\n    register: {\r\n      '& *': {\r\n        textDecoration: 'none',\r\n        color: 'inherit',\r\n      }\r\n    },\r\n    hide: {\r\n      display: 'none',\r\n      margin: 30,\r\n    },\r\n  })","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n  Card,\r\n  CircularProgress,\r\n  TextField,\r\n  Container\r\n} from '@material-ui/core';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { useStyles } from './styles/styles';\r\nimport { SignIn } from '../services/services';\r\n\r\n\r\nconst Login = ({\r\n  nickname, setNickname,\r\n  password, setPassword,\r\n  disabled, setDisabled,\r\n  errorName, setErrorName,\r\n  errorPassword, setErrorPassword,\r\n  helperTextName, setHelperTextName,\r\n  helperTextPassword, setHelperTextPassword }) => {\r\n\r\n  const classes = useStyles()\r\n\r\n  const [hide, setHide] = useState(classes.hide)\r\n  const [redirect, setRedirect] = useState('')\r\n  const [click, setClick] = useState(false)\r\n\r\n  const checkName = error => text => {\r\n    setErrorName(error)\r\n    setHelperTextName(text)\r\n  }\r\n  const checkPassword = error => text => {\r\n    setErrorPassword(error)\r\n    setHelperTextPassword(text)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (click === true) {\r\n      if (!nickname) checkName(true)('Пожалуйста введите ваше имя')\r\n      else if (+nickname) checkName(true)('Имя не может состоять из цифр')\r\n      else checkName()()\r\n\r\n      if (password.length < 8) checkPassword(true)('Пароль слишкой короткий')\r\n      else checkPassword()()\r\n    }\r\n  }, [nickname, password, click])\r\n\r\n  const handleSubmit = () => {\r\n    setClick(true);\r\n    setDisabled(true);\r\n    setHide(null);\r\n    SignIn(nickname, password)\r\n      .then(() => {\r\n        localStorage.setItem('auth_token', true)\r\n        setRedirect('/feed')\r\n      }).catch((props) => {\r\n        switch (props) {\r\n          case nickname:\r\n            if (nickname === 0) checkName()('Пожалуйста введите ваше имя')\r\n            else checkName()('Имя не может состоять из цифр')\r\n            break;\r\n          case password:\r\n            checkPassword('Пароль слишкой короткий')\r\n            break;\r\n        }\r\n      })\r\n      .finally(() => {\r\n        setDisabled(false);\r\n        setHide(classes.hide);\r\n      })\r\n  }\r\n\r\n  function targetName(event) {\r\n    setNickname(event.target.value)\r\n  }\r\n  function targetPassword(event) {\r\n    setPassword(event.target.value)\r\n  }\r\n\r\n  function Clear() {\r\n    setNickname('');\r\n    setPassword('');\r\n  }\r\n\r\n  return (\r\n    <Container maxWidth='sm'>\r\n      <Card className='form'>\r\n        <Grid className='form-register head' container direction=\"row\" justify=\"space-between\">\r\n          <Typography variant='h5'>Войти в систему</Typography>\r\n          <Typography variant='h5'>или</Typography>\r\n          <Button className={classes.register} disabled={disabled} variant=\"outlined\" color=\"primary\"><Link to='/register'>Зарегистриговаться</Link></Button>\r\n        </Grid>\r\n        <Grid className={`form-register ${classes.body}`} container>\r\n          <TextField label=\"Введите имя\" value={nickname} onChange={targetName} disabled={disabled} type='text' error={errorName} helperText={helperTextName} />\r\n          <TextField label=\"Введите пароль\" value={password} onChange={targetPassword} disabled={disabled} type='password' error={errorPassword} helperText={helperTextPassword} />\r\n        </Grid>\r\n        <Grid className='form-register footer' container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\r\n          <Button id='login' size=\"small\" disabled={disabled} variant=\"contained\" onClick={handleSubmit} type='submit'><Redirect to={redirect} />Войти</Button>\r\n          <CircularProgress id='loader' className={`${hide} + visible`} />\r\n          <Button onClick={Clear} type='submit' disabled={disabled}>Очистить</Button>\r\n        </Grid>\r\n      </Card>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Login;","export function SignIn(userName, userPassword) {\r\n\r\n    let DB = JSON.parse(localStorage.getItem('database'))\r\n\r\n    return new Promise((resolve, reject) => {\r\n        if (!userName || +userName) {\r\n            reject(userName)\r\n        } else if (!userPassword || userPassword.length < 8) {\r\n            reject(userPassword)\r\n        } else {\r\n            setTimeout(() => {\r\n                let findUser = DB.users.find(user => user.name === userName && user.password === userPassword)\r\n\r\n                if (findUser) {\r\n                    resolve()\r\n                }\r\n                else {\r\n                    reject(alert('Данного пользователя не существует или вы неправильно ввели свой пароль'))\r\n                }\r\n            }, 3000);\r\n        }\r\n    })\r\n}\r\n\r\nexport function CheckIn(userName, userEmail, userPassword, confirmPassword) {\r\n    return new Promise((resolve, reject) => {\r\n        const reg = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/iu;\r\n        let user = {\r\n            name: userName,\r\n            email: userEmail,\r\n            password: userPassword\r\n        }\r\n\r\n        if (!userName || +userName) {\r\n            reject(userName)\r\n        } else if (!userEmail || !reg.test(userEmail)) {\r\n            reject(userEmail)\r\n        } else if (!userPassword || userPassword.length < 8) {\r\n            reject(userPassword)\r\n        } else if (userPassword !== confirmPassword) {\r\n            reject(confirmPassword)\r\n        } else {\r\n            setTimeout(() => {\r\n                resolve(user)\r\n            }, 3000);\r\n        }\r\n    }).then((user) => {\r\n        return new Promise((resolve, reject) => {\r\n            let DB = JSON.parse(localStorage.getItem('database'))\r\n            let duplicate = DB.users.find(user => user.email === userEmail)\r\n\r\n            if (duplicate) {\r\n                reject(alert('Данная почта занята'))\r\n            }\r\n            else {\r\n                localStorage.setItem('database', JSON.stringify(user))\r\n                DB.users.push(user)\r\n                localStorage.setItem('database', JSON.stringify(DB))\r\n                resolve()\r\n            }\r\n        })\r\n    })\r\n}\r\n\r\nexport function FeedPush() {\r\n    return new Promise((resolve) => {\r\n        fetch('https://jsonplaceholder.typicode.com/posts')\r\n            .then(response => response.json())\r\n            .then(json => resolve(JSON.stringify(json)))\r\n    })\r\n}","import React, { useEffect, useState } from 'react';\r\nimport {\r\n    Button,\r\n    Card,\r\n    Grid,\r\n    Typography,\r\n    CircularProgress,\r\n    TextField,\r\n    Container\r\n} from '@material-ui/core';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { useStyles } from './styles/styles';\r\nimport { CheckIn } from '../services/services';\r\n\r\n\r\nconst Register = ({\r\n    nickname, setNickname,\r\n    email, setEmail,\r\n    password, setPassword,\r\n    confirmPassword, setConfirmPassword,\r\n    disabled, setDisabled,\r\n    errorName, setErrorName,\r\n    errorEmail, setErrorEmail,\r\n    errorPassword, setErrorPassword,\r\n    errorConfirmPassword, setErrorConfirmPassword,\r\n    helperTextName, setHelperTextName,\r\n    helperTextEmail, setHelperTextEmail,\r\n    helperTextPassword, setHelperTextPassword,\r\n    helperConfirmPassword, setHelperTextConfirmPassword\r\n}) => {\r\n\r\n    const classes = useStyles()\r\n\r\n    const [hide, setHide] = useState(classes.hide)\r\n    const [redirect, setRedirect] = useState('/register')\r\n\r\n    const [click, setClick] = useState(false)\r\n\r\n    const checkName = error => text => {\r\n        setErrorName(error)\r\n        setHelperTextName(text)\r\n    }\r\n    const checkEmail = error => text => {\r\n        setErrorEmail(error)\r\n        setHelperTextEmail(text)\r\n    }\r\n    const checkPassword = error => text => {\r\n        setErrorPassword(error)\r\n        setHelperTextPassword(text)\r\n    }\r\n    const checkConfirmPassword = error => text => {\r\n        setErrorConfirmPassword(error)\r\n        setHelperTextConfirmPassword(text)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const reg = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/iu;\r\n\r\n        if (click === true) {\r\n            if (!nickname) checkName(true)('Пожалуйста введите ваше имя')\r\n            else if (+nickname) checkName(true)('Имя не может состоять из цифр')\r\n            else checkName()()\r\n\r\n            if (!email || !reg.test(email)) checkEmail(true)('Почта некорректна')\r\n            else checkEmail()()\r\n\r\n            if (password.length < 8) checkPassword(true)('Пароль слишкой короткий')\r\n            else checkPassword()()\r\n\r\n            if (password !== confirmPassword) checkConfirmPassword(true)('Пароли не совпадают')\r\n            else checkConfirmPassword()()\r\n        }\r\n    }, [nickname, email, password, confirmPassword, click])\r\n\r\n    const handleSubmit = () => {\r\n        setClick(true);\r\n        setDisabled(true);\r\n        setHide(null);\r\n        CheckIn(nickname, email, password, confirmPassword)\r\n            .then(() => {\r\n                localStorage.setItem('auth_token', true)\r\n                setRedirect('/feed')\r\n            }).catch((props) => {\r\n                switch (props) {\r\n                    case nickname:\r\n                        if (nickname === 0) checkName()('Пожалуйста введите ваше имя')\r\n                        else checkName()('Имя не может состоять из цифр')\r\n                        break;\r\n                    case email:\r\n                        checkEmail()('Почта некорректна')\r\n                        break;\r\n                    case password:\r\n                        if (password !== confirmPassword) {\r\n                            checkPassword()('Пароль слишкой короткий')\r\n                            checkConfirmPassword()('Пароли не совпадают')\r\n                        }\r\n                }\r\n            })\r\n            .finally(() => {\r\n                setDisabled(false);\r\n                setHide(classes.hide);\r\n            })\r\n    }\r\n\r\n    function targetName(event) {\r\n        setNickname(event.target.value)\r\n    }\r\n    function targetEmail(event) {\r\n        setEmail(event.target.value)\r\n    }\r\n    function targetPassword(event) {\r\n        setPassword(event.target.value)\r\n    }\r\n    function targetConfirmPassword(event) {\r\n        setConfirmPassword(event.target.value)\r\n    }\r\n\r\n    function Clear() {\r\n        setNickname('');\r\n        setEmail('');\r\n        setPassword('');\r\n        setConfirmPassword('');\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth='sm'>\r\n            <Card className='form'>\r\n                <Grid className='form-register head' container direction=\"row\" justify=\"space-between\">\r\n                    <Typography variant='h5'>Зарегистриговаться</Typography>\r\n                    <Typography variant='h5'>или</Typography>\r\n                    <Button className={classes.register} disabled={disabled} variant=\"outlined\" color=\"primary\"><Link to='/'>Войти</Link></Button>\r\n                </Grid>\r\n                <Grid className={`form-register ${classes.body}`} container>\r\n                    <TextField label=\"Введите имя\" value={nickname} onChange={targetName} disabled={disabled} type='text' error={errorName} helperText={helperTextName} />\r\n                    <TextField label=\"Введите вашу почту\" value={email} onChange={targetEmail} disabled={disabled} type='email' error={errorEmail} helperText={helperTextEmail} />\r\n                    <TextField label=\"Придумайте пароль\" value={password} onChange={targetPassword} disabled={disabled} type='password' error={errorPassword} helperText={helperTextPassword} />\r\n                    <TextField label=\"Подтвердите пароль\" value={confirmPassword} onChange={targetConfirmPassword} disabled={disabled} type='password' error={errorConfirmPassword} helperText={helperConfirmPassword} />\r\n                </Grid>\r\n                <Grid className='form-register footer' container direction=\"row\" justify=\"space-between\">\r\n                    <Button id='register' size=\"small\" disabled={disabled} variant=\"contained\" onClick={handleSubmit} type='submit' ><Redirect to={redirect} />Зарегистриговаться</Button >\r\n                    <CircularProgress id='loader' className={hide} />\r\n                    <Button onClick={Clear} disabled={disabled} >Очистить</Button>\r\n                </Grid>\r\n            </Card>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    pagination: {\r\n        width: '100%',\r\n        marginTop: '2rem',\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'center',\r\n    },\r\n    num: {\r\n        width: 30,\r\n        margin: '10px 3px',\r\n        boxShadow: \"0px 2px 1px -1px rgb(0 0 0 / 20%), 0px 1px 1px 0px rgb(0 0 0 / 14%), 0px 1px 3px 0px rgb(0 0 0 / 12%)\"\r\n    }\r\n});\r\n\r\nconst Pagination = ({ cardsLength, totalCards, paginate }) => {\r\n    const classes = useStyles();\r\n\r\n    const pageNumbers = []\r\n    for (let i = 1; i <= Math.ceil(totalCards / cardsLength); i++) {\r\n        pageNumbers.push(i)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.pagination}>\r\n            {\r\n                pageNumbers.map(number => (\r\n                    <Button onClick={() => paginate(number)}\r\n                        className={classes.num}\r\n                        size=\"small\"\r\n                        key={number}\r\n                    >\r\n                        {number}\r\n                    </Button>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pagination;","import React, { useState } from 'react';\r\nimport {\r\n    Card,\r\n    CardContent,\r\n    Typography,\r\n    TextField,\r\n    Box,\r\n    Button,\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport HighlightOff from '@material-ui/icons/HighlightOff';\r\nimport Pagination from '../feed-card/pagination/pagination';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    block: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'center',\r\n    },\r\n    card: {\r\n        minWidth: 280,\r\n        maxWidth: 280,\r\n        marginTop: '2rem',\r\n        margin: '0 14px',\r\n    },\r\n    icon: {\r\n        marginTop: '9px',\r\n        marginLeft: '88%',\r\n        cursor: 'pointer',\r\n    },\r\n    body: {\r\n        borderTop: '3px solid #0dcaf0',\r\n        paddingTop: 4\r\n    },\r\n    save: {\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n        alignItems: 'flex-end',\r\n        marginTop: 5,\r\n    },\r\n    pagination: {\r\n        marginTop: '2rem',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n    }\r\n});\r\n\r\nconst FeedCard = ({ cards, setCards }) => {\r\n    const classes = useStyles();\r\n\r\n    const [edit, setEdit] = useState(null)\r\n    const [valueTitle, setValueTitle] = useState('')\r\n    const [valueBody, setValueBody] = useState('')\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n\r\n    let cardsLength = 8\r\n    const lastCardIndex = currentPage * cardsLength\r\n    const firstCardsIndex = lastCardIndex - cardsLength\r\n\r\n    const deleteCard = (id) => {\r\n        setCards(cards.filter((el) => el.id !== id))\r\n    }\r\n    const editCard = (id, title, body) => {\r\n        setEdit(id)\r\n        setValueTitle(title)\r\n        setValueBody(body)\r\n    }\r\n    const saveCard = (id) => {\r\n        let newCard = cards.map(item => {\r\n            if (item.id === id) {\r\n                item.title = valueTitle\r\n                item.body = valueBody\r\n            }\r\n            return item\r\n        })\r\n        setCards(newCard)\r\n        setEdit(null)\r\n    }\r\n\r\n    const paginate = pageNumber => setCurrentPage(pageNumber)\r\n\r\n    return (\r\n        <Box className={classes.block}>\r\n            {\r\n                cards.map((props) => (\r\n                    <Card className={classes.card} id={props.id} key={props.id}>\r\n                        <HighlightOff className={classes.icon} onClick={() => deleteCard(props.id)} />\r\n                        <CardContent>\r\n                            <div>\r\n                                {\r\n                                    edit === props.id ? <div>\r\n                                        <TextField value={valueTitle} onChange={(e) => setValueTitle(e.target.value)} fullWidth multiline />\r\n                                    </div>\r\n                                        :\r\n                                        <Typography\r\n                                            gutterBottom variant=\"h5\"\r\n                                            component=\"h2\"\r\n                                        >\r\n                                            {props.title}\r\n                                        </Typography>\r\n                                }\r\n                            </div>\r\n                            <div className={classes.body}>\r\n                                {\r\n                                    edit === props.id ? <div>\r\n                                        <TextField value={valueBody} onChange={(e) => setValueBody(e.target.value)} fullWidth multiline />\r\n                                    </div>\r\n                                        :\r\n                                        <Typography variant=\"body2\"\r\n                                            color=\"textSecondary\"\r\n                                            component=\"p\"\r\n                                        >\r\n                                            {props.body}\r\n                                        </Typography>\r\n                                }\r\n                            </div>\r\n                            <Typography className={classes.save} variant=\"button\">\r\n                                {\r\n                                    edit === props.id ?\r\n                                        <Button onClick={() => saveCard(props.id)} size='small'>Сохранить</Button>\r\n                                        :\r\n                                        <Button onClick={() => editCard(props.id, props.title, props.body)}>Редактировать</Button>\r\n                                }\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </Card>\r\n                )).slice(firstCardsIndex, lastCardIndex)\r\n            }\r\n            <Pagination\r\n                cardsLength={cardsLength}\r\n                totalCards={cards.length}\r\n                paginate={paginate}\r\n            />\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default FeedCard;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    Box,\r\n    Typography,\r\n    Avatar,\r\n} from '@material-ui/core';\r\nimport Alert from '@mui/material/Alert';\r\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles({\r\n    block: {\r\n        width: '100%',\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        backgroundColor: '#0dcaf0',\r\n        margin: '0 -15xp',\r\n        padding: '15px'\r\n    },\r\n    center: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'space-between',\r\n        width: '30%',\r\n        textAlign: 'center'\r\n    }\r\n});\r\n\r\nconst FeedHeader = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Box className={classes.block}>\r\n\r\n            <div style={{ width: '100%' }}>\r\n                <Alert severity=\"warning\" style={{ width: 'max-content', margin: '0 auto' }}>Данная часть в разработке</Alert>\r\n            </div>\r\n\r\n            <Typography>Test-Form</Typography>\r\n            <Router basename='/feed'>\r\n                <div className={classes.center}>\r\n                    <Link to={'/posts'}><Typography>Посты</Typography></Link>\r\n                    <Link to={'/countries'}><Typography>Страны</Typography></Link>\r\n                    <Link to={'/drinks'}><Typography>Напитки</Typography></Link>\r\n                </div>\r\n            </Router>\r\n            <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default FeedHeader;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Typography,\r\n    Box,\r\n    Container,\r\n} from '@material-ui/core';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FeedCard from './feed-card/feed-card';\r\nimport FeedHeader from './feed-header/feed-header';\r\nimport { FeedPush } from '../services/services';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    header: {\r\n        marginLeft: '0',\r\n        marginRight: '0',\r\n    },\r\n    footer: {\r\n        maxWidth: '100%',\r\n        width: '100%',\r\n        marginTop: '2rem',\r\n    },\r\n});\r\n\r\nconst Feed = () => {\r\n    const classes = useStyles();\r\n\r\n    const [cards, setCards] = useState([])\r\n    useEffect(() => {\r\n        FeedPush()\r\n            .then((data) => {\r\n                setCards(JSON.parse(data))\r\n            })\r\n    }, [])\r\n\r\n    if (localStorage.getItem('auth_token')) {\r\n        return (\r\n            <Box display=\"flex\" flexWrap=\"wrap\" justifyContent=\"flex-start\">\r\n                <FeedHeader />\r\n                <Container>\r\n                    <FeedCard cards={cards} setCards={setCards} />\r\n                    <Box className={classes.footer}><Typography>footer</Typography></Box>\r\n                </Container>\r\n            </Box>\r\n        )\r\n    } else {\r\n        return Redirect('/')\r\n    }\r\n}\r\n\r\nexport default Feed;","import React, { useState } from 'react';\r\nimport Login from './login';\r\nimport Register from './register';\r\nimport Feed from '../feed/feed';\r\nimport './form.scss';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\n\r\n\r\nconst Form = () => {\r\n\r\n  const [nickname, setNickname] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n\r\n  const [disabled, setDisabled] = useState(false)\r\n\r\n  const [errorName, setErrorName] = useState(false)\r\n  const [errorEmail, setErrorEmail] = useState(false)\r\n  const [errorPassword, setErrorPassword] = useState(false)\r\n  const [errorConfirmPassword, setErrorConfirmPassword] = useState(false)\r\n  const [helperTextName, setHelperTextName] = useState('')\r\n  const [helperTextEmail, setHelperTextEmail] = useState('')\r\n  const [helperTextPassword, setHelperTextPassword] = useState('')\r\n  const [helperConfirmPassword, setHelperTextConfirmPassword] = useState('')\r\n\r\n  return (\r\n    <div style={{ margin: -8 }}>\r\n      <BrowserRouter basename='/test_form'>\r\n        <Switch>\r\n          <Route path='/' exact >\r\n            <Login\r\n              nickname={nickname} setNickname={setNickname}\r\n              password={password} setPassword={setPassword}\r\n              disabled={disabled} setDisabled={setDisabled}\r\n              errorName={errorName} setErrorName={setErrorName}\r\n              errorPassword={errorPassword} setErrorPassword={setErrorPassword}\r\n              helperTextName={helperTextName} setHelperTextName={setHelperTextName}\r\n              helperTextPassword={helperTextPassword} setHelperTextPassword={setHelperTextPassword}\r\n            />\r\n          </Route>\r\n          <Route path='/register' >\r\n            <Register\r\n              nickname={nickname} setNickname={setNickname}\r\n              email={email} setEmail={setEmail}\r\n              password={password} setPassword={setPassword}\r\n              confirmPassword={confirmPassword} setConfirmPassword={setConfirmPassword}\r\n              disabled={disabled} setDisabled={setDisabled}\r\n              errorName={errorName} setErrorName={setErrorName}\r\n              errorEmail={errorEmail} setErrorEmail={setErrorEmail}\r\n              errorPassword={errorPassword} setErrorPassword={setErrorPassword}\r\n              errorConfirmPassword={errorConfirmPassword} setErrorConfirmPassword={setErrorConfirmPassword}\r\n              helperTextName={helperTextName} setHelperTextName={setHelperTextName}\r\n              helperTextEmail={helperTextEmail} setHelperTextEmail={setHelperTextEmail}\r\n              helperTextPassword={helperTextPassword} setHelperTextPassword={setHelperTextPassword}\r\n              helperConfirmPassword={helperConfirmPassword} setHelperTextConfirmPassword={setHelperTextConfirmPassword}\r\n            />\r\n          </Route>\r\n          <Route path='/feed' component={Feed} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Form;","export const dataBase = {\r\n    users: []\r\n}","import React, { useEffect } from 'react';\r\nimport Form from './form/form'\r\nimport { dataBase } from './database/database';\r\n\r\nconst App = () => {\r\n    useEffect(() => {\r\n        const DB = localStorage.getItem('database')\r\n\r\n        if (!DB) {\r\n            localStorage.setItem('database', JSON.stringify(dataBase))\r\n        }\r\n    }, [])\r\n\r\n    return <Form />\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}