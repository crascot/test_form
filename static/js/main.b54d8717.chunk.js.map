{"version":3,"sources":["form/styles/styles.js","form/login.js","services/services.js","form/register.js","feed/posts/pagination/pagination.jsx","feed/posts/posts.jsx","feed/feed-header/feed-header.jsx","feed/posts/posts-create.jsx","feed/profile/user.jsx","feed/profile/profile.jsx","feed/feed.jsx","form/form.js","database/database.js","App.js","index.js"],"names":["useStyles","makeStyles","body","margin","paddingBottom","borderTop","marginTop","width","display","alignItems","marginLeft","border","register","textDecoration","color","showPasswordButton","footer","paddingTop","hide","Login","nickname","targetName","password","targetPassword","disabled","setDisabled","errorName","errorPassword","helperTextName","helperTextPassword","checkName","checkPassword","show","showPassword","buttonStyle","setButtonStyle","clear","clearType","classes","useState","setHide","redirect","setRedirect","click","setClick","useEffect","length","Container","maxWidth","Card","className","Grid","container","direction","justify","Typography","variant","to","onClick","style","Button","TextField","fullWidth","label","value","onChange","type","error","helperText","marginBottom","id","size","userName","userPassword","DB","JSON","parse","localStorage","getItem","Promise","resolve","reject","setTimeout","users","find","user","name","alert","SignIn","then","setItem","catch","props","finally","CircularProgress","Register","email","targetEmail","confirmPassword","targetConfirmPassword","errorEmail","errorConfirmPassword","helperTextEmail","helperConfirmPassword","checkEmail","checkConfirmPassword","test","userEmail","stringify","push","CheckIn","pagination","flexWrap","justifyContent","num","boxShadow","Pagination","postsLength","totalPosts","paginate","pageNumbers","i","Math","ceil","map","number","block","post","minWidth","noPosts","icon","cursor","content","title","borderBottom","save","textAlign","Posts","posts","setPosts","findPosts","edit","setEdit","valueTitle","setValueTitle","valueBody","setValueBody","currentPage","setCurrentPage","lastPostIndex","firstPostsIndex","Box","filter","el","CardContent","e","target","multiline","gutterBottom","component","newPost","item","savePost","slice","pageNumber","backgroundColor","padding","left","webName","marginRight","fontSize","FeedHeader","setToken","search","setSearch","anchorEl","setAnchorEl","feedName","open","Boolean","event","textTransform","aria-controls","aria-haspopup","aria-expanded","undefined","currentTarget","Menu","onClose","MenuListProps","MenuItem","removeItem","center","lineHeight","input","PostCreate","titleText","setTitleText","bodyText","setBodyText","v","trim","random","avatar","status","height","userStatus","menuStatus","borderRadius","fontWeight","aboutMe","online","green","offline","red","User","Input","styled","setStatus","statusColor","setStatusColor","checkStatus","editUser","about","setAbout","Stack","spacing","htmlFor","accept","multiple","CardMedia","image","alt","Alert","severity","TransitionComponent","Fade","defaultValue","Profile","Feed","token","fetch","response","json","data","toLowerCase","includes","toLocaleLowerCase","basename","path","exact","Redirect","Form","setNickname","setEmail","setPassword","setConfirmPassword","setShow","setErrorName","setErrorEmail","setErrorPassword","setErrorConfirmPassword","setHelperTextName","setHelperTextEmail","setHelperTextPassword","setHelperTextConfirmPassword","text","dataBase","App","ReactDOM","render","document","getElementById"],"mappings":"4RAGaA,EAAYC,YAAW,CAClCC,KAAM,CACJC,OAAQ,SACRC,cAAe,EACfC,UAAW,oBACX,MAAO,CACLC,UAAW,GAEb,SAAU,CACRC,MAAO,OACPC,QAAS,OACTC,WAAY,WAEZ,WAAY,CACVC,WAAY,OACZC,OAAQ,iBAER,MAAO,CACLR,OAAQ,aAKhBS,SAAU,CACR,MAAO,CACLC,eAAgB,OAChBC,MAAO,YAGXC,mBAAoB,CAClBZ,OAAQ,SACR,QAAS,CACPO,WAAY,KAGhBM,OAAQ,CACNC,WAAY,IAEdC,KAAM,CACJV,QAAS,OACTL,OAAQ,M,WC2FGgB,EArHD,SAAC,GASW,IARxBC,EAQuB,EARvBA,SAAUC,EAQa,EARbA,WACVC,EAOuB,EAPvBA,SAAUC,EAOa,EAPbA,eACVC,EAMuB,EANvBA,SAAUC,EAMa,EANbA,YACVC,EAKuB,EALvBA,UAAWC,EAKY,EALZA,cACXC,EAIuB,EAJvBA,eAAgBC,EAIO,EAJPA,mBAChBC,EAGuB,EAHvBA,UAAWC,EAGY,EAHZA,cACXC,EAEuB,EAFvBA,KAAMC,EAEiB,EAFjBA,aACNC,EACuB,EADvBA,YAAaC,EACU,EADVA,eACbC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,UAEDC,EAAUtC,IAEhB,EAAwBuC,mBAASD,EAAQpB,MAAzC,mBAAOA,EAAP,KAAasB,EAAb,KACA,EAAgCD,mBAAS,IAAzC,mBAAOE,EAAP,KAAiBC,EAAjB,KACA,EAA0BH,oBAAS,GAAnC,mBAAOI,EAAP,KAAcC,EAAd,KAEAC,qBAAU,YACM,IAAVF,IACGvB,GACKA,EAAUU,GAAU,EAAVA,CAAgB,yJAC/BA,MAFUA,GAAU,EAAVA,CAAgB,uJAI3BR,EAASwB,OAAS,GACpBf,GAAc,EAAdA,CAAoB,oIACpBI,EAAe,MAGfJ,MACAI,SAkCN,OACE,cAACY,EAAA,EAAD,CAAWC,SAAS,KAApB,SACE,eAACC,EAAA,EAAD,CAAMC,UAAU,OAAhB,UACE,eAACC,EAAA,EAAD,CAAMD,UAAU,qBAAqBE,WAAS,EAACC,UAAU,MAAMC,QAAQ,gBAAvE,UACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,8FACA,cAACD,EAAA,EAAD,CAAYC,QAAQ,KAApB,gCACA,cAAC,IAAD,CAAMC,GAAG,YAAYC,QAAStB,EAAOuB,MAAO,CAAE9C,eAAgB,QAA9D,SACE,cAAC+C,EAAA,EAAD,CAAQV,UAAWZ,EAAQ1B,SAAU8C,QAASrB,EAAWb,SAAUA,EAAUgC,QAAQ,WAAW1C,MAAM,UAAtG,+HAKJ,eAACqC,EAAA,EAAD,CAAMD,UAAS,wBAAmBZ,EAAQpC,MAAQkD,WAAS,EAA3D,UACE,cAACS,EAAA,EAAD,CACEC,WAAS,EACTC,MAAM,gEACNC,MAAO5C,EACP6C,SAAU5C,EACVG,SAAUA,EACV0C,KAAK,OACLC,MAAOzC,EACP0C,WAAYxC,IAEd,iCACE,cAACiC,EAAA,EAAD,CACEC,WAAS,EACTC,MAAM,kFACNC,MAAO1C,EACP2C,SAAU1C,EACVC,SAAUA,EACV0C,MAAe,IAATlC,EAAgB,OAAS,WAC/BmC,MAAOxC,EACPyC,WAAYvC,IAEd,cAAC+B,EAAA,EAAD,CACEV,UAAWZ,EAAQvB,mBACnB2C,QAASzB,EACTT,SAAUA,EACVmC,MAAO,CAAEU,aAAcnC,GAJzB,UAMY,IAATF,EAAgB,cAAC,IAAD,IAAwB,cAAC,IAAD,YAI/C,eAACmB,EAAA,EAAD,CAAMD,UAAS,wBAAmBZ,EAAQtB,QAAUoC,WAAS,EAACC,UAAU,MAAMC,QAAQ,gBAAgB7C,WAAW,SAAjH,UACE,eAACmD,EAAA,EAAD,CAAQU,GAAG,QAAQC,KAAK,QAAQ/C,SAAUA,EAAUgC,QAAQ,YAAYE,QAzE3D,WACnBd,GAAS,GACTnB,GAAY,GACZe,EAAQ,MCvDL,SAAgBgC,EAAUC,GAE7B,IAAIC,EAAKC,KAAKC,MAAMC,aAAaC,QAAQ,aAEzC,OAAO,IAAIC,SAAQ,SAACC,EAASC,IACpBT,IAAaA,EACdS,EAAOT,IACCC,GAAgBA,EAAa3B,OAAS,EAC9CmC,EAAOR,GAEPS,YAAW,WACQR,EAAGS,MAAMC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,OAASd,GAAYa,EAAK/D,WAAamD,KAG7EO,IAGAC,EAAOM,MAAM,oYAElB,QDqCXC,CAAOpE,EAAUE,GACdmE,MAAK,WACJZ,aAAaa,QAAQ,cAAc,GACnCb,aAAaa,QAAQ,WAAYtE,GACjCsB,EAAY,eACZN,OACCuD,OAAM,SAACC,GACR,OAAQA,GACN,KAAKxE,EACc,IAAbA,GAAgBU,GAAU,EAAVA,CAAgB,uJACpC,MACF,KAAKR,EACHS,GAAc,EAAdA,CAAoB,wIAMzB8D,SAAQ,WACPpE,GAAY,GACZe,EAAQF,EAAQpB,UAiDiFgD,KAAK,SAApG,UAA6G,cAAC,IAAD,CAAUT,GAAIhB,IAA3H,oCACA,cAACqD,EAAA,EAAD,CAAkBxB,GAAG,SAASpB,UAAS,UAAKhC,EAAL,gBACvC,cAAC0C,EAAA,EAAD,CAAQF,QAAStB,EAAO8B,KAAK,SAAS1C,SAAUA,EAAhD,uEEoCKuE,EAlJE,SAAC,GAaU,IAZxB3E,EAYuB,EAZvBA,SAAUC,EAYa,EAZbA,WACV2E,EAWuB,EAXvBA,MAAOC,EAWgB,EAXhBA,YACP3E,EAUuB,EAVvBA,SAAUC,EAUa,EAVbA,eACV2E,EASuB,EATvBA,gBAAiBC,EASM,EATNA,sBACjB3E,EAQuB,EARvBA,SAAUC,EAQa,EARbA,YACVC,EAOuB,EAPvBA,UAAW0E,EAOY,EAPZA,WACXzE,EAMuB,EANvBA,cAAe0E,EAMQ,EANRA,qBACfzE,EAKuB,EALvBA,eAAgB0E,EAKO,EALPA,gBAChBzE,EAIuB,EAJvBA,mBAAoB0E,EAIG,EAJHA,sBACpBzE,EAGuB,EAHvBA,UAAW0E,EAGY,EAHZA,WAAYzE,EAGA,EAHAA,cAAe0E,EAGf,EAHeA,qBACtCzE,EAEuB,EAFvBA,KAAMC,EAEiB,EAFjBA,aACNC,EACuB,EADvBA,YAAaC,EACU,EADVA,eACbC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,UAEDC,EAAUtC,IAEhB,EAAwBuC,mBAASD,EAAQpB,MAAzC,mBAAOA,EAAP,KAAasB,EAAb,KACA,EAAgCD,mBAAS,aAAzC,mBAAOE,EAAP,KAAiBC,EAAjB,KACA,EAA0BH,oBAAS,GAAnC,oBAAOI,GAAP,MAAcC,GAAd,MAEAC,qBAAU,YAGQ,IAAVF,KACKvB,GACKA,EAAUU,GAAU,EAAVA,CAAgB,yJAC/BA,MAFUA,GAAU,EAAVA,CAAgB,uJAI1BkE,GAPG,0kBAOWU,KAAKV,GACnBQ,MAD2BA,GAAW,EAAXA,CAAiB,qGAG7ClF,EAASwB,OAAS,GAClBf,GAAc,EAAdA,CAAoB,oIACpBI,EAAe,MAGfJ,MACAI,KAGAb,IAAa4E,EAAiBO,GAAqB,EAArBA,CAA2B,4GACxDA,UAqCb,OACI,cAAC1D,EAAA,EAAD,CAAWC,SAAS,KAApB,SACI,eAACC,EAAA,EAAD,CAAMC,UAAU,OAAhB,UACI,eAACC,EAAA,EAAD,CAAMD,UAAU,qBAAqBE,WAAS,EAACC,UAAU,MAAMC,QAAQ,gBAAvE,UACI,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,0HACA,cAACD,EAAA,EAAD,CAAYC,QAAQ,KAApB,gCACA,cAAC,IAAD,CAAMC,GAAG,IAAIC,QAAStB,EAAOuB,MAAO,CAAE9C,eAAgB,QAAtD,SAAgE,cAAC+C,EAAA,EAAD,CAAQV,UAAWZ,EAAQ1B,SAAU8C,QAASrB,EAAWb,SAAUA,EAAUgC,QAAQ,WAAW1C,MAAM,UAAtG,iDAEpE,eAACqC,EAAA,EAAD,CAAMD,UAAS,wBAAmBZ,EAAQpC,MAAQkD,WAAS,EAA3D,UACI,cAACS,EAAA,EAAD,CACIE,MAAM,gEACNC,MAAO5C,EACP6C,SAAU5C,EACVG,SAAUA,EACVsC,WAAS,EAACI,KAAK,OACfC,MAAOzC,EACP0C,WAAYxC,IAEhB,cAACiC,EAAA,EAAD,CACIE,MAAM,qGACNC,MAAOgC,EACP/B,SAAUgC,EACVzE,SAAUA,EACVsC,WAAS,EAACI,KAAK,QACfC,MAAOiC,EACPhC,WAAYkC,IAEhB,iCACI,cAACzC,EAAA,EAAD,CACIC,WAAS,EACTC,MAAM,kFACNC,MAAO1C,EACP2C,SAAU1C,EACVC,SAAUA,EACV0C,MAAe,IAATlC,EAAgB,OAAS,WAC/BmC,MAAOxC,EACPyC,WAAYvC,IAEhB,cAAC+B,EAAA,EAAD,CACIV,UAAWZ,EAAQvB,mBACnB2C,QAASzB,EACTT,SAAUA,EACVmC,MAAO,CAAEU,aAAcnC,GAJ3B,UAMc,IAATF,EAAgB,cAAC,IAAD,IAAwB,cAAC,IAAD,SAGjD,cAAC6B,EAAA,EAAD,CACIE,MAAM,0GACNC,MAAOkC,EACPjC,SAAUkC,EACV3E,SAAUA,EAAUsC,WAAS,EAC7BI,MAAe,IAATlC,EAAgB,OAAS,WAC/BmC,MAAOkC,EACPjC,WAAYmC,OAGpB,eAACpD,EAAA,EAAD,CAAMD,UAAU,uBAAuBE,WAAS,EAACC,UAAU,MAAMC,QAAQ,gBAAzE,UACI,eAACM,EAAA,EAAD,CAAQU,GAAG,WAAWC,KAAK,QAAQ/C,SAAUA,EAAUgC,QAAQ,YAAYE,QA3FtE,WACjBd,IAAS,GACTnB,GAAY,GACZe,EAAQ,MD1CT,SAAiBgC,EAAUmC,EAAWlC,EAAcyB,GACvD,OAAO,IAAInB,SAAQ,SAACC,EAASC,GACzB,IACII,EAAO,CACPC,KAAMd,EACNwB,MAAOW,EACPrF,SAAUmD,IAGTD,IAAaA,EACdS,EAAOT,GACCmC,GATA,0kBASkBD,KAAKC,IAEvBlC,GAAgBA,EAAa3B,OAAS,EAC9CmC,EAAOR,GACAA,IAAiByB,EACxBjB,EAAOiB,GAEPhB,YAAW,WACPF,EAAQK,KACT,KARHJ,EAAO0B,MAUZlB,MAAK,SAACJ,GACL,OAAO,IAAIN,SAAQ,SAACC,EAASC,GACzB,IAAIP,EAAKC,KAAKC,MAAMC,aAAaC,QAAQ,aACzBJ,EAAGS,MAAMC,MAAK,SAAAC,GAAI,OAAIA,EAAKW,QAAUW,KAGjD1B,EAAOM,MAAM,8GAGbV,aAAaa,QAAQ,WAAYf,KAAKiC,UAAUvB,IAChDX,EAAGS,MAAM0B,KAAKxB,GACdR,aAAaa,QAAQ,WAAYf,KAAKiC,UAAUlC,IAChDM,WCSR8B,CAAQ1F,EAAU4E,EAAO1E,EAAU4E,GAC9BT,MAAK,WACFZ,aAAaa,QAAQ,cAAc,GACnCb,aAAaa,QAAQ,WAAYtE,GACjCsB,EAAY,eACZN,OACDuD,OAAM,SAACC,GACN,OAAQA,GACJ,KAAKxE,EACgB,IAAbA,GAAgBU,GAAU,EAAVA,CAAgB,uJACpC,MACJ,KAAKkE,EACDQ,IAAa,qGACb,MACJ,KAAKlF,EACGA,IAAa4E,IACbnE,GAAc,EAAdA,CAAoB,oIACpB0E,GAAqB,EAArBA,CAA2B,iHAM1CZ,SAAQ,WACLpE,GAAY,GACZe,EAAQF,EAAQpB,UA8DsFgD,KAAK,SAAvG,UAAiH,cAAC,IAAD,CAAUT,GAAIhB,IAA/H,kHACA,cAACqD,EAAA,EAAD,CAAkBxB,GAAG,SAASpB,UAAWhC,IACzC,cAAC0C,EAAA,EAAD,CAAQF,QAAStB,EAAOZ,SAAUA,EAAlC,uE,oCCxJdxB,EAAYC,YAAW,CACzB8G,WAAY,CACRxG,MAAO,OACPD,UAAW,OACXE,QAAS,OACTwG,SAAU,OACVC,eAAgB,UAEpBC,IAAK,CACD3G,MAAO,GACPJ,OAAQ,WACRgH,UAAW,2GA6BJC,EAzBI,SAAC,GAIhB,IAJ2D,IAAzCC,EAAwC,EAAxCA,YAAaC,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,SACrCjF,EAAUtC,IAEVwH,EAAc,GACXC,EAAI,EAAGA,GAAKC,KAAKC,KAAKL,EAAaD,GAAcI,IACtDD,EAAYX,KAAKY,GAGrB,OACI,qBAAKvE,UAAWZ,EAAQyE,WAAxB,SAEQS,EAAYI,KAAI,SAAAC,GAAM,OAClB,cAACjE,EAAA,EAAD,CAAQF,QAAS,kBAAM6D,EAASM,IAC5B3E,UAAWZ,EAAQ4E,IACnB3C,KAAK,QAFT,SAKKsD,GAFIA,SCnBvB7H,EAAYC,YAAW,CACzB6H,MAAO,CACHtH,QAAS,OACTwG,SAAU,OACVC,eAAgB,UAEpBc,KAAM,CACFC,SAAU,IACVhF,SAAU,IACV1C,UAAW,OACXH,OAAQ,UAEZ8H,QAAS,CACL3H,UAAW,IAEf4H,KAAM,CACF5H,UAAW,MACXI,WAAY,MACZyH,OAAQ,WAEZC,QAAS,CACL5H,QAAS,OACTwG,SAAU,OACVvG,WAAY,UAEhB4H,MAAO,CACH9H,MAAO,OACP+H,aAAc,oBACdjE,aAAc,GAElBnE,KAAM,CACFK,MAAO,QAEXgI,KAAM,CACFhI,MAAO,OACPiI,UAAW,QACXlI,UAAW,GAEfyG,WAAY,CACRzG,UAAW,OACXE,QAAS,OACTyG,eAAgB,YAoGTwB,EAhGD,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,UACxBtG,EAAUtC,IAEhB,EAAwBuC,mBAAS,MAAjC,mBAAOsG,EAAP,KAAaC,EAAb,KACA,EAAoCvG,mBAAS,IAA7C,mBAAOwG,EAAP,KAAmBC,EAAnB,KACA,EAAkCzG,mBAAS,IAA3C,mBAAO0G,EAAP,KAAkBC,EAAlB,KACA,EAAsC3G,mBAAS,GAA/C,mBAAO4G,EAAP,KAAoBC,EAApB,KAGMC,EADY,EACIF,EAChBG,EAAkBD,EAFN,EA0BlB,OACI,eAACE,EAAA,EAAD,CAAKrG,UAAWZ,EAAQwF,MAAxB,UAEyB,IAAjBY,EAAM5F,OACF,cAACS,EAAA,EAAD,CAAYC,QAAQ,KAAKN,UAAWZ,EAAQ2F,QAA5C,+GAEqB,IAArBW,EAAU9F,OACN,cAACS,EAAA,EAAD,CAAYC,QAAQ,KAAKN,UAAWZ,EAAQ2F,QAA5C,wFAEAW,EAAUhB,KAAI,SAAChC,GAAD,OACV,eAAC3C,EAAA,EAAD,CAAMC,UAAWZ,EAAQyF,KAAMzD,GAAIsB,EAAMtB,GAAzC,UACI,cAAC,IAAD,CAAcpB,UAAWZ,EAAQ4F,KAAMxE,QAAS,kBAjCxDY,EAiCyEsB,EAAMtB,GAjCxEqE,EAASD,EAAMc,QAAO,SAACC,GAAD,OAAQA,EAAGnF,KAAOA,MAAhD,IAACA,KAkCQ,eAACoF,EAAA,EAAD,CAAaxG,UAAWZ,EAAQ8F,QAAhC,UACI,qBAAKlF,UAAWZ,EAAQ+F,MAAxB,SAEQQ,IAASjD,EAAMtB,GAAK,8BAChB,cAACT,EAAA,EAAD,CAAWG,MAAO+E,EAAY9E,SAAU,SAAC0F,GAAD,OAAOX,EAAcW,EAAEC,OAAO5F,QAAQF,WAAS,EAAC+F,WAAS,MAGjG,cAACtG,EAAA,EAAD,CACIuG,cAAY,EAACtG,QAAQ,KACrBuG,UAAU,KAFd,SAIKnE,EAAMyC,UAIvB,qBAAKnF,UAAWZ,EAAQpC,KAAxB,SAEQ2I,IAASjD,EAAMtB,GAAK,8BAChB,cAACT,EAAA,EAAD,CAAWG,MAAOiF,EAAWhF,SAAU,SAAC0F,GAAD,OAAOT,EAAaS,EAAEC,OAAO5F,QAAQF,WAAS,EAAC+F,WAAS,MAG/F,cAACtG,EAAA,EAAD,CAAYC,QAAQ,QAChB1C,MAAM,gBACNiJ,UAAU,IAFd,SAIKnE,EAAM1F,SAIvB,cAACqD,EAAA,EAAD,CAAYL,UAAWZ,EAAQiG,KAAM/E,QAAQ,SAA7C,SAEQqF,IAASjD,EAAMtB,GACX,cAACV,EAAA,EAAD,CAAQF,QAAS,kBA3D5C,SAACY,GACd,IAAI0F,EAAUtB,EAAMd,KAAI,SAAAqC,GAKpB,OAJIA,EAAK3F,KAAOA,IACZ2F,EAAK5B,MAAQU,EACbkB,EAAK/J,KAAO+I,GAETgB,KAGXtB,EAASqB,GACTlB,EAAQ,MAiDuDoB,CAAStE,EAAMtB,KAAKC,KAAK,QAAhD,oEAEA,cAACX,EAAA,EAAD,CAAQF,QAAS,kBAlE3CY,EAkE0DsB,EAAMtB,GAlE5D+D,EAkEgEzC,EAAMyC,MAlE/DnI,EAkEsE0F,EAAM1F,KAjErG4I,EAAQxE,GACR0E,EAAcX,QACda,EAAahJ,GAHA,IAACoE,EAAI+D,EAAOnI,GAkEe,mGApC8B0F,EAAMtB,OAyCzD6F,MAAMb,EAAiBD,GAEtC,cAAC,EAAD,CACIhC,YAhFM,EAiFNC,WAAYsB,EAAU9F,OACtByE,SA1DK,SAAA6C,GAAU,OAAIhB,EAAegB,U,kBC9E5CpK,EAAYC,YAAW,CACzB6H,MAAO,CACHvH,MAAO,OACPC,QAAS,OACTyG,eAAgB,gBAChBxG,WAAY,SACZ4J,gBAAiB,UACjBlK,OAAQ,UACRmK,QAAS,QAEbC,KAAM,CACF/J,QAAS,OACTwG,SAAU,OACVC,eAAgB,gBAChBuB,UAAW,UAEfgC,QAAS,CACLC,YAAa,IAEjBnF,KAAM,CACFoF,SAAU,MAsDHC,EAlDI,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,UAC9BxI,EAAUtC,IAEhB,EAAgCuC,mBAAS,MAAzC,mBAAOwI,EAAP,KAAiBC,EAAjB,KACA,EAAmBzI,mBAASsC,aAAaC,QAAQ,aAA1CmG,EAAP,oBACA,EAAgC1I,mBAAS,UAAzC,mBAAOE,EAAP,KAAiBC,EAAjB,KAEMwI,EAAOC,QAAQJ,GAOrB,OACI,eAACxB,EAAA,EAAD,CAAKrG,UAAWZ,EAAQwF,MAAxB,UACI,sBAAK5E,UAAWZ,EAAQiI,KAAxB,UACI,cAAChH,EAAA,EAAD,CAAYC,QAAQ,KAAKN,UAAWZ,EAAQkI,QAA5C,uBACA,cAAC3G,EAAA,EAAD,CAAWG,MAAO6G,EAAQ5G,SAAU,SAACmH,GAAD,OAAWN,EAAUM,EAAMxB,OAAO5F,QAAQM,GAAG,eAAeP,MAAM,oCAAWP,QAAQ,SAASe,KAAK,aAE3I,gCACI,cAACX,EAAA,EAAD,CACID,MAAO,CAAE0H,cAAe,cACxB/G,GAAG,eACHgH,gBAAc,aACdC,gBAAc,OACdC,gBAAeN,EAAO,YAASO,EAC/B/H,QAlBI,SAAC0H,GAAD,OAAWJ,EAAYI,EAAMM,gBAYrC,SAQI,cAACnI,EAAA,EAAD,CAAYC,QAAQ,QAAQN,UAAWZ,EAAQgD,KAA/C,SACK2F,MAGT,eAACU,EAAA,EAAD,CACIrH,GAAG,aACHyG,SAAUA,EACVG,KAAMA,EACNU,QA3BI,kBAAMZ,EAAY,OA4BtBa,cAAe,CACX,kBAAmB,gBAN3B,UASI,eAACC,EAAA,EAAD,CAAUpI,QA/BV,kBAAMhB,EAAY,aA+BlB,UAA4B,cAAC,IAAD,CAAUe,GAAIhB,IAA1C,gDACA,cAACqJ,EAAA,EAAD,CAAUpI,QA/BZ,kBAAMkH,EAAS/F,aAAakH,WAAW,gBA+BrC,sD,QCrEd/L,EAAYC,YAAW,CACzB6H,MAAO,CACHtH,QAAS,OACTwG,SAAU,OACVC,eAAgB,UAEpBc,KAAM,CACFC,SAAU,IACVhF,SAAU,IACV1C,UAAW,OACXH,OAAQ,SACRmK,QAAS,GACT9B,UAAW,UAEfwD,OAAQ,CACJC,WAAY,GAEhBC,MAAO,CACHD,WAAY,MAwCLE,EApCI,SAAC,GAAyB,IAAvBzD,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACnBrG,EAAUtC,IAEhB,EAAkCuC,mBAAS,IAA3C,mBAAO6J,EAAP,KAAkBC,EAAlB,KACA,EAAgC9J,mBAAS,IAAzC,mBAAO+J,EAAP,KAAiBC,EAAjB,KAkBA,OACI,cAAChD,EAAA,EAAD,CAAKrG,UAAWZ,EAAQwF,MAAxB,SACI,eAAC7E,EAAA,EAAD,CAAMC,UAAWZ,EAAQyF,KAAzB,UACI,cAACxE,EAAA,EAAD,CAAYC,QAAQ,KAApB,uFACA,eAACkG,EAAA,EAAD,CAAaxG,UAAWZ,EAAQ0J,OAAhC,UACI,cAACnI,EAAA,EAAD,CAAWX,UAAWZ,EAAQ4J,MAAOpI,WAAS,EAACC,MAAM,yDAAYC,MAAOoI,EAAWnI,SAAU,SAACuI,GAAD,OAAOH,EAAaG,EAAE5C,OAAO5F,QAAQE,KAAK,SACvI,cAACL,EAAA,EAAD,CAAWX,UAAWZ,EAAQ4J,MAAOpI,WAAS,EAACC,MAAM,+DAAaC,MAAOsI,EAAUrI,SAAU,SAACuI,GAAD,OAAOD,EAAYC,EAAE5C,OAAO5F,QAAQE,KAAK,YAE1I,cAACN,EAAA,EAAD,CAAQF,QAxBH,WACb,GAAI0I,EAAUK,QAAUH,EAASG,OAAQ,CAErC,IAAIzC,EAAU,CACV1F,GAAIoD,KAAKgF,SAAWhE,EAAM5F,OAC1BuF,MAAO+D,EACPlM,KAAMoM,GAGV3D,EAAS,CAACqB,GAAF,mBAActB,KAEtB2D,EAAa,IACbE,EAAY,SACThH,MAAM,oFAWsBhB,KAAK,QAAhC,0E,uLC1CVvE,GAAYC,YAAW,CACzB0M,OAAQ,CACJpM,MAAO,cACPJ,OAAQ,SACRgI,OAAQ,WAEZyE,OAAQ,CACJrM,MAAO,OACPsM,OAAQ,GACR1M,OAAQ,SACRmK,QAAS,GAEbwC,WAAY,CACRvM,MAAO,OACPsM,OAAQ,UACRrM,QAAS,OACTC,WAAY,UAEhBsM,WAAY,CACR5M,OAAQ,MACR6M,aAAc,EACdC,WAAY,IACZnM,MAAO,QAEXoM,QAAS,CACL1M,QAAS,OACTC,WAAY,SACZwM,WAAY,IACZnM,MAAO,OACPuD,aAAc,GAGlB6D,KAAM,CACFuC,YAAa,GAEjBuB,OAAQ,CACJxL,QAAS,OACTC,WAAY,YAId0M,GAASC,KAAM,KACfC,GAAUC,KAAI,KAwILC,GAtIF,WACT,IAAMjL,EAAUtC,KACVwN,EAAQC,aAAO,QAAPA,CAAgB,CAC1BjN,QAAS,SAGb,EAAgC+B,mBAAS,MAAzC,mBAAOwI,EAAP,KAAiBC,EAAjB,KACME,EAAOC,QAAQJ,GAQrB,EAA4BxI,mBAAS,IAArC,mBAAOoK,EAAP,KAEA,GAFA,KAE4BpK,mBAAS,KAArC,mBAAOqK,EAAP,KAAec,EAAf,KACA,EAAsCnL,mBAAS,IAA/C,mBAAOoL,EAAP,KAAoBC,EAApB,KACMC,EAAc,SAAAjB,GAAM,OAAI,SAAA9L,GAC1B4M,EAAUd,GACVgB,EAAe9M,KAanB,EAAwByB,oBAAS,GAAjC,mBAAOsG,EAAP,KAAaC,EAAb,KACMgF,EAAW,WACMhF,GAAN,IAATD,IAGR,EAA0BtG,mBAAS,IAAnC,mBAAOwL,EAAP,KAAcC,EAAd,KAGA,OACI,cAAC,IAAD,CAAKzN,MAAO,IAAZ,SACI,cAAC,IAAD,CAAMiD,QAAQ,WAAd,SACI,eAAC,IAAD,WACI,gCACI,cAACyK,EAAA,EAAD,CAAO5K,UAAU,MAAM5C,WAAW,SAASyN,QAAS,EAApD,SACI,wBAAOC,QAAQ,wBAAwBjL,UAAWZ,EAAQqK,OAA1D,UACI,cAACa,EAAD,CAAOY,OAAO,UAAU9J,GAAG,wBAAwB+J,UAAQ,EAACnK,KAAK,SACjE,cAACoK,EAAA,EAAD,CACIvE,UAAU,MACV8C,OAAO,MACP0B,OAAkB,IAAX5B,EACHA,EAEA,uIACJ6B,IAAI,gBAKhB,cAAC,IAAD,CACItL,UAAWZ,EAAQsK,OACnBtI,GAAG,cACHgH,gBAAc,YACdC,gBAAc,OACdC,gBAAeN,EAAO,YAASO,EAC/B/H,QA5DJ,SAAC0H,GACjBJ,EAAYI,EAAMM,gBAqDF,SAQI,cAAC+C,EAAA,EAAD,CACIC,SAAUf,GAA4BC,EAAe,WACrD1F,MAAM,EAAO1E,QAAQ,SACrBN,UAAWZ,EAAQwK,WAHvB,SAKKF,GAAkBc,EAAU,cAGrC,eAAC/B,EAAA,EAAD,CACIrH,GAAG,YACHuH,cAAe,CACX,kBAAmB,eAEvBd,SAAUA,EACVG,KAAMA,EACNU,QA1EJ,WAChBZ,EAAY,OA0EQ2D,oBAAqBC,IARzB,UAUI,cAAC9C,EAAA,EAAD,CAAUpI,QAjEb,WACjBmK,EAAY,SAAZA,CAAsB,WAEtB7C,EAAY,OA8DyC9H,UAAWZ,EAAQyK,WAAYpJ,MAAO,CAAE0G,gBAAiB8C,IAA1F,oBACA,cAACrB,EAAA,EAAD,CAAUpI,QA7DZ,WAClBmK,EAAY,UAAZA,CAAuB,SAEvB7C,EAAY,OA0D0C9H,UAAWZ,EAAQyK,WAAYpJ,MAAO,CAAE0G,gBAAiBgD,IAA3F,2BAIR,gCACI,eAAC,IAAD,CAAYnK,UAAWZ,EAAQ4K,QAAS1J,QAAQ,KAAKsG,cAAY,EAACC,UAAU,MAA5E,UAAkF,cAAC,IAAD,IAAlF,6CAEa,IAATlB,EACI,cAAC,IAAD,CACI7E,MAAO+J,EACP9J,SA3Db,SAAAmH,GAAK,OAAI4C,EAAS5C,EAAMxB,OAAO5F,QA4DlBL,MAAO,CAAEU,aAAc,KACvBC,GAAG,4BACHuF,WAAS,EACTgF,aAAa,gBACb/K,WAAS,IAGb,cAAC,IAAD,CAAYN,QAAQ,YAAYsG,cAAY,EAACC,UAAU,MAAvD,SAEQgE,GACI,cAACU,EAAA,EAAD,CACIvL,UAAWZ,EAAQ0J,OACnB0C,SAAS,UAFb,2ZAUxB,+BAEiB,IAAT7F,EACI,eAAC,IAAD,CAAQnF,QAASoK,EAAUtK,QAAQ,YAAYM,WAAS,EAAxD,UAAyD,cAAC,KAAD,CAAUZ,UAAWZ,EAAQ4F,OAAtF,6DAEA,eAAC,IAAD,CAAQxE,QAASoK,EAAUtK,QAAQ,YAAYM,WAAS,EAAxD,UAAyD,cAAC,KAAD,CAAiBZ,UAAWZ,EAAQ4F,OAA7F,4GClLjB4G,GATC,WACZ,OACI,cAAC,IAAD,CAAKtO,QAAQ,OAAOwG,SAAS,OAAOC,eAAe,aAAnD,SACI,cAAC,GAAD,OC6CG8H,GAvCF,WAET,MAA0BxM,mBAAS,IAAnC,mBAAOmG,EAAP,KAAcC,EAAd,KACA,EAA0BpG,mBAASsC,aAAaC,QAAQ,eAAxD,mBAAOkK,EAAP,KAAcpE,EAAd,KACA,EAA4BrI,mBAAS,IAArC,mBAAOsI,EAAP,KAAeC,EAAf,KACAjI,qBAAU,WR+CH,IAAIkC,SAAQ,SAACC,GAChBiK,MAAM,8CACDxJ,MAAK,SAAAyJ,GAAQ,OAAIA,EAASC,UAC1B1J,MAAK,SAAA0J,GAAI,OAAInK,EAAQL,KAAKiC,UAAUuI,UQhDpC1J,MAAK,SAAC2J,GACHzG,EAAShE,KAAKC,MAAMwK,SAE7B,IAEH,IAAMxG,EAAYF,EAAMc,QAAO,SAAAzB,GAC3B,OAAOA,EAAKM,MAAMgH,cAAcC,SAASzE,EAAO0E,wBAGpD,OAAIP,EAEI,cAACzF,EAAA,EAAD,CAAK/I,QAAQ,OAAOwG,SAAS,OAAOC,eAAe,aAAnD,SACI,cAAC,IAAD,CAAeuI,SAAS,iBAAxB,SACI,eAAC,IAAD,WACI,eAAC,IAAD,CAAOC,KAAK,SAASC,OAAK,EAA1B,UACI,cAAC,EAAD,CAAY9E,SAAUA,EAAUC,OAAQA,EAAQC,UAAWA,IAC3D,eAAC/H,EAAA,EAAD,WACI,cAAC,EAAD,CAAY2F,MAAOA,EAAOC,SAAUA,IACpC,cAAC,EAAD,CAAUD,MAAOA,EAAOC,SAAUA,EAAUC,UAAWA,UAG/D,cAAC,IAAD,CAAO6G,KAAK,WAAZ,SACI,cAAC,GAAD,aAOVE,YAAS,MC8DZC,I,OAvGF,WAEX,MAAgCrN,mBAAS,IAAzC,mBAAOnB,EAAP,KAAiByO,EAAjB,KACA,EAA0BtN,mBAAS,IAAnC,mBAAOyD,EAAP,KAAc8J,EAAd,KACA,EAAgCvN,mBAAS,IAAzC,mBAAOjB,EAAP,KAAiByO,EAAjB,KACA,EAA8CxN,mBAAS,IAAvD,mBAAO2D,EAAP,KAAwB8J,EAAxB,KAEA,EAAgCzN,oBAAS,GAAzC,mBAAOf,EAAP,KAAiBC,EAAjB,KACA,EAAwBc,oBAAS,GAAjC,mBAAOP,EAAP,KAAaiO,EAAb,KACA,EAAsC1N,mBAAS,GAA/C,mBAAOL,EAAP,KAAoBC,EAApB,KAEA,EAAkCI,oBAAS,GAA3C,mBAAOb,EAAP,KAAkBwO,EAAlB,KACA,EAAoC3N,oBAAS,GAA7C,mBAAO6D,EAAP,KAAmB+J,EAAnB,KACA,EAA0C5N,oBAAS,GAAnD,mBAAOZ,EAAP,KAAsByO,EAAtB,KACA,EAAwD7N,oBAAS,GAAjE,mBAAO8D,EAAP,KAA6BgK,EAA7B,KACA,EAA4C9N,mBAAS,IAArD,mBAAOX,EAAP,KAAuB0O,GAAvB,KACA,GAA8C/N,mBAAS,IAAvD,qBAAO+D,GAAP,MAAwBiK,GAAxB,MACA,GAAoDhO,mBAAS,IAA7D,qBAAOV,GAAP,MAA2B2O,GAA3B,MACA,GAA8DjO,mBAAS,IAAvE,qBAAOgE,GAAP,MAA8BkK,GAA9B,MAEMpP,GAAa,SAAC+J,GAAD,OAAWyE,EAAYzE,EAAMxB,OAAO5F,QAEjDzC,GAAiB,SAAC6J,GAAD,OAAW2E,EAAY3E,EAAMxB,OAAO5F,QAGrDlC,GAAY,SAAAqC,GAAK,OAAI,SAAAuM,GACzBR,EAAa/L,GACbmM,GAAkBI,KAEdlK,GAAa,SAAArC,GAAK,OAAI,SAAAuM,GAC1BP,EAAchM,GACdoM,GAAmBG,KAEf3O,GAAgB,SAAAoC,GAAK,OAAI,SAAAuM,GAC7BN,EAAiBjM,GACjBqM,GAAsBE,KAElBjK,GAAuB,SAAAtC,GAAK,OAAI,SAAAuM,GACpCL,EAAwBlM,GACxBsM,GAA6BC,KAGzBzO,GAAe,WACAgO,GAAN,IAATjO,IAIAK,GAAY,WAChBP,OACA0E,OACAzE,OACA0E,OACAtE,EAAe,IAEXC,GAAQ,WACZyN,EAAY,IACZC,EAAS,IACTC,EAAY,IACZC,EAAmB,KAGrB,OACE,qBAAKrM,MAAO,CAAExD,QAAS,GAAvB,SACE,cAAC,IAAD,CAAeqP,SAAS,aAAxB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAArB,SACE,cAAC,EAAD,CACEtO,SAAUA,EAAUC,WAAYA,GAChCC,SAAUA,EAAUC,eAAgBA,GACpCC,SAAUA,EAAUC,YAAaA,EACjCC,UAAWA,EAAWC,cAAeA,EACrCC,eAAgBA,EAAgBC,mBAAoBA,GACpDG,KAAMA,EAAMC,aAAcA,GAC1BC,YAAaA,EAAaC,eAAgBA,EAC1CL,UAAWA,GAAWC,cAAeA,GACrCK,MAAOA,GAAOC,UAAWA,OAG7B,cAAC,IAAD,CAAOoN,KAAK,YAAZ,SACE,cAAC,EAAD,CACErO,SAAUA,EAAUC,WAAYA,GAChC2E,MAAOA,EAAOC,YA5DN,SAACmF,GAAD,OAAW0E,EAAS1E,EAAMxB,OAAO5F,QA6DzC1C,SAAUA,EAAUC,eAAgBA,GACpC2E,gBAAiBA,EAAiBC,sBA5DhB,SAACiF,GAAD,OAAW4E,EAAmB5E,EAAMxB,OAAO5F,QA6D7DxC,SAAUA,EAAUC,YAAaA,EACjCC,UAAWA,EAAW0E,WAAYA,EAClCzE,cAAeA,EAAe0E,qBAAsBA,EACpDzE,eAAgBA,EAAgB0E,gBAAiBA,GACjDzE,mBAAoBA,GAAoB0E,sBAAuBA,GAC/DzE,UAAWA,GAAW0E,WAAYA,GAClCzE,cAAeA,GAAe0E,qBAAsBA,GACpDzE,KAAMA,EAAMC,aAAcA,GAC1BC,YAAaA,EAAaC,eAAgBA,EAC1CC,MAAOA,GAAOC,UAAWA,OAG7B,cAAC,IAAD,CAAOoN,KAAK,QAAZ,SAAoB,cAAC,GAAD,eCxGjBkB,GAAW,CACpBxL,MAAO,ICeIyL,GAZH,WASR,OARA/N,qBAAU,WACKgC,aAAaC,QAAQ,aAG5BD,aAAaa,QAAQ,WAAYf,KAAKiC,UAAU+J,OAErD,IAEI,cAAC,GAAD,KCTXE,IAASC,OAAO,cAAC,GAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.b54d8717.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core';\r\n\r\n\r\nexport const useStyles = makeStyles({\r\n  body: {\r\n    margin: '20px 0',\r\n    paddingBottom: 5,\r\n    borderTop: '3px solid #0dcaf0',\r\n    '& *': {\r\n      marginTop: 7,\r\n    },\r\n    '& span': {\r\n      width: '100%',\r\n      display: 'flex',\r\n      alignItems: 'flex-end',\r\n\r\n      '& button': {\r\n        marginLeft: '-2px',\r\n        border: '1px solid gray',\r\n\r\n        '& *': {\r\n          margin: '0 auto'\r\n        }\r\n      }\r\n    },\r\n  },\r\n  register: {\r\n    '& *': {\r\n      textDecoration: 'none',\r\n      color: 'inherit',\r\n    }\r\n  },\r\n  showPasswordButton: {\r\n    margin: '0 auto',\r\n    '& svg': {\r\n      marginLeft: 10\r\n    }\r\n  },\r\n  footer: {\r\n    paddingTop: 10,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n    margin: 30,\r\n  },\r\n})","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n  Card,\r\n  CircularProgress,\r\n  TextField,\r\n  Container,\r\n} from '@material-ui/core';\r\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { useStyles } from './styles/styles';\r\nimport { SignIn } from '../services/services';\r\n\r\n\r\nconst Login = ({\r\n  nickname, targetName,\r\n  password, targetPassword,\r\n  disabled, setDisabled,\r\n  errorName, errorPassword,\r\n  helperTextName, helperTextPassword,\r\n  checkName, checkPassword,\r\n  show, showPassword,\r\n  buttonStyle, setButtonStyle,\r\n  clear, clearType }) => {\r\n\r\n  const classes = useStyles()\r\n\r\n  const [hide, setHide] = useState(classes.hide)\r\n  const [redirect, setRedirect] = useState('')\r\n  const [click, setClick] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (click === true) {\r\n      if (!nickname) checkName(true)('Пожалуйста введите ваше имя')\r\n      else if (+nickname) checkName(true)('Имя не может состоять из цифр')\r\n      else checkName()()\r\n\r\n      if (password.length < 8) {\r\n        checkPassword(true)('Пароль слишкой короткий')\r\n        setButtonStyle(27);\r\n      }\r\n      else {\r\n        checkPassword()()\r\n        setButtonStyle()\r\n      }\r\n\r\n    }\r\n  })\r\n\r\n  const handleSubmit = () => {\r\n    setClick(true);\r\n    setDisabled(true);\r\n    setHide(null);\r\n    SignIn(nickname, password)\r\n      .then(() => {\r\n        localStorage.setItem('auth_token', true)\r\n        localStorage.setItem('userName', nickname)\r\n        setRedirect('/feed/posts')\r\n        clear()\r\n      }).catch((props) => {\r\n        switch (props) {\r\n          case nickname:\r\n            if (nickname === 0) checkName(true)('Пожалуйста введите ваше имя')\r\n            break;\r\n          case password:\r\n            checkPassword(true)('Пароль слишкой короткий')\r\n            break;\r\n\r\n          // no default\r\n        }\r\n      })\r\n      .finally(() => {\r\n        setDisabled(false);\r\n        setHide(classes.hide);\r\n      })\r\n  }\r\n\r\n  return (\r\n    <Container maxWidth='sm'>\r\n      <Card className='form'>\r\n        <Grid className='form-register head' container direction=\"row\" justify=\"space-between\">\r\n          <Typography variant='h5'>Войти в систему</Typography>\r\n          <Typography variant='h5'>или</Typography>\r\n          <Link to='/register' onClick={clear} style={{ textDecoration: 'none' }}>\r\n            <Button className={classes.register} onClick={clearType} disabled={disabled} variant=\"outlined\" color=\"primary\">\r\n              Зарегистриговаться\r\n            </Button>\r\n          </Link>\r\n        </Grid>\r\n        <Grid className={`form-register ${classes.body}`} container>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Введите имя\"\r\n            value={nickname}\r\n            onChange={targetName}\r\n            disabled={disabled}\r\n            type='text'\r\n            error={errorName}\r\n            helperText={helperTextName}\r\n          />\r\n          <span>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Введите пароль\"\r\n              value={password}\r\n              onChange={targetPassword}\r\n              disabled={disabled}\r\n              type={show === true ? 'text' : 'password'}\r\n              error={errorPassword}\r\n              helperText={helperTextPassword}\r\n            />\r\n            <Button\r\n              className={classes.showPasswordButton}\r\n              onClick={showPassword}\r\n              disabled={disabled}\r\n              style={{ marginBottom: buttonStyle }}\r\n            >\r\n              {show === true ? <VisibilityOffIcon /> : <VisibilityIcon />}\r\n            </Button>\r\n          </span>\r\n        </Grid>\r\n        <Grid className={`form-register ${classes.footer}`} container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\r\n          <Button id='login' size=\"small\" disabled={disabled} variant=\"contained\" onClick={handleSubmit} type='submit'><Redirect to={redirect} />Войти</Button>\r\n          <CircularProgress id='loader' className={`${hide} + visible`} />\r\n          <Button onClick={clear} type='submit' disabled={disabled}>Очистить</Button>\r\n        </Grid>\r\n      </Card>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Login;","export function SignIn(userName, userPassword) {\r\n\r\n    let DB = JSON.parse(localStorage.getItem('database'))\r\n\r\n    return new Promise((resolve, reject) => {\r\n        if (!userName || +userName) {\r\n            reject(userName)\r\n        } else if (!userPassword || userPassword.length < 8) {\r\n            reject(userPassword)\r\n        } else {\r\n            setTimeout(() => {\r\n                let findUser = DB.users.find(user => user.name === userName && user.password === userPassword)\r\n\r\n                if (findUser) {\r\n                    resolve()\r\n                }\r\n                else {\r\n                    reject(alert('Данного пользователя не существует или вы неправильно ввели свой пароль'))\r\n                }\r\n            }, 3000);\r\n        }\r\n    })\r\n}\r\n\r\nexport function CheckIn(userName, userEmail, userPassword, confirmPassword) {\r\n    return new Promise((resolve, reject) => {\r\n        const reg = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/iu;\r\n        let user = {\r\n            name: userName,\r\n            email: userEmail,\r\n            password: userPassword\r\n        }\r\n\r\n        if (!userName || +userName) {\r\n            reject(userName)\r\n        } else if (!userEmail || !reg.test(userEmail)) {\r\n            reject(userEmail)\r\n        } else if (!userPassword || userPassword.length < 8) {\r\n            reject(userPassword)\r\n        } else if (userPassword !== confirmPassword) {\r\n            reject(confirmPassword)\r\n        } else {\r\n            setTimeout(() => {\r\n                resolve(user)\r\n            }, 3000);\r\n        }\r\n    }).then((user) => {\r\n        return new Promise((resolve, reject) => {\r\n            let DB = JSON.parse(localStorage.getItem('database'))\r\n            let duplicate = DB.users.find(user => user.email === userEmail)\r\n\r\n            if (duplicate) {\r\n                reject(alert('Данная почта занята'))\r\n            }\r\n            else {\r\n                localStorage.setItem('database', JSON.stringify(user))\r\n                DB.users.push(user)\r\n                localStorage.setItem('database', JSON.stringify(DB))\r\n                resolve()\r\n            }\r\n        })\r\n    })\r\n}\r\n\r\nexport function FeedPush() {\r\n    return new Promise((resolve) => {\r\n        fetch('https://jsonplaceholder.typicode.com/posts')\r\n            .then(response => response.json())\r\n            .then(json => resolve(JSON.stringify(json)))\r\n    })\r\n}","import React, { useEffect, useState } from 'react';\r\nimport {\r\n    Button,\r\n    Card,\r\n    Grid,\r\n    Typography,\r\n    CircularProgress,\r\n    TextField,\r\n    Container\r\n} from '@material-ui/core';\r\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { useStyles } from './styles/styles';\r\nimport { CheckIn } from '../services/services';\r\n\r\n\r\nconst Register = ({\r\n    nickname, targetName,\r\n    email, targetEmail,\r\n    password, targetPassword,\r\n    confirmPassword, targetConfirmPassword,\r\n    disabled, setDisabled,\r\n    errorName, errorEmail,\r\n    errorPassword, errorConfirmPassword,\r\n    helperTextName, helperTextEmail,\r\n    helperTextPassword, helperConfirmPassword,\r\n    checkName, checkEmail, checkPassword, checkConfirmPassword,\r\n    show, showPassword,\r\n    buttonStyle, setButtonStyle,\r\n    clear, clearType }) => {\r\n\r\n    const classes = useStyles()\r\n\r\n    const [hide, setHide] = useState(classes.hide)\r\n    const [redirect, setRedirect] = useState('/register')\r\n    const [click, setClick] = useState(false)\r\n\r\n    useEffect(() => {\r\n        const reg = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/iu;\r\n\r\n        if (click === true) {\r\n            if (!nickname) checkName(true)('Пожалуйста введите ваше имя')\r\n            else if (+nickname) checkName(true)('Имя не может состоять из цифр')\r\n            else checkName()()\r\n\r\n            if (!email || !reg.test(email)) checkEmail(true)('Почта некорректна')\r\n            else checkEmail()()\r\n\r\n            if (password.length < 8) {\r\n                checkPassword(true)('Пароль слишкой короткий')\r\n                setButtonStyle(27)\r\n            }\r\n            else {\r\n                checkPassword()()\r\n                setButtonStyle()\r\n            }\r\n\r\n            if (password !== confirmPassword) checkConfirmPassword(true)('Пароли не совпадают')\r\n            else checkConfirmPassword()()\r\n        }\r\n    })\r\n\r\n    const handleSubmit = () => {\r\n        setClick(true);\r\n        setDisabled(true);\r\n        setHide(null);\r\n        CheckIn(nickname, email, password, confirmPassword)\r\n            .then(() => {\r\n                localStorage.setItem('auth_token', true)\r\n                localStorage.setItem('userName', nickname)\r\n                setRedirect('/feed/posts')\r\n                clear()\r\n            }).catch((props) => {\r\n                switch (props) {\r\n                    case nickname:\r\n                        if (nickname === 0) checkName(true)('Пожалуйста введите ваше имя')\r\n                        break;\r\n                    case email:\r\n                        checkEmail()('Почта некорректна')\r\n                        break;\r\n                    case password:\r\n                        if (password !== confirmPassword) {\r\n                            checkPassword(true)('Пароль слишкой короткий')\r\n                            checkConfirmPassword(true)('Пароли не совпадают')\r\n                        }\r\n\r\n                    // no default\r\n                }\r\n            })\r\n            .finally(() => {\r\n                setDisabled(false);\r\n                setHide(classes.hide);\r\n            })\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth='sm'>\r\n            <Card className='form'>\r\n                <Grid className='form-register head' container direction=\"row\" justify=\"space-between\">\r\n                    <Typography variant='h5'>Зарегистриговаться</Typography>\r\n                    <Typography variant='h5'>или</Typography>\r\n                    <Link to='/' onClick={clear} style={{ textDecoration: 'none' }}><Button className={classes.register} onClick={clearType} disabled={disabled} variant=\"outlined\" color=\"primary\">Войти</Button></Link>\r\n                </Grid>\r\n                <Grid className={`form-register ${classes.body}`} container>\r\n                    <TextField\r\n                        label=\"Введите имя\"\r\n                        value={nickname}\r\n                        onChange={targetName}\r\n                        disabled={disabled}\r\n                        fullWidth type='text'\r\n                        error={errorName}\r\n                        helperText={helperTextName}\r\n                    />\r\n                    <TextField\r\n                        label=\"Введите вашу почту\"\r\n                        value={email}\r\n                        onChange={targetEmail}\r\n                        disabled={disabled}\r\n                        fullWidth type='email'\r\n                        error={errorEmail}\r\n                        helperText={helperTextEmail}\r\n                    />\r\n                    <span>\r\n                        <TextField\r\n                            fullWidth\r\n                            label=\"Введите пароль\"\r\n                            value={password}\r\n                            onChange={targetPassword}\r\n                            disabled={disabled}\r\n                            type={show === true ? 'text' : 'password'}\r\n                            error={errorPassword}\r\n                            helperText={helperTextPassword}\r\n                        />\r\n                        <Button\r\n                            className={classes.showPasswordButton}\r\n                            onClick={showPassword}\r\n                            disabled={disabled}\r\n                            style={{ marginBottom: buttonStyle }}\r\n                        >\r\n                            {show === true ? <VisibilityOffIcon /> : <VisibilityIcon />}\r\n                        </Button>\r\n                    </span>\r\n                    <TextField\r\n                        label=\"Подтвердите пароль\"\r\n                        value={confirmPassword}\r\n                        onChange={targetConfirmPassword}\r\n                        disabled={disabled} fullWidth\r\n                        type={show === true ? 'text' : 'password'}\r\n                        error={errorConfirmPassword}\r\n                        helperText={helperConfirmPassword}\r\n                    />\r\n                </Grid>\r\n                <Grid className='form-register footer' container direction=\"row\" justify=\"space-between\">\r\n                    <Button id='register' size=\"small\" disabled={disabled} variant=\"contained\" onClick={handleSubmit} type='submit' ><Redirect to={redirect} />Зарегистриговаться</Button >\r\n                    <CircularProgress id='loader' className={hide} />\r\n                    <Button onClick={clear} disabled={disabled} >Очистить</Button>\r\n                </Grid>\r\n            </Card>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    pagination: {\r\n        width: '100%',\r\n        marginTop: '2rem',\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'center',\r\n    },\r\n    num: {\r\n        width: 30,\r\n        margin: '10px 3px',\r\n        boxShadow: \"0px 2px 1px -1px rgb(0 0 0 / 20%), 0px 1px 1px 0px rgb(0 0 0 / 14%), 0px 1px 3px 0px rgb(0 0 0 / 12%)\"\r\n    }\r\n});\r\n\r\nconst Pagination = ({ postsLength, totalPosts, paginate }) => {\r\n    const classes = useStyles();\r\n\r\n    const pageNumbers = []\r\n    for (let i = 1; i <= Math.ceil(totalPosts / postsLength); i++) {\r\n        pageNumbers.push(i)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.pagination}>\r\n            {\r\n                pageNumbers.map(number => (\r\n                    <Button onClick={() => paginate(number)}\r\n                        className={classes.num}\r\n                        size=\"small\"\r\n                        key={number}\r\n                    >\r\n                        {number}\r\n                    </Button>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pagination;","import React, { useState } from 'react';\r\nimport {\r\n    Card,\r\n    CardContent,\r\n    Typography,\r\n    TextField,\r\n    Box,\r\n    Button,\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport HighlightOff from '@material-ui/icons/HighlightOff';\r\nimport Pagination from './pagination/pagination';\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    block: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'center',\r\n    },\r\n    post: {\r\n        minWidth: 280,\r\n        maxWidth: 280,\r\n        marginTop: '2rem',\r\n        margin: '0 14px',\r\n    },\r\n    noPosts: {\r\n        marginTop: 20,\r\n    },\r\n    icon: {\r\n        marginTop: '9px',\r\n        marginLeft: '88%',\r\n        cursor: 'pointer',\r\n    },\r\n    content: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        alignItems: 'center'\r\n    },\r\n    title: {\r\n        width: '100%',\r\n        borderBottom: '3px solid #0dcaf0',\r\n        marginBottom: 4\r\n    },\r\n    body: {\r\n        width: '100%',\r\n    },\r\n    save: {\r\n        width: '100%',\r\n        textAlign: 'right',\r\n        marginTop: 5,\r\n    },\r\n    pagination: {\r\n        marginTop: '2rem',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n    }\r\n});\r\n\r\nconst Posts = ({ posts, setPosts, findPosts }) => {\r\n    const classes = useStyles();\r\n\r\n    const [edit, setEdit] = useState(null)\r\n    const [valueTitle, setValueTitle] = useState('')\r\n    const [valueBody, setValueBody] = useState('')\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n\r\n    let postsLength = 8\r\n    const lastPostIndex = currentPage * postsLength\r\n    const firstPostsIndex = lastPostIndex - postsLength\r\n\r\n    const deletePost = (id) => setPosts(posts.filter((el) => el.id !== id))\r\n\r\n    const editPost = (id, title, body) => {\r\n        setEdit(id)\r\n        setValueTitle(title)\r\n        setValueBody(body)\r\n    }\r\n    const savePost = (id) => {\r\n        let newPost = posts.map(item => {\r\n            if (item.id === id) {\r\n                item.title = valueTitle\r\n                item.body = valueBody\r\n            }\r\n            return item\r\n        })\r\n\r\n        setPosts(newPost)\r\n        setEdit(null)\r\n    }\r\n\r\n    const paginate = pageNumber => setCurrentPage(pageNumber)\r\n\r\n    return (\r\n        <Box className={classes.block}>\r\n            {\r\n                posts.length === 0 ?\r\n                    <Typography variant=\"h3\" className={classes.noPosts}>Посты закончились</Typography>\r\n                    :\r\n                    findPosts.length === 0 ?\r\n                        <Typography variant=\"h3\" className={classes.noPosts}>Пост не найден</Typography>\r\n                        :\r\n                        findPosts.map((props) => (\r\n                            <Card className={classes.post} id={props.id} key={props.id}>\r\n                                <HighlightOff className={classes.icon} onClick={() => deletePost(props.id)} />\r\n                                <CardContent className={classes.content}>\r\n                                    <div className={classes.title}>\r\n                                        {\r\n                                            edit === props.id ? <div>\r\n                                                <TextField value={valueTitle} onChange={(e) => setValueTitle(e.target.value)} fullWidth multiline />\r\n                                            </div>\r\n                                                :\r\n                                                <Typography\r\n                                                    gutterBottom variant=\"h5\"\r\n                                                    component=\"h2\"\r\n                                                >\r\n                                                    {props.title}\r\n                                                </Typography>\r\n                                        }\r\n                                    </div>\r\n                                    <div className={classes.body}>\r\n                                        {\r\n                                            edit === props.id ? <div>\r\n                                                <TextField value={valueBody} onChange={(e) => setValueBody(e.target.value)} fullWidth multiline />\r\n                                            </div>\r\n                                                :\r\n                                                <Typography variant=\"body2\"\r\n                                                    color=\"textSecondary\"\r\n                                                    component=\"p\"\r\n                                                >\r\n                                                    {props.body}\r\n                                                </Typography>\r\n                                        }\r\n                                    </div>\r\n                                    <Typography className={classes.save} variant=\"button\">\r\n                                        {\r\n                                            edit === props.id ?\r\n                                                <Button onClick={() => savePost(props.id)} size='small'>Сохранить</Button>\r\n                                                :\r\n                                                <Button onClick={() => editPost(props.id, props.title, props.body)}>Редактировать</Button>\r\n                                        }\r\n                                    </Typography>\r\n                                </CardContent>\r\n                            </Card>\r\n                        )).slice(firstPostsIndex, lastPostIndex)\r\n            }\r\n            <Pagination\r\n                postsLength={postsLength}\r\n                totalPosts={findPosts.length}\r\n                paginate={paginate}\r\n            />\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Posts;","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    Box,\r\n    Typography,\r\n    Button,\r\n    TextField,\r\n} from '@material-ui/core';\r\nimport {\r\n    Menu,\r\n    MenuItem\r\n} from '@mui/material';\r\nimport { Redirect } from 'react-router';\r\n\r\nconst useStyles = makeStyles({\r\n    block: {\r\n        width: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        backgroundColor: '#0dcaf0',\r\n        margin: '0 -15xp',\r\n        padding: '15px'\r\n    },\r\n    left: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'space-between',\r\n        textAlign: 'center'\r\n    },\r\n    webName: {\r\n        marginRight: 20\r\n    },\r\n    name: {\r\n        fontSize: 25\r\n    }\r\n});\r\n\r\nconst FeedHeader = ({ setToken, search, setSearch }) => {\r\n    const classes = useStyles();\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null)\r\n    const [feedName] = useState(localStorage.getItem('userName'))\r\n    const [redirect, setRedirect] = useState('/posts')\r\n\r\n    const open = Boolean(anchorEl)\r\n\r\n    const handleClick = (event) => setAnchorEl(event.currentTarget)\r\n    const handleClose = () => setAnchorEl(null)\r\n    const profile = () => setRedirect('/profile')\r\n    const leave = () => setToken(localStorage.removeItem('auth_token'))\r\n\r\n    return (\r\n        <Box className={classes.block}>\r\n            <div className={classes.left}>\r\n                <Typography variant=\"h4\" className={classes.webName}>Test-Form</Typography>\r\n                <TextField value={search} onChange={(event) => setSearch(event.target.value)} id=\"filled-basic\" label=\"Поиск...\" variant=\"filled\" size=\"small\" />\r\n            </div>\r\n            <div>\r\n                <Button\r\n                    style={{ textTransform: 'capitalize' }}\r\n                    id=\"basic-button\"\r\n                    aria-controls=\"basic-menu\"\r\n                    aria-haspopup=\"true\"\r\n                    aria-expanded={open ? 'true' : undefined}\r\n                    onClick={handleClick}\r\n                >\r\n                    <Typography variant=\"body1\" className={classes.name}>\r\n                        {feedName}\r\n                    </Typography>\r\n                </Button>\r\n                <Menu\r\n                    id=\"basic-menu\"\r\n                    anchorEl={anchorEl}\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    MenuListProps={{\r\n                        'aria-labelledby': 'basic-button',\r\n                    }}\r\n                >\r\n                    <MenuItem onClick={profile}><Redirect to={redirect} />Профиль</MenuItem>\r\n                    <MenuItem onClick={leave}>Выйти</MenuItem>\r\n                </Menu>\r\n            </div>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default FeedHeader;","import React, { useState } from 'react';\r\nimport {\r\n    Card,\r\n    CardContent,\r\n    Typography,\r\n    TextField,\r\n    Box,\r\n    Button,\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    block: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'center',\r\n    },\r\n    post: {\r\n        minWidth: 280,\r\n        maxWidth: 280,\r\n        marginTop: '2rem',\r\n        margin: '0 14px',\r\n        padding: 15,\r\n        textAlign: 'center',\r\n    },\r\n    center: {\r\n        lineHeight: 4\r\n    },\r\n    input: {\r\n        lineHeight: 30\r\n    }\r\n});\r\n\r\nconst PostCreate = ({ posts, setPosts }) => {\r\n    const classes = useStyles();\r\n\r\n    const [titleText, setTitleText] = useState('')\r\n    const [bodyText, setBodyText] = useState('')\r\n\r\n    const addPosts = () => {\r\n        if (titleText.trim() && bodyText.trim()) {\r\n\r\n            let newPost = {\r\n                id: Math.random() * posts.length,\r\n                title: titleText,\r\n                body: bodyText\r\n            }\r\n\r\n            setPosts([newPost, ...posts])\r\n\r\n            setTitleText('')\r\n            setBodyText('')\r\n        } else alert('Заполните поле')\r\n    }\r\n\r\n    return (\r\n        <Box className={classes.block}>\r\n            <Card className={classes.post}>\r\n                <Typography variant='h6'>Добавить пост</Typography>\r\n                <CardContent className={classes.center}>\r\n                    <TextField className={classes.input} fullWidth label=\"Заголовок\" value={titleText} onChange={(v) => setTitleText(v.target.value)} type='text' />\r\n                    <TextField className={classes.input} fullWidth label=\"Содержание\" value={bodyText} onChange={(v) => setBodyText(v.target.value)} type='text' />\r\n                </CardContent>\r\n                <Button onClick={addPosts} size='large'>Сохранить</Button>\r\n            </Card>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default PostCreate;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Box,\r\n    Alert,\r\n    Typography,\r\n    TextField,\r\n    Button,\r\n    Card,\r\n    CardMedia,\r\n    CardContent,\r\n    Menu,\r\n    MenuItem,\r\n    Fade,\r\n} from '@mui/material';\r\nimport Stack from '@mui/material/Stack';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport BorderColorIcon from '@mui/icons-material/BorderColor';\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport { styled } from '@mui/material/styles';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { green, red } from '@mui/material/colors';\r\n\r\nconst useStyles = makeStyles({\r\n    avatar: {\r\n        width: 'max-content',\r\n        margin: '0 auto',\r\n        cursor: 'pointer',\r\n    },\r\n    status: {\r\n        width: '100%',\r\n        height: 20,\r\n        margin: '15px 0',\r\n        padding: 0,\r\n    },\r\n    userStatus: {\r\n        width: '100%',\r\n        height: 'inherit',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    menuStatus: {\r\n        margin: '8px',\r\n        borderRadius: 5,\r\n        fontWeight: 500,\r\n        color: '#fff',\r\n    },\r\n    aboutMe: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        fontWeight: 500,\r\n        color: 'gray',\r\n        marginBottom: 0\r\n    },\r\n\r\n    icon: {\r\n        marginRight: 7\r\n    },\r\n    center: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    }\r\n});\r\n\r\nconst online = green[800]\r\nconst offline = red[800]\r\n\r\nconst User = () => {\r\n    const classes = useStyles();\r\n    const Input = styled('input')({\r\n        display: 'none',\r\n    });\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const [avatar, setAvatar] = useState('')\r\n\r\n    const [status, setStatus] = useState('')\r\n    const [statusColor, setStatusColor] = useState('')\r\n    const checkStatus = status => color => {\r\n        setStatus(status)\r\n        setStatusColor(color)\r\n    }\r\n    const handleOnline = () => {\r\n        checkStatus('Online')('success')\r\n\r\n        setAnchorEl(null);\r\n    }\r\n    const handleOffline = () => {\r\n        checkStatus('Offline')('error')\r\n\r\n        setAnchorEl(null);\r\n    }\r\n\r\n    const [edit, setEdit] = useState(false)\r\n    const editUser = () => {\r\n        if (edit === true) setEdit(false)\r\n        else setEdit(true)\r\n    }\r\n    const [about, setAbout] = useState('')\r\n    const checkAbout = event => setAbout(event.target.value)\r\n\r\n    return (\r\n        <Box width={320}>\r\n            <Card variant=\"outlined\">\r\n                <CardContent>\r\n                    <div>\r\n                        <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\r\n                            <label htmlFor=\"contained-button-file\" className={classes.avatar}>\r\n                                <Input accept=\"image/*\" id=\"contained-button-file\" multiple type=\"file\" />\r\n                                <CardMedia\r\n                                    component=\"img\"\r\n                                    height=\"190\"\r\n                                    image={avatar === true ?\r\n                                        avatar\r\n                                        :\r\n                                        'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRpAlUbnpAz36HIeIvG7nKBUHuILO3N2qODJxcAuTUSbrf_WoqiVsVpRcolCGCKu7O7f9Y&usqp=CAU'}\r\n                                    alt=\"Avatar\"\r\n                                />\r\n                            </label>\r\n                        </Stack>\r\n\r\n                        <Button\r\n                            className={classes.status}\r\n                            id=\"fade-button\"\r\n                            aria-controls=\"fade-menu\"\r\n                            aria-haspopup=\"true\"\r\n                            aria-expanded={open ? 'true' : undefined}\r\n                            onClick={handleClick}\r\n                        >\r\n                            <Alert\r\n                                severity={statusColor ? statusColor : setStatusColor('success')}\r\n                                icon={false} variant=\"filled\"\r\n                                className={classes.userStatus}\r\n                            >\r\n                                {status ? status : setStatus('Online')}\r\n                            </Alert>\r\n                        </Button>\r\n                        <Menu\r\n                            id=\"fade-menu\"\r\n                            MenuListProps={{\r\n                                'aria-labelledby': 'fade-button',\r\n                            }}\r\n                            anchorEl={anchorEl}\r\n                            open={open}\r\n                            onClose={handleClose}\r\n                            TransitionComponent={Fade}\r\n                        >\r\n                            <MenuItem onClick={handleOnline} className={classes.menuStatus} style={{ backgroundColor: online }}>Online</MenuItem>\r\n                            <MenuItem onClick={handleOffline} className={classes.menuStatus} style={{ backgroundColor: offline }}>Offline</MenuItem>\r\n                        </Menu>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <Typography className={classes.aboutMe} variant=\"h5\" gutterBottom component=\"div\"><PersonIcon /> Обо мне</Typography>\r\n                        {\r\n                            edit === true ?\r\n                                <TextField\r\n                                    value={about}\r\n                                    onChange={checkAbout}\r\n                                    style={{ marginBottom: 5.6 }}\r\n                                    id=\"standard-multiline-static\"\r\n                                    multiline\r\n                                    defaultValue=\"Default Value\"\r\n                                    fullWidth\r\n                                />\r\n                                :\r\n                                <Typography variant=\"subtitle1\" gutterBottom component=\"div\">\r\n                                    {\r\n                                        about ? about :\r\n                                            <Alert\r\n                                                className={classes.center}\r\n                                                severity='warning'\r\n                                            >\r\n                                                Данный пункт не заполнен, вы можете заполнить его нажав на \"Изменить профиль\"\r\n                                            </Alert>\r\n                                    }\r\n                                </Typography>\r\n                        }\r\n                    </div>\r\n                    <div>\r\n                        {\r\n                            edit === true ?\r\n                                <Button onClick={editUser} variant=\"contained\" fullWidth><SaveIcon className={classes.icon} /> Сохранить</Button>\r\n                                :\r\n                                <Button onClick={editUser} variant=\"contained\" fullWidth><BorderColorIcon className={classes.icon} /> Изменить профиль</Button>\r\n                        }\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport { Box } from '@mui/system';\r\nimport User from './user';\r\n\r\nconst Profile = () => {\r\n    return (\r\n        <Box display=\"flex\" flexWrap=\"wrap\" justifyContent=\"flex-start\">\r\n            <User />\r\n            {/* profile-body */}\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Box,\r\n    Container,\r\n} from '@material-ui/core';\r\nimport { Redirect } from 'react-router-dom';\r\nimport FeedPost from './posts/posts';\r\nimport FeedHeader from './feed-header/feed-header';\r\nimport { FeedPush } from '../services/services';\r\nimport PostCreate from './posts/posts-create';\r\nimport Profile from './profile/profile';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\n\r\nconst Feed = () => {\r\n\r\n    const [posts, setPosts] = useState([])\r\n    const [token, setToken] = useState(localStorage.getItem('auth_token'))\r\n    const [search, setSearch] = useState('')\r\n    useEffect(() => {\r\n        FeedPush()\r\n            .then((data) => {\r\n                setPosts(JSON.parse(data))\r\n            })\r\n    }, [])\r\n\r\n    const findPosts = posts.filter(post => {\r\n        return post.title.toLowerCase().includes(search.toLocaleLowerCase())\r\n    })\r\n\r\n    if (token) {\r\n        return (\r\n            <Box display=\"flex\" flexWrap=\"wrap\" justifyContent=\"flex-start\">\r\n                <BrowserRouter basename='test_form/feed'>\r\n                    <Switch>\r\n                        <Route path='/posts' exact>\r\n                            <FeedHeader setToken={setToken} search={search} setSearch={setSearch} />\r\n                            <Container>\r\n                                <PostCreate posts={posts} setPosts={setPosts} />\r\n                                <FeedPost posts={posts} setPosts={setPosts} findPosts={findPosts} />\r\n                            </Container>\r\n                        </Route>\r\n                        <Route path='/profile'>\r\n                            <Profile />\r\n                        </Route>\r\n                    </Switch>\r\n                </BrowserRouter>\r\n\r\n            </Box>\r\n        )\r\n    } else return Redirect('/')\r\n}\r\n\r\nexport default Feed;","import React, { useState } from 'react';\r\nimport Login from './login';\r\nimport Register from './register';\r\nimport Feed from '../feed/feed';\r\nimport './form.scss';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\n\r\n\r\nconst Form = () => {\r\n\r\n  const [nickname, setNickname] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n\r\n  const [disabled, setDisabled] = useState(false)\r\n  const [show, setShow] = useState(false)\r\n  const [buttonStyle, setButtonStyle] = useState(0);\r\n\r\n  const [errorName, setErrorName] = useState(false)\r\n  const [errorEmail, setErrorEmail] = useState(false)\r\n  const [errorPassword, setErrorPassword] = useState(false)\r\n  const [errorConfirmPassword, setErrorConfirmPassword] = useState(false)\r\n  const [helperTextName, setHelperTextName] = useState('')\r\n  const [helperTextEmail, setHelperTextEmail] = useState('')\r\n  const [helperTextPassword, setHelperTextPassword] = useState('')\r\n  const [helperConfirmPassword, setHelperTextConfirmPassword] = useState('')\r\n\r\n  const targetName = (event) => setNickname(event.target.value)\r\n  const targetEmail = (event) => setEmail(event.target.value)\r\n  const targetPassword = (event) => setPassword(event.target.value)\r\n  const targetConfirmPassword = (event) => setConfirmPassword(event.target.value)\r\n\r\n  const checkName = error => text => {\r\n    setErrorName(error)\r\n    setHelperTextName(text)\r\n  }\r\n  const checkEmail = error => text => {\r\n    setErrorEmail(error)\r\n    setHelperTextEmail(text)\r\n  }\r\n  const checkPassword = error => text => {\r\n    setErrorPassword(error)\r\n    setHelperTextPassword(text)\r\n  }\r\n  const checkConfirmPassword = error => text => {\r\n    setErrorConfirmPassword(error)\r\n    setHelperTextConfirmPassword(text)\r\n  }\r\n\r\n  const showPassword = () => {\r\n    if (show === true) setShow(false)\r\n    else setShow(true)\r\n  }\r\n\r\n  const clearType = () => {\r\n    checkName()()\r\n    checkEmail()()\r\n    checkPassword()()\r\n    checkConfirmPassword()()\r\n    setButtonStyle(0)\r\n  }\r\n  const clear = () => {\r\n    setNickname('');\r\n    setEmail('');\r\n    setPassword('');\r\n    setConfirmPassword('');\r\n  }\r\n\r\n  return (\r\n    <div style={{ margin: -8 }}>\r\n      <BrowserRouter basename='/test_form'>\r\n        <Switch>\r\n          <Route path='/' exact>\r\n            <Login\r\n              nickname={nickname} targetName={targetName}\r\n              password={password} targetPassword={targetPassword}\r\n              disabled={disabled} setDisabled={setDisabled}\r\n              errorName={errorName} errorPassword={errorPassword}\r\n              helperTextName={helperTextName} helperTextPassword={helperTextPassword}\r\n              show={show} showPassword={showPassword}\r\n              buttonStyle={buttonStyle} setButtonStyle={setButtonStyle}\r\n              checkName={checkName} checkPassword={checkPassword}\r\n              clear={clear} clearType={clearType}\r\n            />\r\n          </Route>\r\n          <Route path='/register'>\r\n            <Register\r\n              nickname={nickname} targetName={targetName}\r\n              email={email} targetEmail={targetEmail}\r\n              password={password} targetPassword={targetPassword}\r\n              confirmPassword={confirmPassword} targetConfirmPassword={targetConfirmPassword}\r\n              disabled={disabled} setDisabled={setDisabled}\r\n              errorName={errorName} errorEmail={errorEmail}\r\n              errorPassword={errorPassword} errorConfirmPassword={errorConfirmPassword}\r\n              helperTextName={helperTextName} helperTextEmail={helperTextEmail}\r\n              helperTextPassword={helperTextPassword} helperConfirmPassword={helperConfirmPassword}\r\n              checkName={checkName} checkEmail={checkEmail}\r\n              checkPassword={checkPassword} checkConfirmPassword={checkConfirmPassword}\r\n              show={show} showPassword={showPassword}\r\n              buttonStyle={buttonStyle} setButtonStyle={setButtonStyle}\r\n              clear={clear} clearType={clearType}\r\n            />\r\n          </Route>\r\n          <Route path='/feed'><Feed /></Route>\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Form;","export const dataBase = {\r\n    users: []\r\n}","import React, { useEffect } from 'react';\r\nimport Form from './form/form'\r\nimport { dataBase } from './database/database';\r\n\r\nconst App = () => {\r\n    useEffect(() => {\r\n        const DB = localStorage.getItem('database')\r\n\r\n        if (!DB) {\r\n            localStorage.setItem('database', JSON.stringify(dataBase))\r\n        }\r\n    }, [])\r\n\r\n    return <Form />\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}