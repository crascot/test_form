{"version":3,"sources":["form/styles/styles.js","form/login.js","services/services.js","form/register.js","feed/feed-card.jsx","feed/feed.jsx","form/form.js","database/database.js","App.js","index.js"],"names":["useStyles","makeStyles","body","margin","paddingBottom","borderTop","width","marginTop","register","textDecoration","color","hide","display","Login","classes","useState","nickname","setNickname","password","setPassword","disabled","setDisabled","setHide","redirect","setRedirect","Container","maxWidth","Card","className","Grid","container","direction","justify","Typography","variant","Button","to","TextField","label","value","onChange","event","target","type","alignItems","id","size","onClick","userName","userPassword","DB","JSON","parse","localStorage","getItem","Promise","resolve","reject","alert","length","setTimeout","users","find","user","name","SignIn","then","setItem","catch","finally","CircularProgress","Register","email","setEmail","confirmPassword","setConfirmPassword","Clear","userEmail","test","stringify","push","CheckIn","card","minWidth","media","height","borderBottom","title","FeedCard","props","CardContent","gutterBottom","component","header","marginLeft","marginRight","footer","Feed","cards","setCards","fetch","response","json","data","Box","flexWrap","justifyContent","map","Redirect","Form","basename","exact","path","dataBase","App","useEffect","ReactDOM","render","document","getElementById"],"mappings":"wPAGaA,EAAYC,YAAW,CAChCC,KAAM,CACJC,OAAQ,SACRC,cAAe,EACfC,UAAW,oBAEX,MAAO,CACLC,MAAO,OACPC,UAAW,IAGfC,SAAU,CACR,MAAO,CACLC,eAAgB,OAChBC,MAAO,YAGXC,KAAM,CACJC,QAAS,OACTT,OAAQ,M,WCqDCU,EA5DD,WAEZ,IAAMC,EAAUd,IAEhB,EAAgCe,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEA,EAAgCJ,oBAAS,GAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAAwBN,mBAASD,EAAQH,MAAzC,mBAAOA,EAAP,KAAaW,EAAb,KAEA,EAAgCP,mBAAS,IAAzC,mBAAOQ,EAAP,KAAiBC,EAAjB,KA4BA,OACE,cAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,SACE,eAACC,EAAA,EAAD,CAAMC,UAAU,OAAhB,UACE,eAACC,EAAA,EAAD,CAAMD,UAAU,qBAAqBE,WAAS,EAACC,UAAU,MAAMC,QAAQ,gBAAvE,UACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,8FACA,cAACD,EAAA,EAAD,CAAYC,QAAQ,KAApB,gCACA,cAACC,EAAA,EAAD,CAAQP,UAAWd,EAAQN,SAAUY,SAAUA,EAAUc,QAAQ,WAAWxB,MAAM,UAAlF,SAA4F,cAAC,IAAD,CAAM0B,GAAG,YAAT,+HAE9F,eAACP,EAAA,EAAD,CAAMD,UAAS,wBAAmBd,EAAQZ,MAAQ4B,WAAS,EAA3D,UACE,cAACO,EAAA,EAAD,CAAWC,MAAM,gEAAcC,MAAOvB,EAAUwB,SArBxD,SAAoBC,GAClBxB,EAAYwB,EAAMC,OAAOH,QAoBmDnB,SAAUA,EAAUuB,KAAK,SAC/F,cAACN,EAAA,EAAD,CAAWC,MAAM,kFAAiBC,MAAOrB,EAAUsB,SAnB3D,SAAwBC,GACtBtB,EAAYsB,EAAMC,OAAOH,QAkB0DnB,SAAUA,EAAUuB,KAAK,gBAExG,eAACd,EAAA,EAAD,CAAMD,UAAU,uBAAuBE,WAAS,EAACC,UAAU,MAAMC,QAAQ,gBAAgBY,WAAW,SAApG,UACE,eAACT,EAAA,EAAD,CAAQU,GAAG,QAAQC,KAAK,QAAQ1B,SAAUA,EAAUc,QAAQ,YAAYa,QAvC3D,WACnB1B,GAAY,GACZC,EAAQ,MC7BL,SAAgB0B,EAAUC,GAE7B,IAAIC,EAAKC,KAAKC,MAAMC,aAAaC,QAAQ,aAEzC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACpBT,GAEOA,EACRS,EAAOC,MAAM,0JACLT,EAEDA,EAAaU,OAAS,EAC7BF,EAAOC,MAAM,8JAEbE,YAAW,WACQV,EAAGW,MAAMC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,OAAShB,GAAYe,EAAK7C,WAAa+B,KAG7EO,IAGAC,EAAOC,MAAM,oYAElB,KAbHD,EAAOC,MAAM,oFAJbD,EAAOC,MAAM,2JDwBrBO,CAAOjD,EAAUE,GACdgD,MAAK,WACJb,aAAac,QAAQ,cAAc,GACnC3C,EAAY,YACX4C,OAAM,eACRC,SAAQ,WACPhD,GAAY,GACZC,EAAQR,EAAQH,UA6BiFgC,KAAK,SAApG,UAA6G,cAAC,IAAD,CAAUP,GAAIb,IAA3H,oCACA,cAAC+C,EAAA,EAAD,CAAkBzB,GAAG,SAASjB,UAAS,UAAKjB,EAAL,gBACvC,cAACwB,EAAA,EAAD,CAAQY,QApBhB,WACE9B,EAAY,IACZE,EAAY,KAkBkBwB,KAAK,SAASvB,SAAUA,EAAhD,uEEgBKmD,EArEE,WAEb,IAAMzD,EAAUd,IAEhB,EAAgCe,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOyD,EAAP,KAAcC,EAAd,KACA,EAAgC1D,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA8CJ,mBAAS,IAAvD,mBAAO2D,EAAP,KAAwBC,EAAxB,KAEA,EAAgC5D,oBAAS,GAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAAwBN,mBAASD,EAAQH,MAAzC,mBAAOA,EAAP,KAAaW,EAAb,KA4BA,SAASsD,IACL3D,EAAY,IACZwD,EAAS,IACTtD,EAAY,IACZwD,EAAmB,IAGvB,OACI,cAAClD,EAAA,EAAD,CAAWC,SAAS,KAApB,SACI,eAACC,EAAA,EAAD,CAAMC,UAAU,OAAhB,UACI,eAACC,EAAA,EAAD,CAAMD,UAAU,qBAAqBE,WAAS,EAACC,UAAU,MAAMC,QAAQ,gBAAvE,UACI,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,0HACA,cAACD,EAAA,EAAD,CAAYC,QAAQ,KAApB,gCACA,cAACC,EAAA,EAAD,CAAQP,UAAWd,EAAQN,SAAUY,SAAUA,EAAUc,QAAQ,WAAWxB,MAAM,UAAlF,SAA4F,cAAC,IAAD,CAAM0B,GAAG,IAAT,iDAEhG,eAACP,EAAA,EAAD,CAAMD,UAAS,wBAAmBd,EAAQZ,MAAQ4B,WAAS,EAA3D,UACI,cAACO,EAAA,EAAD,CAAWC,MAAM,gEAAcC,MAAOvB,EAAUwB,SA1ChE,SAAoBC,GAChBxB,EAAYwB,EAAMC,OAAOH,QAyCyDnB,SAAUA,EAAUuB,KAAK,SAC/F,cAACN,EAAA,EAAD,CAAWC,MAAM,qGAAqBC,MAAOiC,EAAOhC,SAxCpE,SAAqBC,GACjBgC,EAAShC,EAAMC,OAAOH,QAuCiEnB,SAAUA,EAAUuB,KAAK,UACpG,cAACN,EAAA,EAAD,CAAWC,MAAM,oGAAoBC,MAAOrB,EAAUsB,SAtCtE,SAAwBC,GACpBtB,EAAYsB,EAAMC,OAAOH,QAqCmEnB,SAAUA,EAAUuB,KAAK,aACzG,cAACN,EAAA,EAAD,CAAWC,MAAM,0GAAqBC,MAAOmC,EAAiBlC,SApC9E,SAA+BC,GAC3BkC,EAAmBlC,EAAMC,OAAOH,QAmC2EnB,SAAUA,EAAUuB,KAAK,gBAE5H,eAACd,EAAA,EAAD,CAAMD,UAAU,uBAAuBE,WAAS,EAACC,UAAU,MAAMC,QAAQ,gBAAzE,UACI,cAACG,EAAA,EAAD,CAAQU,GAAG,WAAWC,KAAK,QAAQ1B,SAAUA,EAAUc,QAAQ,YAAYa,QAnCtE,WACjB1B,GAAY,GACZC,EAAQ,MDdT,SAAiB0B,EAAU6B,EAAW5B,EAAcyB,GACvD,OAAO,IAAInB,SAAQ,SAACC,EAASC,GACzB,IACIM,EAAO,CACPC,KAAMhB,EACNwB,MAAOK,EACP3D,SAAU+B,GAGTD,GAEOA,EACRS,EAAOC,MAAM,0JACLmB,EAXA,gDAaIC,KAAKD,GAET5B,EAEDA,EAAaU,OAAS,EAC7BF,EAAOC,MAAM,8JACNT,IAAiByB,EACxBjB,EAAOC,MAAM,6GAEbE,YAAW,WACPJ,EAAQO,KACT,KARHN,EAAOC,MAAM,oFAFbD,EAAOC,MAAM,sGAFbD,EAAOC,MAAM,8EAJbD,EAAOC,MAAM,2JAkBlBQ,MAAK,SAACH,GACL,OAAO,IAAIR,SAAQ,SAACC,EAASC,GACzB,IAAIP,EAAKC,KAAKC,MAAMC,aAAaC,QAAQ,aACzBJ,EAAGW,MAAMC,MAAK,SAAAC,GAAI,OAAIA,EAAKS,QAAUK,KAGjDpB,EAAOC,MAAM,8GAGbL,aAAac,QAAQ,WAAYhB,KAAK4B,UAAUhB,IAChDb,EAAGW,MAAMmB,KAAKjB,GACdV,aAAac,QAAQ,WAAYhB,KAAK4B,UAAU7B,IAChDM,WCzBRyB,CAAQjE,EAAUwD,EAAOtD,EAAUwD,GAC9BR,MAAK,WACFU,OACDR,OAAM,eACRC,SAAQ,WACLhD,GAAY,GACZC,EAAQR,EAAQH,UA0BsFgC,KAAK,SAAvG,0HACA,cAAC2B,EAAA,EAAD,CAAkBzB,GAAG,SAASjB,UAAWjB,IACzC,cAACwB,EAAA,EAAD,CAAQY,QAAS6B,EAAOxD,SAAUA,EAAlC,uE,kBClEdpB,EAAYC,YAAW,CACzBiF,KAAM,CACFC,SAAU,IACVzD,SAAU,IACVnB,UAAW,OACXJ,OAAQ,iBAEZiF,MAAO,CACHjF,OAAQ,SACRkF,OAAQ,IACRC,aAAc,kBAElBC,MAAO,CACHD,aAAc,uBAqBPE,EAjBE,SAACC,GACd,IAAM3E,EAAUd,IAEhB,OACI,cAAC2B,EAAA,EAAD,CAAMC,UAAWd,EAAQoE,KAAMrC,GAAI4C,EAAM5C,GAAzC,SACI,eAAC6C,EAAA,EAAD,WACI,cAACzD,EAAA,EAAD,CAAYL,UAAWd,EAAQyE,MAAOI,cAAY,EAACzD,QAAQ,KAAK0D,UAAU,KAA1E,SACKH,EAAMF,QAEX,cAACtD,EAAA,EAAD,CAAYC,QAAQ,QAAQxB,MAAM,gBAAgBkF,UAAU,IAA5D,SACKH,EAAMvF,aC3BrBF,EAAYC,YAAW,CACzB4F,OAAQ,CACJC,WAAY,IACZC,YAAa,KAEjBC,OAAQ,CACJtE,SAAU,OACVpB,MAAO,OACPC,UAAW,UA8BJ0F,EA1BF,WACT,IAAMnF,EAAUd,IAEhB,EAAyBe,mBAAS,IAAlC,mBAAMmF,EAAN,KAAaC,EAAb,KAOA,OH0CO,IAAI5C,SAAQ,SAACC,GAChB4C,MAAM,8CACDlC,MAAK,SAAAmC,GAAQ,OAAIA,EAASC,UAC1BpC,MAAK,SAAAoC,GAAI,OAAI9C,EAAQL,KAAK4B,UAAUuB,UGjD5CpC,MAAK,SAACqC,GACHJ,EAAShD,KAAKC,MAAMmD,OAGpBlD,aAAaC,QAAQ,cAEjB,eAACkD,EAAA,EAAD,CAAK5E,UAAWd,EAAQ+E,OAAQjF,QAAQ,OAAO6F,SAAS,OAAOC,eAAe,aAA9E,UAEKR,EAAMS,KAAI,SAAAzB,GAAI,OAAI,cAAC,EAAD,CAAUrC,GAAIqC,EAAKrC,GAAI0C,MAAOL,EAAKK,MAAOrF,KAAMgF,EAAKhF,UAExE,cAACsG,EAAA,EAAD,CAAK5E,UAAWd,EAAQkF,OAAxB,SACI,cAAC/D,EAAA,EAAD,0BAKL2E,YAAS,MCxBTC,G,MAZF,WACX,OACE,cAACpF,EAAA,EAAD,UACE,eAAC,IAAD,CAAQqF,SAAS,aAAjB,UACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIpB,UAAW/E,IACjC,cAAC,IAAD,CAAOkG,OAAK,EAACC,KAAK,YAAYpB,UAAWrB,IACzC,cAAC,IAAD,CAAOwC,OAAK,EAACC,KAAK,QAAQpB,UAAWK,WCfhCgB,EAAW,CACpBpD,MAAO,ICeIqD,EAZH,WASR,OARAC,qBAAU,WACK9D,aAAaC,QAAQ,aAG5BD,aAAac,QAAQ,WAAYhB,KAAK4B,UAAUkC,MAErD,IAEI,cAAC,EAAD,KCTXG,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.4d94661d.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core';\r\n\r\n\r\nexport const useStyles = makeStyles({\r\n    body: {\r\n      margin: '20px 0',\r\n      paddingBottom: 5,\r\n      borderTop: '3px solid #0dcaf0',\r\n  \r\n      '& *': {\r\n        width: '100%',\r\n        marginTop: 7,\r\n      },\r\n    },\r\n    register: {\r\n      '& *': {\r\n        textDecoration: 'none',\r\n        color: 'inherit',\r\n      }\r\n    },\r\n    hide: {\r\n      display: 'none',\r\n      margin: 30,\r\n    },\r\n  })","import React, { useState } from 'react';\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n  Card,\r\n  CircularProgress,\r\n  TextField,\r\n  Container\r\n} from '@material-ui/core';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { useStyles } from './styles/styles';\r\nimport { SignIn } from '../services/services';\r\n\r\n\r\nconst Login = () => {\r\n\r\n  const classes = useStyles()\r\n\r\n  const [nickname, setNickname] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const [disabled, setDisabled] = useState(false)\r\n  const [hide, setHide] = useState(classes.hide)\r\n\r\n  const [redirect, setRedirect] = useState('')\r\n\r\n  const handleSubmit = () => {\r\n    setDisabled(true);\r\n    setHide(null);\r\n    SignIn(nickname, password)\r\n      .then(() => {\r\n        localStorage.setItem('auth_token', true)\r\n        setRedirect('/feed')\r\n      }).catch(() => { })\r\n      .finally(() => {\r\n        setDisabled(false);\r\n        setHide(classes.hide);\r\n      })\r\n  }\r\n\r\n  function targetName(event) {\r\n    setNickname(event.target.value)\r\n  }\r\n  function targetPassword(event) {\r\n    setPassword(event.target.value)\r\n  }\r\n\r\n  function Clear() {\r\n    setNickname('');\r\n    setPassword('');\r\n  }\r\n\r\n  return (\r\n    <Container maxWidth='sm'>\r\n      <Card className='form'>\r\n        <Grid className='form-register head' container direction=\"row\" justify=\"space-between\">\r\n          <Typography variant='h5'>Войти в систему</Typography>\r\n          <Typography variant='h5'>или</Typography>\r\n          <Button className={classes.register} disabled={disabled} variant=\"outlined\" color=\"primary\"><Link to='/register'>Зарегистриговаться</Link></Button>\r\n        </Grid>\r\n        <Grid className={`form-register ${classes.body}`} container>\r\n          <TextField label=\"Введите имя\" value={nickname} onChange={targetName} disabled={disabled} type='text' />\r\n          <TextField label=\"Введите пароль\" value={password} onChange={targetPassword} disabled={disabled} type='password' />\r\n        </Grid>\r\n        <Grid className='form-register footer' container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\r\n          <Button id='login' size=\"small\" disabled={disabled} variant=\"contained\" onClick={handleSubmit} type='submit'><Redirect to={redirect} />Войти</Button>\r\n          <CircularProgress id='loader' className={`${hide} + visible`} />\r\n          <Button onClick={Clear} type='submit' disabled={disabled}>Очистить</Button>\r\n        </Grid>\r\n      </Card>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Login;","export function SignIn(userName, userPassword) {\r\n\r\n    let DB = JSON.parse(localStorage.getItem('database'))\r\n\r\n    return new Promise((resolve, reject) => {\r\n        if (!userName) {\r\n            reject(alert('Пожалуйста введите ваше имя'))\r\n        } else if (+userName) {\r\n            reject(alert('Имя не может состоять из цифр'))\r\n        } else if (!userPassword) {\r\n            reject(alert('Введите пароль'))\r\n        } else if (userPassword.length < 8) {\r\n            reject(alert('Этот пароль слишкой короткий'))\r\n        } else {\r\n            setTimeout(() => {\r\n                let findUser = DB.users.find(user => user.name === userName && user.password === userPassword)\r\n\r\n                if (findUser) {\r\n                    resolve()\r\n                }\r\n                else {\r\n                    reject(alert('Данного пользователя не существует или вы неправильно ввели свой пароль'))\r\n                }\r\n            }, 3000);\r\n        }\r\n    })\r\n}\r\n\r\nexport function CheckIn(userName, userEmail, userPassword, confirmPassword) {\r\n    return new Promise((resolve, reject) => {\r\n        const reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n        let user = {\r\n            name: userName,\r\n            email: userEmail,\r\n            password: userPassword\r\n        }\r\n\r\n        if (!userName) {\r\n            reject(alert('Пожалуйста введите ваше имя'))\r\n        } else if (+userName) {\r\n            reject(alert('Имя не может состоять из цифр'))\r\n        } else if (!userEmail) {\r\n            reject(alert('Введите почту'))\r\n        } else if (!reg.test(userEmail)) {\r\n            reject(alert('Почта некорректна'))\r\n        } else if (!userPassword) {\r\n            reject(alert('Введите пароль'))\r\n        } else if (userPassword.length < 8) {\r\n            reject(alert('Этот пароль слишкой короткий'))\r\n        } else if (userPassword !== confirmPassword) {\r\n            reject(alert('Пароли не совпадают'))\r\n        } else {\r\n            setTimeout(() => {\r\n                resolve(user)\r\n            }, 3000);\r\n        }\r\n    }).then((user) => {\r\n        return new Promise((resolve, reject) => {\r\n            let DB = JSON.parse(localStorage.getItem('database'))\r\n            let duplicate = DB.users.find(user => user.email === userEmail)\r\n\r\n            if (duplicate) {\r\n                reject(alert('Данная почта занята'))\r\n            }\r\n            else {\r\n                localStorage.setItem('database', JSON.stringify(user))\r\n                DB.users.push(user)\r\n                localStorage.setItem('database', JSON.stringify(DB))\r\n                resolve()\r\n            }\r\n        })\r\n    })\r\n}\r\n\r\nexport function FeedPush() {\r\n    return new Promise((resolve) => {\r\n        fetch('https://jsonplaceholder.typicode.com/posts')\r\n            .then(response => response.json())\r\n            .then(json => resolve(JSON.stringify(json)))\r\n    })\r\n}","import React, { useState } from 'react';\r\nimport {\r\n    Button,\r\n    Card,\r\n    Grid,\r\n    Typography,\r\n    CircularProgress,\r\n    TextField,\r\n    Container\r\n} from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport { useStyles } from './styles/styles';\r\nimport { CheckIn } from '../services/services';\r\n\r\n\r\nconst Register = () => {\r\n\r\n    const classes = useStyles()\r\n\r\n    const [nickname, setNickname] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n\r\n    const [disabled, setDisabled] = useState(false)\r\n    const [hide, setHide] = useState(classes.hide)\r\n\r\n    function targetName(event) {\r\n        setNickname(event.target.value)\r\n    }\r\n    function targetEmail(event) {\r\n        setEmail(event.target.value)\r\n    }\r\n    function targetPassword(event) {\r\n        setPassword(event.target.value)\r\n    }\r\n    function targetConfirmPassword(event) {\r\n        setConfirmPassword(event.target.value)\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        setDisabled(true);\r\n        setHide(null);\r\n        CheckIn(nickname, email, password, confirmPassword)\r\n            .then(() => {\r\n                Clear()\r\n            }).catch(() => { })\r\n            .finally(() => {\r\n                setDisabled(false);\r\n                setHide(classes.hide);\r\n            })\r\n    }\r\n\r\n    function Clear() {\r\n        setNickname('');\r\n        setEmail('');\r\n        setPassword('');\r\n        setConfirmPassword('');\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth='sm'>\r\n            <Card className='form'>\r\n                <Grid className='form-register head' container direction=\"row\" justify=\"space-between\">\r\n                    <Typography variant='h5'>Зарегистриговаться</Typography>\r\n                    <Typography variant='h5'>или</Typography>\r\n                    <Button className={classes.register} disabled={disabled} variant=\"outlined\" color=\"primary\"><Link to='/'>Войти</Link></Button>\r\n                </Grid>\r\n                <Grid className={`form-register ${classes.body}`} container>\r\n                    <TextField label=\"Введите имя\" value={nickname} onChange={targetName} disabled={disabled} type='text' />\r\n                    <TextField label=\"Введите вашу почту\" value={email} onChange={targetEmail} disabled={disabled} type='email' />\r\n                    <TextField label=\"Придумайте пароль\" value={password} onChange={targetPassword} disabled={disabled} type='password' />\r\n                    <TextField label=\"Подтвердите пароль\" value={confirmPassword} onChange={targetConfirmPassword} disabled={disabled} type='password' />\r\n                </Grid>\r\n                <Grid className='form-register footer' container direction=\"row\" justify=\"space-between\">\r\n                    <Button id='register' size=\"small\" disabled={disabled} variant=\"contained\" onClick={handleSubmit} type='submit' >Зарегистриговаться</Button >\r\n                    <CircularProgress id='loader' className={hide} />\r\n                    <Button onClick={Clear} disabled={disabled} >Очистить</Button>\r\n                </Grid>\r\n            </Card>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport {\r\n    Card,\r\n    CardActionArea,\r\n    CardMedia,\r\n    CardContent,\r\n    Typography,\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    card: {\r\n        minWidth: 280,\r\n        maxWidth: 280,\r\n        marginTop: '2rem',\r\n        margin: '0 14px 0 14px'\r\n    },\r\n    media: {\r\n        margin: '0 auto',\r\n        height: 180,\r\n        borderBottom: '1px solid gray',\r\n    },\r\n    title: {\r\n        borderBottom: '3px solid #0dcaf0',\r\n    }\r\n});\r\n\r\nconst FeedCard = (props) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Card className={classes.card} id={props.id}>\r\n            <CardContent>\r\n                <Typography className={classes.title} gutterBottom variant=\"h5\" component=\"h2\">\r\n                    {props.title}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                    {props.body}\r\n                </Typography>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default FeedCard;","import React, { useEffect, useState } from 'react';\r\nimport {\r\n    Typography,\r\n    Box,\r\n} from '@material-ui/core';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FeedCard from './feed-card';\r\nimport { FeedPush } from '../services/services';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    header: {\r\n        marginLeft: '0',\r\n        marginRight: '0',\r\n    },\r\n    footer: {\r\n        maxWidth: '100%',\r\n        width: '100%',\r\n        marginTop: '2rem',\r\n    },\r\n});\r\n\r\nconst Feed = () => {\r\n    const classes = useStyles();\r\n\r\n    const[cards, setCards] = useState([])\r\n\r\n    FeedPush()\r\n    .then((data) => {\r\n        setCards(JSON.parse(data))\r\n    })\r\n\r\n    if (localStorage.getItem('auth_token')) {\r\n        return (\r\n            <Box className={classes.header} display=\"flex\" flexWrap=\"wrap\" justifyContent=\"flex-start\">\r\n\r\n                {cards.map(card => <FeedCard id={card.id} title={card.title} body={card.body} />)}\r\n\r\n                <Box className={classes.footer}>\r\n                    <Typography>footer</Typography>\r\n                </Box>\r\n            </Box>\r\n        )\r\n    } else {\r\n        return Redirect('/')\r\n    }\r\n}\r\n\r\nexport default Feed;","import React from 'react';\r\nimport { Container } from '@material-ui/core';\r\nimport Login from './login';\r\nimport Register from './register';\r\nimport Feed from '../feed/feed';\r\nimport './form.scss';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\n\r\n\r\nconst Form = () => {\r\n  return (\r\n    <Container>\r\n      <Router basename='/test_form'>\r\n        <Route exact path='/' component={Login} />\r\n        <Route exact path='/register' component={Register} />\r\n        <Route exact path='/feed' component={Feed} />\r\n      </Router>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Form;","export const dataBase = {\r\n    users: []\r\n}","import React, { useEffect } from 'react';\r\nimport Form from './form/form'\r\nimport { dataBase } from './database/database';\r\n\r\nconst App = () => {\r\n    useEffect(() => {\r\n        const DB = localStorage.getItem('database')\r\n\r\n        if (!DB) {\r\n            localStorage.setItem('database', JSON.stringify(dataBase))\r\n        }\r\n    }, [])\r\n\r\n    return <Form />\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}