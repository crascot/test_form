{"version":3,"sources":["form/styles/styles.js","services/services.js","redux/features/form/formSlice.js","form/login.js","form/register.js","feed/posts/pagination/pagination.jsx","feed/posts/posts.jsx","feed/feed-header/feed-header.jsx","feed/posts/posts-create.jsx","feed/profile/user.jsx","redux/features/profile/profileSlice.js","feed/profile/info.jsx","feed/profile/profile.jsx","feed/feed.jsx","form/form.js","database/database.js","App.js","redux/store.js","index.js"],"names":["useStyles","makeStyles","body","margin","paddingBottom","borderTop","marginTop","width","display","alignItems","marginLeft","border","register","textDecoration","color","showPasswordButton","footer","paddingTop","reg","DB","JSON","parse","localStorage","getItem","CheckIn","userName","userEmail","userPassword","confirmPassword","Promise","resolve","reject","user","id","users","length","name","email","password","test","setTimeout","then","find","alert","getLogin","createAsyncThunk","dispatch","started","findUser","setItem","success","catch","finally","finished","getRegister","a","nickname","stringify","push","formSlice","createSlice","initialState","click","disabled","loader","redirect","errorName","errorEmail","errorPassword","errorConfirmPassword","nameText","emailText","passwordText","confirmPasswordText","reducers","state","setName","action","payload","setEmail","setPassword","setConfirmPassword","showErrorName","type","text","showErrorEmail","showErrorPassword","showErrorConfirmPassword","clear","clearType","redirected","actions","Login","loading","formInputs","errors","buttonStyle","show","showPassword","classes","useDispatch","Container","maxWidth","Card","className","Grid","container","direction","justify","Typography","variant","to","onClick","style","Button","TextField","fullWidth","label","value","onChange","e","target","error","helperText","marginBottom","size","CircularProgress","Register","pagination","flexWrap","justifyContent","num","boxShadow","Pagination","postsLength","totalPosts","paginate","pageNumbers","i","Math","ceil","map","number","block","post","minWidth","noPosts","textAlign","icon","cursor","content","title","borderBottom","save","Posts","posts","setPosts","findPosts","useState","edit","setEdit","valueTitle","setValueTitle","valueBody","setValueBody","currentPage","setCurrentPage","lastPostIndex","firstPostsIndex","Box","props","filter","el","CardContent","multiline","gutterBottom","component","newPost","item","savePost","slice","pageNumber","backgroundColor","padding","left","webName","marginRight","fontSize","link","FeedHeader","search","setSearch","userData","anchorEl","setAnchorEl","setRedirect","open","Boolean","leave","removeItem","event","textTransform","aria-controls","aria-haspopup","aria-expanded","undefined","currentTarget","Menu","onClose","MenuListProps","MenuItem","href","center","lineHeight","input","PostCreate","titleText","setTitleText","bodyText","setBodyText","v","trim","random","avatar","borderRadius","textOverflow","overflow","Input","styled","User","setAvatar","Stack","spacing","htmlFor","file","files","reader","FileReader","onload","result","console","log","readAsDataURL","multiple","CardMedia","height","image","alt","Divider","MenuList","option","ListItemIcon","ListItemText","getChange","birthday","gender","phone","duplicate","removeUser","editor","newUser","updateDB","profileSlice","setBirthday","setGender","setPhone","info","blockData","mainTitle","data","whiteSpace","Info","column","useSelector","profile","columns","xs","Alert","severity","paper","Profile","setColumn","setDisplay","useEffect","window","innerWidth","Paper","elevation","Feed","token","fetch","response","json","toLowerCase","includes","toLocaleLowerCase","basename","path","exact","Redirect","Form","setShow","setButtonStyle","form","findNum","split","Number","showError","dataBase","App","configureStore","reducer","profileReducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.cf3d23e5.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core';\r\n\r\n\r\nexport const useStyles = makeStyles({\r\n  body: {\r\n    margin: '20px 0',\r\n    paddingBottom: 5,\r\n    borderTop: '3px solid #0dcaf0',\r\n    '& *': {\r\n      marginTop: 7,\r\n    },\r\n    '& span': {\r\n      width: '100%',\r\n      display: 'flex',\r\n      alignItems: 'flex-end',\r\n\r\n      '& button': {\r\n        marginLeft: '-2px',\r\n        border: '1px solid gray',\r\n\r\n        '& *': {\r\n          margin: '0 auto'\r\n        }\r\n      }\r\n    },\r\n  },\r\n  register: {\r\n    '& *': {\r\n      textDecoration: 'none',\r\n      color: 'inherit',\r\n    }\r\n  },\r\n  showPasswordButton: {\r\n    margin: '0 auto',\r\n    '& svg': {\r\n      marginLeft: 10\r\n    }\r\n  },\r\n  footer: {\r\n    paddingTop: 10,\r\n  },\r\n})","export const reg = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/iu;\r\nexport let DB = JSON.parse(localStorage.getItem('database'));\r\n\r\nexport function SignIn(userEmail, userPassword) {\r\n    return new Promise((resolve, reject) => {\r\n        if (!userEmail || !reg.test(userEmail)) reject()\r\n        if (!userPassword || userPassword.length < 8) reject()\r\n        else {\r\n            setTimeout(() => {\r\n                let findUser = DB.users.find(user => user.email === userEmail && user.password === userPassword)\r\n                if (findUser) {\r\n                    localStorage.setItem('auth_token', true)\r\n                    localStorage.setItem('id', findUser.id)\r\n                    resolve()\r\n                } else reject(alert('Данного пользователя не существует или вы неправильно ввели данные'))\r\n            }, 3000);\r\n        }\r\n    })\r\n}\r\n\r\nexport function CheckIn(userName, userEmail, userPassword, confirmPassword) {\r\n    return new Promise((resolve, reject) => {\r\n        const id = JSON.parse(localStorage.getItem('database')).users.length;\r\n        let user = {\r\n            id: id,\r\n            name: userName,\r\n            email: userEmail,\r\n            password: userPassword\r\n        }\r\n        if (!userName || +userName) reject()\r\n        if (!userEmail || !reg.test(userEmail)) reject()\r\n        if (!userPassword || userPassword.length < 8) reject()\r\n        if (userPassword !== confirmPassword) reject()\r\n        else setTimeout(() => resolve(user), 3000)\r\n    }).then((user) => {\r\n        return new Promise((resolve, reject) => {\r\n            let duplicate = DB.users.find(user => user.email === userEmail);\r\n            if (duplicate) reject(alert('Данная почта занята'))\r\n            else resolve(user)\r\n        })\r\n    })\r\n}\r\n\r\nexport function changeData(name, birthday, gender, password, phone, email) {\r\n    return new Promise((resolve, reject) => {\r\n        let duplicate = DB.users.find(user => user.email === email && user.id !== JSON.parse(localStorage.getItem('id')))\r\n        if (!name || +name) reject('Имя некорректно')\r\n        if (!password || password.length < 8) reject('Пароль слишком короткий')\r\n        if (!phone || phone.length < 11) reject('Некорректный номер телефона')\r\n        if (!email || !reg.test(email)) reject('Почта некорректна')\r\n        if (duplicate) reject('Данная почта занята')\r\n        resolve({ name, birthday, gender, password, phone, email })\r\n    })\r\n}\r\n\r\nexport function FeedPush() {\r\n    return new Promise((resolve) => {\r\n        fetch('https://jsonplaceholder.typicode.com/posts')\r\n            .then(response => response.json())\r\n            .then(json => resolve(JSON.stringify(json)))\r\n    })\r\n}","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { SignIn, CheckIn, DB } from '../../../services/services'\r\n\r\n\r\nconst initialState = {\r\n    click: false,\r\n    disabled: false,\r\n    loader: 'none',\r\n    redirect: false,\r\n\r\n    nickname: '',\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n\r\n    errorName: false,\r\n    errorEmail: false,\r\n    errorPassword: false,\r\n    errorConfirmPassword: false,\r\n\r\n    nameText: '',\r\n    emailText: '',\r\n    passwordText: '',\r\n    confirmPasswordText: '',\r\n}\r\n\r\nexport const getLogin = createAsyncThunk(\r\n    'form/getLogin', function (user, { dispatch }) {\r\n        dispatch(started())\r\n        SignIn(user.email, user.password)\r\n            .then(() => dispatch(success()))\r\n            .catch(() => { })\r\n            .finally(() => dispatch(finished()))\r\n    }\r\n)\r\n\r\nexport const getRegister = createAsyncThunk(\r\n    'form/getRegister', async (user, { dispatch }) => {\r\n        const id = JSON.parse(localStorage.getItem('database')).users.length\r\n        dispatch(started())\r\n        await CheckIn(user.nickname, user.email, user.password, user.confirmPassword)\r\n            .then((user) => {\r\n                localStorage.setItem('auth_token', true)\r\n                localStorage.setItem('id', id)\r\n\r\n                localStorage.setItem('database', JSON.stringify(user))\r\n                DB.users.push(user)\r\n                localStorage.setItem('database', JSON.stringify(DB))\r\n\r\n                dispatch(success())\r\n            })\r\n            .catch(() => { })\r\n            .finally(() => dispatch(finished()))\r\n    }\r\n)\r\n\r\nexport const formSlice = createSlice({\r\n    name: 'form',\r\n    initialState,\r\n    reducers: {\r\n        started: (state) => {\r\n            state.click = true\r\n            state.disabled = true\r\n            state.loader = 'inherit'\r\n        },\r\n        success: (state) => { state.redirect = !state.redirect },\r\n        finished: (state) => {\r\n            state.disabled = false\r\n            state.loader = 'none'\r\n        },\r\n        setName: (state, action) => { state.nickname = action.payload },\r\n        setEmail: (state, action) => { state.email = action.payload },\r\n        setPassword: (state, action) => { state.password = action.payload },\r\n        setConfirmPassword: (state, action) => { state.confirmPassword = action.payload },\r\n        showErrorName: (state, action) => {\r\n            state.errorName = action.payload.type\r\n            state.nameText = action.payload.text\r\n        },\r\n        showErrorEmail: (state, action) => {\r\n            state.errorEmail = action.payload.type\r\n            state.emailText = action.payload.text\r\n        },\r\n        showErrorPassword: (state, action) => {\r\n            state.errorPassword = action.payload.type\r\n            state.passwordText = action.payload.text\r\n        },\r\n        showErrorConfirmPassword: (state, action) => {\r\n            state.errorConfirmPassword = action.payload.type\r\n            state.confirmPasswordText = action.payload.text\r\n        },\r\n        clear: (state) => {\r\n            state.nickname = ''\r\n            state.email = ''\r\n            state.password = ''\r\n            state.confirmPassword = ''\r\n        },\r\n        clearType: (state) => {\r\n            state.click = false\r\n            state.errorName = false\r\n            state.errorEmail = false\r\n            state.errorPassword = false\r\n            state.errorConfirmPassword = false\r\n            state.nameText = ''\r\n            state.emailText = ''\r\n            state.passwordText = ''\r\n            state.confirmPasswordText = ''\r\n        },\r\n        redirected: (state, action) => { state.redirect = action.payload }\r\n    },\r\n})\r\n\r\nexport const {\r\n    started, finished, success,\r\n    setName, setEmail, setPassword, setConfirmPassword,\r\n    showErrorName, showErrorEmail, showErrorPassword, showErrorConfirmPassword,\r\n    clear, clearType, redirected,\r\n} = formSlice.actions\r\n\r\nexport default formSlice.reducer","import React from 'react';\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n  Card,\r\n  CircularProgress,\r\n  TextField,\r\n  Container,\r\n} from '@material-ui/core';\r\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { useStyles } from './styles/styles';\r\nimport { useDispatch } from 'react-redux'\r\nimport { getLogin, setEmail, setPassword, clear, clearType } from '../redux/features/form/formSlice';\r\n\r\n\r\nconst Login = ({\r\n  loading, formInputs, errors,\r\n  buttonStyle,\r\n  show, showPassword }) => {\r\n\r\n  const classes = useStyles()\r\n  const dispatch = useDispatch()\r\n\r\n  return (\r\n    <Container maxWidth='sm'>\r\n      <Card className='form'>\r\n        <Grid className='form-register head' container direction=\"row\" justify=\"space-between\">\r\n          <Typography variant='h5'>Войти в систему</Typography>\r\n          <Typography variant='h5'>или</Typography>\r\n          <Link to='/register' onClick={() => dispatch(clear())} style={{ textDecoration: 'none' }}>\r\n            <Button className={classes.register} onClick={() => dispatch(clearType())} disabled={loading.disabled} variant=\"outlined\" color=\"primary\">\r\n              Зарегистриговаться\r\n            </Button>\r\n          </Link>\r\n        </Grid>\r\n        <Grid className={`form-register ${classes.body}`} container>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Введите почту\"\r\n            value={formInputs.email}\r\n            onChange={(e) => dispatch(setEmail(e.target.value))}\r\n            disabled={loading.disabled}\r\n            type='email'\r\n            error={errors.errorEmail}\r\n            helperText={errors.emailText}\r\n          />\r\n          <span>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Введите пароль\"\r\n              value={formInputs.password}\r\n              onChange={(e) => dispatch(setPassword(e.target.value))}\r\n              disabled={loading.disabled}\r\n              type={show === true ? 'text' : 'password'}\r\n              error={errors.errorPassword}\r\n              helperText={errors.passwordText}\r\n            />\r\n            <Button\r\n              className={classes.showPasswordButton}\r\n              onClick={showPassword}\r\n              disabled={loading.disabled}\r\n              style={{ marginBottom: buttonStyle }}\r\n            >\r\n              {show ? <VisibilityOffIcon /> : <VisibilityIcon />}\r\n            </Button>\r\n          </span>\r\n        </Grid>\r\n        <Grid className={`form-register ${classes.footer}`} container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\r\n          <Button id='login' size=\"small\" disabled={loading.disabled} variant=\"contained\" onClick={() => dispatch(getLogin(formInputs))} type='submit'>\r\n            <Redirect to={loading.redirect === false ? '/' : '/feed/posts'} />\r\n            Войти\r\n          </Button>\r\n          <CircularProgress id='loader' className='visible' style={{ display: loading.loader }} />\r\n          <Button onClick={() => dispatch(clear())} type='submit' disabled={loading.disabled}>Очистить</Button>\r\n        </Grid>\r\n      </Card>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport {\r\n    Button,\r\n    Card,\r\n    Grid,\r\n    Typography,\r\n    CircularProgress,\r\n    TextField,\r\n    Container\r\n} from '@material-ui/core';\r\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { useStyles } from './styles/styles';\r\nimport { useDispatch } from 'react-redux'\r\nimport { getRegister, setName, setEmail, setPassword, setConfirmPassword, clear, clearType } from '../redux/features/form/formSlice';\r\n\r\n\r\nconst Register = ({\r\n    loading, formInputs, errors,\r\n    show, showPassword,\r\n    buttonStyle }) => {\r\n\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n\r\n    return (\r\n        <Container maxWidth='sm'>\r\n            <Card className='form'>\r\n                <Grid className='form-register head' container direction=\"row\" justify=\"space-between\">\r\n                    <Typography variant='h5'>Зарегистриговаться</Typography>\r\n                    <Typography variant='h5'>или</Typography>\r\n                    <Link to='/' onClick={() => dispatch(clear())} style={{ textDecoration: 'none' }}><Button className={classes.register} onClick={() => dispatch(clearType())} disabled={loading.disabled} variant=\"outlined\" color=\"primary\">Войти</Button></Link>\r\n                </Grid>\r\n                <Grid className={`form-register ${classes.body}`} container>\r\n                    <TextField\r\n                        fullWidth\r\n                        label=\"Введите имя\"\r\n                        value={formInputs.nickname}\r\n                        onChange={(e) => dispatch(setName(e.target.value))}\r\n                        disabled={loading.disabled}\r\n                        error={errors.errorName}\r\n                        helperText={errors.nameText}\r\n                    />\r\n                    <TextField\r\n                        fullWidth\r\n                        label=\"Введите почту\"\r\n                        value={formInputs.email}\r\n                        onChange={(e) => dispatch(setEmail(e.target.value))}\r\n                        disabled={loading.disabled}\r\n                        type='email'\r\n                        error={errors.errorEmail}\r\n                        helperText={errors.emailText}\r\n                    />\r\n                    <span>\r\n                        <TextField\r\n                            fullWidth\r\n                            label=\"Введите пароль\"\r\n                            value={formInputs.password}\r\n                            onChange={(e) => dispatch(setPassword(e.target.value))}\r\n                            disabled={loading.disabled}\r\n                            type={show === true ? 'text' : 'password'}\r\n                            error={errors.errorPassword}\r\n                            helperText={errors.passwordText}\r\n                        />\r\n                        <Button\r\n                            className={classes.showPasswordButton}\r\n                            onClick={showPassword}\r\n                            disabled={loading.disabled}\r\n                            style={{ marginBottom: buttonStyle }}\r\n                        >\r\n                            {show ? <VisibilityOffIcon /> : <VisibilityIcon />}\r\n                        </Button>\r\n                    </span>\r\n                    <TextField\r\n                        fullWidth\r\n                        label=\"Подтвердите пароль\"\r\n                        value={formInputs.confirmPassword}\r\n                        onChange={(e) => dispatch(setConfirmPassword(e.target.value))}\r\n                        disabled={loading.disabled}\r\n                        type={show === true ? 'text' : 'password'}\r\n                        error={errors.errorConfirmPassword}\r\n                        helperText={errors.confirmPasswordText}\r\n                    />\r\n                </Grid>\r\n                <Grid className='form-register footer' container direction=\"row\" justify=\"space-between\">\r\n                    <Button id='register' size=\"small\" disabled={loading.disabled} variant=\"contained\" onClick={() => dispatch(getRegister(formInputs))} type='submit' >\r\n                        <Redirect to={loading.redirect === false ? '/register' : '/feed/posts'} />\r\n                        Зарегистриговаться\r\n                    </Button >\r\n                    <CircularProgress id='loader' className='visible' style={{ display: loading.loader }} />\r\n                    <Button onClick={() => dispatch(clear())} disabled={loading.disabled} >Очистить</Button>\r\n                </Grid>\r\n            </Card>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    pagination: {\r\n        width: '100%',\r\n        marginTop: '2rem',\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'center',\r\n    },\r\n    num: {\r\n        width: 30,\r\n        margin: '10px 3px',\r\n        boxShadow: \"0px 2px 1px -1px rgb(0 0 0 / 20%), 0px 1px 1px 0px rgb(0 0 0 / 14%), 0px 1px 3px 0px rgb(0 0 0 / 12%)\"\r\n    }\r\n});\r\n\r\nconst Pagination = ({ postsLength, totalPosts, paginate }) => {\r\n    const classes = useStyles();\r\n\r\n    const pageNumbers = []\r\n    for (let i = 1; i <= Math.ceil(totalPosts / postsLength); i++) {\r\n        pageNumbers.push(i)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.pagination}>\r\n            {\r\n                pageNumbers.map(number => (\r\n                    <Button onClick={() => paginate(number)}\r\n                        className={classes.num}\r\n                        size=\"small\"\r\n                        key={number}\r\n                    >\r\n                        {number}\r\n                    </Button>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pagination;","import React, { useState } from 'react';\r\nimport {\r\n    Card,\r\n    CardContent,\r\n    Typography,\r\n    TextField,\r\n    Box,\r\n    Button,\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport HighlightOff from '@material-ui/icons/HighlightOff';\r\nimport Pagination from './pagination/pagination';\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    block: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'center',\r\n    },\r\n    post: {\r\n        minWidth: 280,\r\n        maxWidth: 280,\r\n        marginTop: '2rem',\r\n        margin: '0 14px',\r\n    },\r\n    noPosts: {\r\n        marginTop: 20,\r\n        textAlign: 'center',\r\n    },\r\n    icon: {\r\n        marginTop: '9px',\r\n        marginLeft: '88%',\r\n        cursor: 'pointer',\r\n    },\r\n    content: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        alignItems: 'center'\r\n    },\r\n    title: {\r\n        width: '100%',\r\n        borderBottom: '3px solid #0dcaf0',\r\n        marginBottom: 4\r\n    },\r\n    body: {\r\n        width: '100%',\r\n    },\r\n    save: {\r\n        width: '100%',\r\n        textAlign: 'right',\r\n        marginTop: 5,\r\n    },\r\n    pagination: {\r\n        marginTop: '2rem',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n    }\r\n});\r\n\r\nconst Posts = ({ posts, setPosts, findPosts }) => {\r\n    const classes = useStyles();\r\n\r\n    const [edit, setEdit] = useState(null)\r\n    const [valueTitle, setValueTitle] = useState('')\r\n    const [valueBody, setValueBody] = useState('')\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n\r\n    let postsLength = 8\r\n    const lastPostIndex = currentPage * postsLength\r\n    const firstPostsIndex = lastPostIndex - postsLength\r\n\r\n    const deletePost = (id) => setPosts(posts.filter((el) => el.id !== id))\r\n\r\n    const editPost = (id, title, body) => {\r\n        setEdit(id)\r\n        setValueTitle(title)\r\n        setValueBody(body)\r\n    }\r\n    const savePost = (id) => {\r\n        let newPost = posts.map(item => {\r\n            if (item.id === id) {\r\n                item.title = valueTitle\r\n                item.body = valueBody\r\n            }\r\n            return item\r\n        })\r\n\r\n        setPosts(newPost)\r\n        setEdit(null)\r\n    }\r\n\r\n    const paginate = pageNumber => setCurrentPage(pageNumber)\r\n\r\n    return (\r\n        <Box className={classes.block}>\r\n            {\r\n                posts.length === 0 ?\r\n                    <Typography variant=\"h3\" className={classes.noPosts}>Посты закончились</Typography>\r\n                    :\r\n                    findPosts.length === 0 ?\r\n                        <Typography variant=\"h3\" className={classes.noPosts}>Пост не найден</Typography>\r\n                        :\r\n                        findPosts.map((props) => (\r\n                            <Card className={classes.post} id={props.id} key={props.id}>\r\n                                <HighlightOff className={classes.icon} onClick={() => deletePost(props.id)} />\r\n                                <CardContent className={classes.content}>\r\n                                    <div className={classes.title}>\r\n                                        {\r\n                                            edit === props.id ? <div>\r\n                                                <TextField value={valueTitle} onChange={(e) => setValueTitle(e.target.value)} fullWidth multiline />\r\n                                            </div>\r\n                                                :\r\n                                                <Typography\r\n                                                    gutterBottom variant=\"h5\"\r\n                                                    component=\"h2\"\r\n                                                >\r\n                                                    {props.title}\r\n                                                </Typography>\r\n                                        }\r\n                                    </div>\r\n                                    <div className={classes.body}>\r\n                                        {\r\n                                            edit === props.id ? <div>\r\n                                                <TextField value={valueBody} onChange={(e) => setValueBody(e.target.value)} fullWidth multiline />\r\n                                            </div>\r\n                                                :\r\n                                                <Typography variant=\"body2\"\r\n                                                    color=\"textSecondary\"\r\n                                                    component=\"p\"\r\n                                                >\r\n                                                    {props.body}\r\n                                                </Typography>\r\n                                        }\r\n                                    </div>\r\n                                    <Typography className={classes.save} variant=\"button\">\r\n                                        {\r\n                                            edit === props.id ?\r\n                                                <Button onClick={() => savePost(props.id)} size='small'>Сохранить</Button>\r\n                                                :\r\n                                                <Button onClick={() => editPost(props.id, props.title, props.body)}>Редактировать</Button>\r\n                                        }\r\n                                    </Typography>\r\n                                </CardContent>\r\n                            </Card>\r\n                        )).slice(firstPostsIndex, lastPostIndex)\r\n            }\r\n            <Pagination\r\n                postsLength={postsLength}\r\n                totalPosts={findPosts.length}\r\n                paginate={paginate}\r\n            />\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Posts;","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    Box,\r\n    Typography,\r\n    Button,\r\n    TextField,\r\n} from '@material-ui/core';\r\nimport { Menu, MenuItem } from '@mui/material';\r\nimport { Redirect } from 'react-router';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    block: {\r\n        width: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        backgroundColor: '#0dcaf0',\r\n        margin: '0 -15xp',\r\n        padding: '15px'\r\n    },\r\n    left: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'space-between',\r\n        textAlign: 'center'\r\n    },\r\n    webName: {\r\n        marginRight: 20\r\n    },\r\n    name: {\r\n        fontSize: 25\r\n    },\r\n    link: {\r\n        textDecoration: 'none',\r\n        color: 'inherit'\r\n    }\r\n});\r\n\r\nconst FeedHeader = ({ search, setSearch, userData }) => {\r\n    const classes = useStyles();\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null)\r\n    const [redirect, setRedirect] = useState('/posts')\r\n\r\n    const open = Boolean(anchorEl)\r\n\r\n    const handleClick = (event) => setAnchorEl(event.currentTarget)\r\n    const handleClose = () => setAnchorEl(null)\r\n    const profile = () => setRedirect('/profile')\r\n    const leave = () => {\r\n        localStorage.removeItem('auth_token')\r\n        localStorage.removeItem('id')\r\n    }\r\n\r\n    return (\r\n        <Box className={classes.block}>\r\n            <div className={classes.left}>\r\n                <Typography variant=\"h4\" className={classes.webName}>Test-Form</Typography>\r\n                <TextField value={search} onChange={(event) => setSearch(event.target.value)} id=\"filled-basic\" label=\"Поиск...\" variant=\"filled\" size=\"small\" />\r\n            </div>\r\n            <div>\r\n                <Button\r\n                    style={{ textTransform: 'capitalize' }}\r\n                    id=\"basic-button\"\r\n                    aria-controls=\"basic-menu\"\r\n                    aria-haspopup=\"true\"\r\n                    aria-expanded={open ? 'true' : undefined}\r\n                    onClick={handleClick}\r\n                >\r\n                    <Typography variant=\"body1\" className={classes.name}>\r\n                        {userData.nickname}\r\n                    </Typography>\r\n                </Button>\r\n                <Menu\r\n                    id=\"basic-menu\"\r\n                    anchorEl={anchorEl}\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    MenuListProps={{\r\n                        'aria-labelledby': 'basic-button',\r\n                    }}\r\n                >\r\n                    <MenuItem onClick={profile}><Redirect to={redirect} />Профиль</MenuItem>\r\n                    <a href='https://crascot.github.io/test_form/' onClick={leave} className={classes.link}><MenuItem onClick={leave}>Выйти</MenuItem></a>\r\n                </Menu>\r\n            </div>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default FeedHeader;","import React, { useState } from 'react';\r\nimport {\r\n    Card,\r\n    CardContent,\r\n    Typography,\r\n    TextField,\r\n    Box,\r\n    Button,\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    block: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'center',\r\n    },\r\n    post: {\r\n        minWidth: 280,\r\n        maxWidth: 280,\r\n        marginTop: '2rem',\r\n        margin: '0 14px',\r\n        padding: 15,\r\n        textAlign: 'center',\r\n    },\r\n    center: {\r\n        lineHeight: 4\r\n    },\r\n    input: {\r\n        lineHeight: 30\r\n    }\r\n});\r\n\r\nconst PostCreate = ({ posts, setPosts }) => {\r\n    const classes = useStyles();\r\n\r\n    const [titleText, setTitleText] = useState('')\r\n    const [bodyText, setBodyText] = useState('')\r\n\r\n    const addPosts = () => {\r\n        if (titleText.trim() && bodyText.trim()) {\r\n\r\n            let newPost = {\r\n                id: Math.random() * posts.length,\r\n                title: titleText,\r\n                body: bodyText\r\n            }\r\n\r\n            setPosts([newPost, ...posts])\r\n\r\n            setTitleText('')\r\n            setBodyText('')\r\n        } else alert('Заполните поле')\r\n    }\r\n\r\n    return (\r\n        <Box className={classes.block}>\r\n            <Card className={classes.post}>\r\n                <Typography variant='h6'>Добавить пост</Typography>\r\n                <CardContent className={classes.center}>\r\n                    <TextField className={classes.input} fullWidth label=\"Заголовок\" value={titleText} onChange={(v) => setTitleText(v.target.value)} type='text' />\r\n                    <TextField className={classes.input} fullWidth label=\"Содержание\" value={bodyText} onChange={(v) => setBodyText(v.target.value)} type='text' />\r\n                </CardContent>\r\n                <Button onClick={addPosts} size='large'>Сохранить</Button>\r\n            </Card>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default PostCreate;","import React, { useState } from 'react';\r\nimport {\r\n    Typography,\r\n    Card,\r\n    CardMedia,\r\n    CardContent,\r\n    MenuList,\r\n    MenuItem,\r\n    ListItemText,\r\n    ListItemIcon,\r\n    Divider,\r\n} from '@mui/material';\r\nimport Stack from '@mui/material/Stack';\r\nimport { styled } from '@mui/material/styles';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FeedIcon from '@mui/icons-material/Feed';\r\nimport LogoutIcon from '@mui/icons-material/Logout';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    user: {\r\n        width: 300,\r\n        minWidth: 150,\r\n    },\r\n    label: {\r\n        margin: '0 auto',\r\n    },\r\n    avatar: {\r\n        borderRadius: '30px',\r\n        cursor: 'pointer',\r\n    },\r\n    name: {\r\n        textAlign: 'center',\r\n        textOverflow: 'ellipsis',\r\n        maxWidth: '100%',\r\n        overflow: 'hidden',\r\n    },\r\n    link: {\r\n        textDecoration: 'none',\r\n        color: 'inherit'\r\n    }\r\n});\r\n\r\nconst Input = styled('input')({\r\n    display: 'none',\r\n});\r\n\r\nconst User = ({ userData }) => {\r\n    const classes = useStyles();\r\n\r\n    const [avatar, setAvatar] = useState(null)\r\n    const loadAvatar = (event) => {\r\n        const file = event.target.files[0];\r\n        if (!file) return;\r\n\r\n        const reader = new FileReader()\r\n\r\n        reader.onload = e => {\r\n            setAvatar(e.target.result)\r\n            console.log(e.target.result);\r\n        }\r\n        reader.readAsDataURL(file)\r\n    }\r\n\r\n    const leave = () => {\r\n        localStorage.removeItem('id')\r\n        localStorage.removeItem('auth_token')\r\n    }\r\n\r\n    return (\r\n        <Card className={`${classes.user} + user`}>\r\n            <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\r\n                <label htmlFor=\"contained-button-file\" className={classes.label}>\r\n                    <Input id=\"contained-button-file\" onChange={loadAvatar} multiple type=\"file\" />\r\n                    <CardMedia className={classes.avatar}\r\n                        component=\"img\"\r\n                        height=\"190\"\r\n                        image={avatar === null ?\r\n                            'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRpAlUbnpAz36HIeIvG7nKBUHuILO3N2qODJxcAuTUSbrf_WoqiVsVpRcolCGCKu7O7f9Y&usqp=CAU'\r\n                            :\r\n                            avatar\r\n                        }\r\n                        alt=\"Avatar\"\r\n                    />\r\n                </label>\r\n            </Stack>\r\n            <CardContent>\r\n                <Typography\r\n                    gutterBottom\r\n                    variant=\"h5\"\r\n                    component=\"div\"\r\n                    className={classes.name}\r\n                >\r\n                    {userData.nickname}\r\n                </Typography>\r\n            </CardContent>\r\n\r\n            <Divider />\r\n\r\n            <MenuList className={`${classes.option} + option`}>\r\n                <Link to='/posts' className={classes.link}>\r\n                    <MenuItem>\r\n                        <ListItemIcon>\r\n                            <FeedIcon fontSize=\"small\" />\r\n                        </ListItemIcon>\r\n                        <ListItemText>Посты</ListItemText>\r\n                    </MenuItem>\r\n                </Link>\r\n                <a href='https://crascot.github.io/test_form/' onClick={leave} className={classes.link}>\r\n                    <MenuItem>\r\n                        <ListItemIcon>\r\n                            <LogoutIcon fontSize=\"small\" />\r\n                        </ListItemIcon>\r\n                        <ListItemText>Выйти</ListItemText>\r\n                    </MenuItem>\r\n                </a>\r\n            </MenuList>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default User;","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport { changeData } from '../../../services/services'\r\nimport { DB } from '../../../services/services'\r\n\r\nconst initialState = {\r\n  nickname: '',\r\n  birthday: '',\r\n  gender: 'Мужской',\r\n  password: '',\r\n  phone: '',\r\n  email: '',\r\n\r\n  editor: '',\r\n}\r\n\r\nexport const getChange = createAsyncThunk(\r\n  'profile/getChange', function (userData, { dispatch }) {\r\n    changeData(userData.nickname, userData.birthday, userData.gender, userData.password, userData.phone, userData.email)\r\n      .then(() => {\r\n        let id = JSON.parse(localStorage.getItem('id'))\r\n        let removeUser = DB.users.filter(user => user.id !== JSON.parse(localStorage.getItem('id')))\r\n        localStorage.setItem('database', JSON.stringify(removeUser))\r\n        \r\n        dispatch(editor(false))\r\n\r\n        let newUser = {\r\n          id: id,\r\n          name: userData.nickname,\r\n          birthday: userData.birthday,\r\n          gender: userData.gender,\r\n          password: userData.password,\r\n          phone: userData.phone,\r\n          email: userData.email\r\n        }\r\n\r\n        const updateDB = {\r\n          users: [...removeUser, newUser]\r\n        }\r\n\r\n        localStorage.setItem('database', JSON.stringify(updateDB));\r\n      })\r\n      .catch((text) => dispatch(error(text)))\r\n  }\r\n)\r\n\r\nexport const profileSlice = createSlice({\r\n  name: 'profile',\r\n  initialState,\r\n  reducers: {\r\n    setName: (state, action) => {  state.nickname = action.payload },\r\n    setBirthday: (state, action) => { state.birthday = action.payload },\r\n    setGender: (state, action) => { state.gender = action.payload },\r\n    setPassword: (state, action) => { state.password = action.payload },\r\n    setPhone: (state, action) => { state.phone = action.payload },\r\n    setEmail: (state, action) => { state.email = action.payload },\r\n\r\n    editor: (state, action) => { state.edit = action.payload },\r\n    error: (state, action) => { state.error = action.payload }\r\n  }\r\n})\r\n\r\nexport const { setName, setBirthday, setGender, setPassword, setPhone, setEmail, editor, error } = profileSlice.actions\r\n\r\nexport default profileSlice.reducer","import React, { useState } from 'react';\r\nimport {\r\n    Grid,\r\n    Box,\r\n    Typography,\r\n    Button,\r\n    Menu,\r\n    MenuItem,\r\n    Input,\r\n    Alert,\r\n} from '@mui/material';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getChange, editor, setEmail } from '../../redux/features/profile/profileSlice';\r\nimport { setName, setBirthday, setGender, setPassword, setPhone } from '../../redux/features/profile/profileSlice';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    info: {\r\n        margin: '30px 15px',\r\n    },\r\n    blockData: {\r\n        margin: '5px 0 !important',\r\n        paddingTop: '0 !important'\r\n    },\r\n    mainTitle: {\r\n        textAlign: 'center',\r\n    },\r\n    title: {\r\n        margin: '0 !important',\r\n        marginRight: '10px !important'\r\n    },\r\n    data: {\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        maxWidth: '100%',\r\n        overflow: 'hidden',\r\n        marginBottom: 4,\r\n    },\r\n    input: {\r\n        width: 150,\r\n        marginBottom: 2,\r\n    },\r\n    alert: {\r\n        width: 'max-content',\r\n        margin: '0 auto',\r\n        padding: '0 10px !important'\r\n    },\r\n\r\n    footer: {\r\n        width: '100%',\r\n        height: '100%',\r\n        marginTop: 30,\r\n        display: 'flex',\r\n        justifyContent: 'flex-end'\r\n    },\r\n});\r\n\r\nconst Info = ({ userData, user, column }) => {\r\n\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n    const edit = useSelector(state => state.profile.edit)\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const handleClick = (event) => setAnchorEl(event.currentTarget)\r\n\r\n    if (!userData.gender) dispatch(setGender('Мужской'))\r\n    const handleClose = () => setAnchorEl(null);\r\n    const changeGenderMen = () => {\r\n        setAnchorEl(null);\r\n        dispatch(setGender('Мужской'))\r\n    }\r\n    const changeGenderWomen = () => {\r\n        setAnchorEl(null);\r\n        dispatch(setGender('Женский'))\r\n    }\r\n\r\n    return (\r\n        <Box className={`${classes.info} + info`}>\r\n            <div>\r\n                <Typography variant=\"h3\" component=\"div\" gutterBottom className={`${classes.mainTitle} + main-title`}>\r\n                    Персональные данные\r\n                </Typography>\r\n\r\n                <div className='container-data'>\r\n                    <Grid container columns={16} direction={column}>\r\n                        <Grid display='flex' alignItems='center' className={`${classes.blockData} + block-data`} item xs={7}>\r\n                            <Typography variant=\"overline\" display=\"block\" className={`${classes.title} + title`} gutterBottom>\r\n                                Имя:\r\n                            </Typography>\r\n                            {\r\n                                edit ?\r\n                                    <Input className={classes.input} value={userData.nickname} onChange={(e) => dispatch(setName(e.target.value))} />\r\n                                    :\r\n                                    <Typography variant=\"h6\" className={classes.data} style={{ maxWidth: 180 }} gutterBottom component=\"p\" key={userData.nickname}>{userData.nickname}</Typography>\r\n                            }\r\n                        </Grid>\r\n                        <Grid display='flex' alignItems='center' className={`${classes.blockData} + block-data`} item xs={9}>\r\n                            <Typography variant=\"overline\" display=\"block\" className={`${classes.title} + title`} gutterBottom>\r\n                                Дата рождения:\r\n                            </Typography>\r\n                            {\r\n                                edit ?\r\n                                    <Input className={classes.input} value={userData.birthday} onChange={(e) => dispatch(setBirthday(e.target.value))} type='date' />\r\n                                    :\r\n                                    <span>\r\n                                        {\r\n                                            user.birthday ?\r\n                                                <Typography variant=\"h6\" style={{ marginBottom: 4 }} gutterBottom component=\"p\" key={userData.birthday}>{userData.birthday}</Typography>\r\n                                                :\r\n                                                <Alert className={classes.alert} severity=\"warning\">Не указано</Alert>\r\n                                        }\r\n                                    </span>\r\n                            }\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <Grid container columns={16} direction={column}>\r\n                        <Grid display='flex' alignItems='center' className={`${classes.blockData} + block-data`} item xs={8}>\r\n                            <Typography variant=\"overline\" display=\"block\" className={`${classes.title} + title`} gutterBottom>\r\n                                Пол:\r\n                            </Typography>\r\n                            <span>\r\n                                {\r\n                                    edit ?\r\n                                        <div>\r\n                                            <Button\r\n                                                style={{ width: 'max-content', marginTop: '-4px' }}\r\n                                                variant=\"outlined\"\r\n                                                id=\"basic-button\"\r\n                                                aria-controls={open ? 'basic-menu' : undefined}\r\n                                                aria-haspopup=\"true\"\r\n                                                aria-expanded={open ? 'true' : undefined}\r\n                                                onClick={handleClick}\r\n                                            >\r\n                                                {userData.gender}\r\n                                            </Button>\r\n                                            <Menu\r\n                                                id=\"basic-menu\"\r\n                                                anchorEl={anchorEl}\r\n                                                open={open}\r\n                                                onClose={handleClose}\r\n                                                MenuListProps={{\r\n                                                    'aria-labelledby': 'basic-button',\r\n                                                }}\r\n                                            >\r\n                                                <MenuItem onClick={changeGenderMen}>Мужской</MenuItem>\r\n                                                <MenuItem onClick={changeGenderWomen}>Женский</MenuItem>\r\n                                            </Menu>\r\n                                        </div>\r\n                                        :\r\n                                        <Typography variant=\"h6\" style={{ marginBottom: 4 }} gutterBottom component=\"p\" key={userData.gender}>{userData.gender}</Typography>\r\n                                }\r\n                            </span>\r\n                        </Grid>\r\n                        <Grid display='flex' alignItems='center' className={`${classes.blockData} + block-data`} item xs={8}>\r\n                            <Typography variant=\"overline\" display=\"block\" className={`${classes.title} + title`} gutterBottom>\r\n                                Пароль:\r\n                            </Typography>\r\n                            {\r\n                                edit ?\r\n                                    <Input className={classes.input} value={userData.password} onChange={(e) => dispatch(setPassword(e.target.value))} />\r\n                                    :\r\n                                    <Typography variant=\"h6\" className={classes.data} style={{ maxWidth: 165 }} gutterBottom component=\"p\" key={userData.password}>{userData.password}</Typography>\r\n                            }\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <Grid container columns={16} direction={column}>\r\n                        <Grid display='flex' alignItems='center' className={`${classes.blockData} + block-data`} item xs={8}>\r\n                            <Typography variant=\"overline\" display=\"block\" className={`${classes.title} + title`} gutterBottom>\r\n                                Телефон:\r\n                            </Typography>\r\n                            {\r\n                                edit ?\r\n                                    <Input className={classes.input} value={userData.phone} onChange={(e) => dispatch(setPhone(e.target.value))} />\r\n                                    :\r\n                                    <span>\r\n                                        {\r\n                                            user.phone ?\r\n                                                <Typography variant=\"h6\" className={classes.data} style={{ maxWidth: 180 }} gutterBottom component=\"p\" key={userData.phone}>{userData.phone}</Typography>\r\n                                                :\r\n                                                <Alert className={classes.alert} severity=\"warning\">Не указан</Alert>\r\n                                        }\r\n                                    </span>\r\n                            }\r\n                        </Grid>\r\n                        <Grid display='flex' alignItems='center' className={`${classes.blockData} + block-data`} item xs={8}>\r\n                            <Typography variant=\"overline\" display=\"block\" className={`${classes.title} + title`} gutterBottom>\r\n                                Почта:\r\n                            </Typography>\r\n                            {\r\n                                edit ?\r\n                                    <Input className={classes.input} value={userData.email} onChange={(e) => dispatch(setEmail(e.target.value))} />\r\n                                    :\r\n                                    <Typography variant=\"h6\" className={classes.data} style={{ maxWidth: 200 }} gutterBottom component=\"p\" key={userData.email}>{userData.email}</Typography>\r\n                            }\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n\r\n                <div className={classes.footer}>\r\n                    {\r\n                        edit ?\r\n                            <Button onClick={() => dispatch(getChange(userData))} variant=\"outlined\">Сохранить</Button>\r\n                            :\r\n                            <Button onClick={() => dispatch(editor(true))} variant=\"outlined\">Изменить</Button>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Info;","import React, { useState, useEffect } from 'react';\r\nimport Container from '@mui/material/Container';\r\nimport User from './user';\r\nimport Info from './info';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@mui/material/Paper';\r\nimport './profile.scss';\r\nimport { Alert } from '@mui/material';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    profile: {\r\n        maxWidth: 'max-content !important',\r\n        margin: '5% 0 0 0',\r\n    },\r\n    paper: {\r\n        overflow: 'hidden',\r\n        marginTop: '5%',\r\n        display: 'flex',\r\n    }\r\n});\r\n\r\nconst Profile = ({ user, userData }) => {\r\n    const classes = useStyles()\r\n    const [column, setColumn] = useState()\r\n    const error = useSelector(state => state.profile.error)\r\n\r\n    const [display, setDisplay] = useState('none')\r\n\r\n    useEffect(() => {\r\n        if (window.innerWidth <= 883) setColumn('column')\r\n        if(error) setDisplay('flex')\r\n    }, [column, error, setDisplay])\r\n\r\n    return (\r\n        <Container className={classes.profile}>\r\n            <Alert variant=\"filled\" severity=\"error\" style={{display: display}}>\r\n                {error}\r\n            </Alert>\r\n\r\n            <Paper elevation={3} className={`${classes.paper} + paper`}>\r\n                <User userData={userData} />\r\n                <Info userData={userData} user={user} column={column} />\r\n            </Paper>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React, { useState, useEffect } from 'react';\r\nimport { Box, Container } from '@material-ui/core';\r\nimport FeedPost from './posts/posts';\r\nimport FeedHeader from './feed-header/feed-header';\r\nimport { DB, FeedPush } from '../services/services';\r\nimport PostCreate from './posts/posts-create';\r\nimport Profile from './profile/profile';\r\nimport { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setName, setBirthday, setGender, setPassword, setPhone, setEmail } from '../redux/features/profile/profileSlice';\r\n\r\n\r\nconst Feed = () => {\r\n    const user = DB.users.find(user => user.id === JSON.parse(localStorage.getItem('id')))\r\n    const dispatch = useDispatch()\r\n\r\n    const [token] = useState(localStorage.getItem('auth_token'))\r\n    const [search, setSearch] = useState('')\r\n    const [posts, setPosts] = useState([])\r\n\r\n    useEffect(() => {\r\n        FeedPush()\r\n            .then((data) => {\r\n                setPosts(JSON.parse(data))\r\n            })\r\n    }, [])\r\n    const findPosts = posts.filter(post => {\r\n        return post.title.toLowerCase().includes(search.toLocaleLowerCase())\r\n    })\r\n\r\n    const userData = {\r\n        nickname: useSelector(state => state.profile.nickname),\r\n        birthday: useSelector(state => state.profile.birthday),\r\n        gender: useSelector(state => state.profile.gender),\r\n        password: useSelector(state => state.profile.password),\r\n        phone: useSelector(state => state.profile.phone),\r\n        email: useSelector(state => state.profile.email)\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(setName(user.name))\r\n        dispatch(setBirthday(user.birthday))\r\n        dispatch(setGender(user.gender))\r\n        dispatch(setPassword(user.password))\r\n        dispatch(setPhone(user.phone))\r\n        dispatch(setEmail(user.email))\r\n    }, [dispatch, user.birthday, user.email, user.gender, user.name, user.password, user.phone])\r\n\r\n    if (token) {\r\n        return (\r\n            <Box display=\"flex\" flexWrap=\"wrap\" justifyContent=\"flex-start\" style={{ margin: -8 }}>\r\n                <BrowserRouter basename='test_form/feed'>\r\n                    <Switch>\r\n                        <Route path='/posts' exact>\r\n                            <FeedHeader search={search} setSearch={setSearch} userData={userData} />\r\n                            <Container>\r\n                                <PostCreate posts={posts} setPosts={setPosts} />\r\n                                <FeedPost posts={posts} setPosts={setPosts} findPosts={findPosts} />\r\n                            </Container>\r\n                        </Route>\r\n                        <Route path='/profile'>\r\n                            <Profile user={user} userData={userData} />\r\n                        </Route>\r\n                    </Switch>\r\n                </BrowserRouter>\r\n\r\n            </Box>\r\n        )\r\n    } else return Redirect('/')\r\n}\r\n\r\nexport default Feed;","import React, { useState, useEffect } from 'react';\r\nimport Login from './login';\r\nimport Register from './register';\r\nimport Feed from '../feed/feed';\r\nimport './form.scss';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport { reg } from '../services/services';\r\nimport {\r\n  showErrorName,\r\n  showErrorEmail,\r\n  showErrorPassword,\r\n  showErrorConfirmPassword,\r\n} from '../redux/features/form/formSlice';\r\n\r\nconst Form = () => {\r\n  const [show, setShow] = useState(false)\r\n  const [buttonStyle, setButtonStyle] = useState(0)\r\n  const showPassword = () => {\r\n    if (show === true) setShow(false)\r\n    else setShow(true)\r\n  }\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const loading = {\r\n    click: useSelector(state => state.form.click),\r\n    disabled: useSelector(state => state.form.disabled),\r\n    redirect: useSelector(state => state.form.redirect),\r\n    loader: useSelector(state => state.form.loader)\r\n  }\r\n\r\n  const formInputs = {\r\n    nickname: useSelector(state => state.form.nickname),\r\n    email: useSelector(state => state.form.email),\r\n    password: useSelector(state => state.form.password),\r\n    confirmPassword: useSelector(state => state.form.confirmPassword)\r\n  }\r\n\r\n  const errors = {\r\n    errorName: useSelector(state => state.form.errorName),\r\n    nameText: useSelector(state => state.form.nameText),\r\n    errorEmail: useSelector(state => state.form.errorEmail),\r\n    emailText: useSelector(state => state.form.emailText),\r\n    errorPassword: useSelector(state => state.form.errorPassword),\r\n    passwordText: useSelector(state => state.form.passwordText),\r\n    errorConfirmPassword: useSelector(state => state.form.errorConfirmPassword),\r\n    confirmPasswordText: useSelector(state => state.form.confirmPasswordText)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (loading.click) {\r\n      let name = formInputs.nickname.split('')\r\n      let findNum = name.find((i) => Number(i))\r\n      let showError = { type: true, text: '' }\r\n\r\n      if (!formInputs.nickname) {\r\n        showError.text = 'Некорректное имя'\r\n        dispatch(showErrorName(showError))\r\n      } else if (findNum) {\r\n        showError.text = 'В имени не должны быть цифры'\r\n        dispatch(showErrorName(showError))\r\n      } else dispatch(showErrorName(''))\r\n\r\n      if (!formInputs.email || !reg.test(formInputs.email)) {\r\n        showError.text = 'Почта некорректна'\r\n        dispatch(showErrorEmail(showError))\r\n      } else dispatch(showErrorEmail(''))\r\n\r\n      if (formInputs.password.length < 8) {\r\n        showError.text = 'Пароль слишкой короткий'\r\n        dispatch(showErrorPassword(showError))\r\n        setButtonStyle(27)\r\n      } else {\r\n        dispatch(showErrorPassword(''))\r\n        setButtonStyle()\r\n      }\r\n      if (formInputs.password !== formInputs.confirmPassword) {\r\n        showError.text = 'Пароли не совпадают'\r\n        dispatch(showErrorConfirmPassword(showError))\r\n      } else dispatch(showErrorConfirmPassword(''))\r\n    } else setButtonStyle()\r\n  }, [loading.click, formInputs.nickname, formInputs.email, formInputs.password, formInputs.confirmPassword, dispatch])\r\n\r\n  return (\r\n    <div>\r\n      <BrowserRouter basename='/test_form'>\r\n        <Switch>\r\n          <Route path='/' exact>\r\n            <Login\r\n              loading={loading} formInputs={formInputs} errors={errors}\r\n              buttonStyle={buttonStyle} setButtonStyle={setButtonStyle}\r\n              show={show} showPassword={showPassword}\r\n            />\r\n          </Route>\r\n          <Route path='/register'>\r\n            <Register\r\n              loading={loading} formInputs={formInputs} errors={errors}\r\n              show={show} showPassword={showPassword}\r\n              buttonStyle={buttonStyle} setButtonStyle={setButtonStyle}\r\n            />\r\n          </Route>\r\n          <Route path='/feed'><Feed /></Route>\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Form;","export const dataBase = {\r\n    users: []\r\n}","import React, { useEffect } from 'react';\r\nimport Form from './form/form'\r\nimport { dataBase } from './database/database';\r\n\r\nconst App = () => {\r\n    useEffect(() => {\r\n        const DB = localStorage.getItem('database')\r\n\r\n        if (!DB) {\r\n            localStorage.setItem('database', JSON.stringify(dataBase))\r\n        }\r\n    }, [])\r\n\r\n    return <Form />\r\n}\r\n\r\nexport default App;","import { configureStore } from '@reduxjs/toolkit'\r\nimport formSlice from './features/form/formSlice'\r\nimport profileReducer from './features/profile/profileSlice'\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    profile: profileReducer,\r\n    form: formSlice,\r\n  }\r\n})","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport store from './redux/store'\r\nimport { Provider } from 'react-redux'\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n)"],"sourceRoot":""}